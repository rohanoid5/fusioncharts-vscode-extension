{
  "Instance": {
    "prefix": "FC",
    "body": [
      "new FusionCharts({",
      "\twidth: '',",
      "\theight: '',",
      "\ttype: '',",
      "\tdataFormat: '',",
      "\trenderAt: '',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t${1}",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a new FusionCharts instance"
  },
  "column2d": {
    "prefix": "FC.column2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'column2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "column3d": {
    "prefix": "FC.column3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'column3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "line": {
    "prefix": "FC.line",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'line',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "area2d": {
    "prefix": "FC.area2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'area2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "bar2d": {
    "prefix": "FC.bar2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'bar2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "bar3d": {
    "prefix": "FC.bar3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'bar3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "pie2d": {
    "prefix": "FC.pie2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'pie2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "pie3d": {
    "prefix": "FC.pie3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'pie3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "doughnut2d": {
    "prefix": "FC.doughnut2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'doughnut2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "doughnut3d": {
    "prefix": "FC.doughnut3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'doughnut3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "pareto2d": {
    "prefix": "FC.pareto2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'pareto2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "pareto3d": {
    "prefix": "FC.pareto3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'pareto3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscolumn2d": {
    "prefix": "FC.mscolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscolumn3d": {
    "prefix": "FC.mscolumn3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscolumn3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msline": {
    "prefix": "FC.msline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msbar2d": {
    "prefix": "FC.msbar2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msbar2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msbar3d": {
    "prefix": "FC.msbar3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msbar3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "overlappedcolumn2d": {
    "prefix": "FC.overlappedcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'overlappedcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "overlappedbar2d": {
    "prefix": "FC.overlappedbar2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'overlappedbar2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msarea": {
    "prefix": "FC.msarea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msarea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "marimekko": {
    "prefix": "FC.marimekko",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'marimekko',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "zoomline": {
    "prefix": "FC.zoomline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'zoomline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "zoomlinedy": {
    "prefix": "FC.zoomlinedy",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'zoomlinedy',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedcolumn2d": {
    "prefix": "FC.stackedcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedcolumn3d": {
    "prefix": "FC.stackedcolumn3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedcolumn3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedbar2d": {
    "prefix": "FC.stackedbar2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedbar2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedbar3d": {
    "prefix": "FC.stackedbar3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedbar3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedarea2d": {
    "prefix": "FC.stackedarea2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedarea2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msstackedcolumn2d": {
    "prefix": "FC.msstackedcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msstackedcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscombi2d": {
    "prefix": "FC.mscombi2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscombi2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscombi3d": {
    "prefix": "FC.mscombi3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscombi3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscolumnline3d": {
    "prefix": "FC.mscolumnline3d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscolumnline3d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedcolumn2dline": {
    "prefix": "FC.stackedcolumn2dline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedcolumn2dline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedcolumn3dline": {
    "prefix": "FC.stackedcolumn3dline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedcolumn3dline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscombidy2d": {
    "prefix": "FC.mscombidy2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscombidy2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mscolumn3dlinedy": {
    "prefix": "FC.mscolumn3dlinedy",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mscolumn3dlinedy',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "stackedcolumn3dlinedy": {
    "prefix": "FC.stackedcolumn3dlinedy",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'stackedcolumn3dlinedy',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msstackedcolumn2dlinedy": {
    "prefix": "FC.msstackedcolumn2dlinedy",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msstackedcolumn2dlinedy',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scatter": {
    "prefix": "FC.scatter",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scatter',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "zoomscatter": {
    "prefix": "FC.zoomscatter",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'zoomscatter',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "bubble": {
    "prefix": "FC.bubble",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'bubble',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollcolumn2d": {
    "prefix": "FC.scrollcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollline2d": {
    "prefix": "FC.scrollline2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollline2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollarea2d": {
    "prefix": "FC.scrollarea2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollarea2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollstackedcolumn2d": {
    "prefix": "FC.scrollstackedcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollstackedcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollcombi2d": {
    "prefix": "FC.scrollcombi2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollcombi2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "scrollcombidy2d": {
    "prefix": "FC.scrollcombidy2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'scrollcombidy2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "angulargauge": {
    "prefix": "FC.angulargauge",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'angulargauge',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "bulb": {
    "prefix": "FC.bulb",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'bulb',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "cylinder": {
    "prefix": "FC.cylinder",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'cylinder',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "hled": {
    "prefix": "FC.hled",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'hled',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "hlineargauge": {
    "prefix": "FC.hlineargauge",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'hlineargauge',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "thermometer": {
    "prefix": "FC.thermometer",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'thermometer',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "vled": {
    "prefix": "FC.vled",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'vled',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimearea": {
    "prefix": "FC.realtimearea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimearea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimecolumn": {
    "prefix": "FC.realtimecolumn",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimecolumn',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimeline": {
    "prefix": "FC.realtimeline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimeline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimestackedarea": {
    "prefix": "FC.realtimestackedarea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimestackedarea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimestackedcolumn": {
    "prefix": "FC.realtimestackedcolumn",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimestackedcolumn',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "realtimelinedy": {
    "prefix": "FC.realtimelinedy",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'realtimelinedy',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "sparkline": {
    "prefix": "FC.sparkline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'sparkline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "sparkcolumn": {
    "prefix": "FC.sparkcolumn",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'sparkcolumn',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "sparkwinloss": {
    "prefix": "FC.sparkwinloss",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'sparkwinloss',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "hbullet": {
    "prefix": "FC.hbullet",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'hbullet',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "vbullet": {
    "prefix": "FC.vbullet",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'vbullet',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "funnel": {
    "prefix": "FC.funnel",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'funnel',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "pyramid": {
    "prefix": "FC.pyramid",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'pyramid',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "gantt": {
    "prefix": "FC.gantt",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'gantt',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "logmscolumn2d": {
    "prefix": "FC.logmscolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'logmscolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "logmsline": {
    "prefix": "FC.logmsline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'logmsline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "spline": {
    "prefix": "FC.spline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'spline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "splinearea": {
    "prefix": "FC.splinearea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'splinearea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msspline": {
    "prefix": "FC.msspline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msspline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "mssplinearea": {
    "prefix": "FC.mssplinearea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'mssplinearea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "errorbar2d": {
    "prefix": "FC.errorbar2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'errorbar2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "errorline": {
    "prefix": "FC.errorline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'errorline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "errorscatter": {
    "prefix": "FC.errorscatter",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'errorscatter',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "inversemsarea": {
    "prefix": "FC.inversemsarea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'inversemsarea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "inversemscolumn2d": {
    "prefix": "FC.inversemscolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'inversemscolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "inversemsline": {
    "prefix": "FC.inversemsline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'inversemsline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "dragcolumn2d": {
    "prefix": "FC.dragcolumn2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'dragcolumn2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "dragline": {
    "prefix": "FC.dragline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'dragline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "dragarea": {
    "prefix": "FC.dragarea",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'dragarea',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "treemap": {
    "prefix": "FC.treemap",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'treemap',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "radar": {
    "prefix": "FC.radar",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'radar',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "heatmap": {
    "prefix": "FC.heatmap",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'heatmap',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "boxandwhisker2d": {
    "prefix": "FC.boxandwhisker2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'boxandwhisker2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "candlestick": {
    "prefix": "FC.candlestick",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'candlestick',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "dragnode": {
    "prefix": "FC.dragnode",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'dragnode',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "msstepLine": {
    "prefix": "FC.msstepLine",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'msstepline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "multiaxisline": {
    "prefix": "FC.multiaxisline",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'multiaxisline',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "multilevelpie": {
    "prefix": "FC.multilevelpie",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'multilevelpie',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "selectscatter": {
    "prefix": "FC.selectscatter",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'selectscatter',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "waterfall2d": {
    "prefix": "FC.waterfall2d",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'waterfall2d',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "kagi": {
    "prefix": "FC.kagi",
    "body": [
      "new FusionCharts({",
      "\twidth: '600px',",
      "\theight: '400px',",
      "\ttype: 'kagi',",
      "\tdataFormat: 'json',",
      "\trenderAt: 'chart-container',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t'caption': 'Add a caption for the chart',",
      "\t\t\t'subCaption': 'Add a subcaption for the chart',",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a Column2D chart in FusionCharts"
  },
  "EditMode": {
    "prefix": "editMode",
    "description": "Description: Whether to render the gauge in edit mode? In edit mode, user can drag and rotate the dial to new values.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"editMode\": \"${1|1,0|}\""
  },
  "ValueBelowPivot": {
    "prefix": "valueBelowPivot",
    "description": "Description: Whether to show dial value below the pivot or above it?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueBelowPivot\": \"${1|1,0|}\""
  },
  "TrendValueDistance": {
    "prefix": "trendValueDistance",
    "description": "Description: Distance between trend values and tick lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueDistance\": \"\""
  },
  "AutoAlignTickValues": {
    "prefix": "autoAlignTickValues",
    "description": "Description: Whether to ask the chart to automatically place tick values to reduce overlapping of the tick values with the gauge.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"autoAlignTickValues\": \"${1|1,0|}\""
  },
  "GaugeStartAngle": {
    "prefix": "gaugeStartAngle",
    "description": "Description: Angle from where the gauge will start drawing. Please see the section Configuring angles & origin to learn more about this. Default value is 180.\n      Type: Number\n      Range: -360-360",
    "body": "\"gaugeStartAngle\": \"\""
  },
  "GaugeEndAngle": {
    "prefix": "gaugeEndAngle",
    "description": "Description: Angle where the gauge will end drawing. Please see the section Configuring angles & origin to learn more about this. Default value is 0.\n      Type: Number\n      Range: -360-360",
    "body": "\"gaugeEndAngle\": \"\""
  },
  "GaugeOuterRadius": {
    "prefix": "gaugeOuterRadius",
    "description": "Description: Outer radius for the color range scale.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeOuterRadius\": \"\""
  },
  "GaugeInnerRadius": {
    "prefix": "gaugeInnerRadius",
    "description": "Description: Inner radius for color range scale. It can either be in exact pixels or in percentage of outer radius. For example, if the value of `gaugeOuterRadius` attribute is `10` and the value of `gaugeInnerRadius` attribute is set to `50%`, the value of `gaugeInnerRadius` will be calculated and set as 5px, i.e. 50% of 10.\n      Type: Number\n      Range: In pixels or in percentage",
    "body": "\"gaugeInnerRadius\": \"\""
  },
  "GaugeFillMix": {
    "prefix": "gaugeFillMix",
    "description": "Description: This attribute specifies the gradient fill formula for the gauge scale. Example: `{light-10},{light-20},{light-60}` \n\n __Note:__ This attribute is not supported in IE8\n      Type: String\n",
    "body": "\"gaugeFillMix\": \"\""
  },
  "GaugeFillRatio": {
    "prefix": "gaugeFillRatio",
    "description": "Description: This attribute sets the ratio of each color separated by comma using `gaugeFillMix` attribute.\n      Type: Number separated by commas\n",
    "body": "\"gaugeFillRatio\": \"\""
  },
  "PivotRadius": {
    "prefix": "pivotRadius",
    "description": "Description: Radius of the pivot.\n      Type: Number\n      Range: In pixels",
    "body": "\"pivotRadius\": \"\""
  },
  "PivotFillColor": {
    "prefix": "pivotFillColor",
    "description": "Description: Fill color for the pivot.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pivotFillColor\": \"\""
  },
  "PivotFillAlpha": {
    "prefix": "pivotFillAlpha",
    "description": "Description: Fill alpha for the pivot.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pivotFillAlpha\": \"\""
  },
  "PivotFillAngle": {
    "prefix": "pivotFillAngle",
    "description": "Description: Angle for fill (if linear gradient).\n      Type: Number\n      Range: 0-360",
    "body": "\"pivotFillAngle\": \"\""
  },
  "PivotFillType": {
    "prefix": "pivotFillType",
    "description": "Description: Whether to fill as linear gradient or radial gradient (if gradient at all)?\n      Type: linear or radial\n",
    "body": "\"pivotFillType\": \"\""
  },
  "PivotFillMix": {
    "prefix": "pivotFillMix",
    "description": "Description: This attribute specifies the gradient fill formula for the pivot. Example: `{light-10},{light-20},{light-60}` \n\n __Note:__ This attribute is not supported in IE8\n      Type: String\n",
    "body": "\"pivotFillMix\": \"\""
  },
  "PivotFillRatio": {
    "prefix": "pivotFillRatio",
    "description": "Description: This attribute sets the ratio of each color separated by comma using `pivotFillMix` attribute.\n      Type: Number separated by commas\n",
    "body": "\"pivotFillRatio\": \"\""
  },
  "ShowPivotBorder": {
    "prefix": "showPivotBorder",
    "description": "Description: Whether to show border for the pivot?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPivotBorder\": \"${1|1,0|}\""
  },
  "PivotBorderThickness": {
    "prefix": "pivotBorderThickness",
    "description": "Description: Border thickness for pivot.\n      Type: Number\n      Range: In pixels",
    "body": "\"pivotBorderThickness\": \"\""
  },
  "PivotBorderColor": {
    "prefix": "pivotBorderColor",
    "description": "Description: Border color for pivot.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pivotBorderColor\": \"\""
  },
  "PivotBorderAlpha": {
    "prefix": "pivotBorderAlpha",
    "description": "Description: Border alpha for pivot.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pivotBorderAlpha\": \"\""
  },
  "Pivotbgcolor": {
    "prefix": "pivotbgcolor",
    "description": "Description: This attribute fills the background color of the pivot.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pivotbgcolor\": \"\""
  },
  "DialbgHoverColor": {
    "prefix": "dialbgHoverColor",
    "description": "Description: This attribute sets the background color of the gauge’s dial when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"dialbgHoverColor\": \"\""
  },
  "DialbgHoverAlpha": {
    "prefix": "dialbgHoverAlpha",
    "description": "Description: This attribute sets the transparency of the gauge’s dial when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dialbgHoverAlpha\": \"\""
  },
  "DialBorderHoverColor": {
    "prefix": "dialBorderHoverColor",
    "description": "Description: Sets the border color for the dial of the gauge when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"dialBorderHoverColor\": \"\""
  },
  "DialBorderHoverAlpha": {
    "prefix": "dialBorderHoverAlpha",
    "description": "Description: Sets the transparency for the dial’s border of the gauge when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dialBorderHoverAlpha\": \"\""
  },
  "DialBorderHoverThickness": {
    "prefix": "dialBorderHoverThickness",
    "description": "Description: Sets the thickness for the dial’s border of the gauge when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"dialBorderHoverThickness\": \"\""
  },
  "BaseWidth": {
    "prefix": "baseWidth",
    "description": "Description: Width of the bottom part of the dial (the part connected to pivot).\n      Type: Number\n      Range: In pixels",
    "body": "\"baseWidth\": \"\""
  },
  "Id": {
    "prefix": "id",
    "description": "Description: Each dial can have a unique ID, using which it can be referred to in JavaScript and real-time data updates.\n      Type: String\n",
    "body": "\"id\": \"\""
  },
  "Radius": {
    "prefix": "radius",
    "description": "Description: Radius for the dial (in pixels).\n      Type: Number\n      Range: In pixels",
    "body": "\"radius\": \"\""
  },
  "RearExtension": {
    "prefix": "rearExtension",
    "description": "Description: If you want the dial to extend beyond the pivot (in opposite side) for more realistic looks, you can set the extension distance (in pixels) using this attribute.\n      Type: Number\n      Range: In pixels",
    "body": "\"rearExtension\": \"\""
  },
  "TopWidth": {
    "prefix": "topWidth",
    "description": "Description: Width of the top part of dial.\n      Type: Number\n      Range: In pixels",
    "body": "\"topWidth\": \"\""
  },
  "ValueX": {
    "prefix": "valueX",
    "description": "Description: Whether to place value textbox x-position?\n      Type: Number\n      Range: In pixels",
    "body": "\"valueX\": \"\""
  },
  "ValueY": {
    "prefix": "valueY",
    "description": "Description: Whether to place value textbox y-position?\n      Type: Number\n      Range: In pixels",
    "body": "\"valueY\": \"\""
  },
  "BaseRadius": {
    "prefix": "baseRadius",
    "description": "Description: Radius to be applied to the vertices of the pivot end of the dial. Default value is `0`. Use this attribute along with non-zero `rearExtension` for better visualization. This attribute is not applicable if a `topWidth` is applied to the dial.\n      Type: Number\n      Range: In pixels",
    "body": "\"baseRadius\": \"\""
  },
  "MarkerBorderColor": {
    "prefix": "markerBorderColor",
    "description": "Description: Border color of marker.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"markerBorderColor\": \"\""
  },
  "MarkerColor": {
    "prefix": "markerColor",
    "description": "Description: Fill color of marker.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"markerColor\": \"\""
  },
  "MarkerRadius": {
    "prefix": "markerRadius",
    "description": "Description: Radius of the marker.\n      Type: Number\n      Range: In pixels",
    "body": "\"markerRadius\": \"\""
  },
  "MarkerTooltext": {
    "prefix": "markerTooltext",
    "description": "Description: You can define the tooltip for a marker using this attribute.\n      Type: String\n",
    "body": "\"markerTooltext\": \"\""
  },
  "UseMarker": {
    "prefix": "useMarker",
    "description": "Description: You can opt to show a triangular marker for each trend-point by setting this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useMarker\": \"${1|1,0|}\""
  },
  "ValueInside": {
    "prefix": "valueInside",
    "description": "Description: Whether to display the trend-point value inside the gauge?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueInside\": \"${1|1,0|}\""
  },
  "AxisLineAlpha": {
    "prefix": "axisLineAlpha",
    "description": "Description: Sets the transparency of the x-axis line. Will work only when _showxaxisline_ is set to 1.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"axisLineAlpha\": \"\""
  },
  "ShowAlternateVGridColor": {
    "prefix": "showAlternateVGridColor",
    "description": "Description: Whether to show alternate colored vertical grid bands.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAlternateVGridColor\": \"${1|1,0|}\""
  },
  "AlternateVGridColor": {
    "prefix": "alternateVGridColor",
    "description": "Description: Color of the alternate vertical grid bands.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"alternateVGridColor\": \"\""
  },
  "AlternateVGridAlpha": {
    "prefix": "alternateVGridAlpha",
    "description": "Description: Alpha (transparency) of the alternate vertical grid bands.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"alternateVGridAlpha\": \"\""
  },
  "DrawCrossLineOnTop": {
    "prefix": "drawCrossLineOnTop",
    "description": "Description: This attribute is used to determine if the cross line will be drawn above the data plot or below the data plot. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawCrossLineOnTop\": \"${1|1,0|}\""
  },
  "ExportCallback": {
    "prefix": "exportCallback",
    "description": "Description: Name of JavaScript function that'll be called back when export process has finished in case of:Client side exportBatch exportServer-side export using 'save' as action\n      Type: String\n",
    "body": "\"exportCallback\": \"\""
  },
  "MaxBarHeight": {
    "prefix": "maxBarHeight",
    "description": "Description: Sets the maximum allowed bar height.\n      Type: Number\n      Range: In Pixels",
    "body": "\"maxBarHeight\": \"\""
  },
  "BarHoverColor": {
    "prefix": "barHoverColor",
    "description": "Description: This attribute specifies the hover color for the bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"barHoverColor\": \"\""
  },
  "BarHoverAlpha": {
    "prefix": "barHoverAlpha",
    "description": "Description: This attribute specifies the transparency of the bar when you hover.\n      Type: Number\n      Range: 1 - 100",
    "body": "\"barHoverAlpha\": \"\""
  },
  "ShowMinValues": {
    "prefix": "showMinValues",
    "description": "Description: This attribute allows you to show or hide the minimum value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMinValues\": \"${1|1,0|}\""
  },
  "ShowMaxValues": {
    "prefix": "showMaxValues",
    "description": "Description: This attribute allows you to show or hide the maximum value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMaxValues\": \"${1|1,0|}\""
  },
  "ShowQ1Values": {
    "prefix": "showQ1Values",
    "description": "Description: This attribute allows you to show or hide the lower quartile value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showQ1Values\": \"${1|1,0|}\""
  },
  "ShowQ3Values": {
    "prefix": "showQ3Values",
    "description": "Description: This attribute allows you to show or hide the upper quartile value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showQ3Values\": \"${1|1,0|}\""
  },
  "ShowMedianValues": {
    "prefix": "showMedianValues",
    "description": "Description: This attribute allows you to show or hide the median value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMedianValues\": \"${1|1,0|}\""
  },
  "MedianColor": {
    "prefix": "medianColor",
    "description": "Description: This attribute sets the color of the line which is used to represent the median.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"medianColor\": \"\""
  },
  "MedianThickness": {
    "prefix": "medianThickness",
    "description": "Description: This attribute sets the thickness of the line which is used to represent the median.\n      Type: Number\n",
    "body": "\"medianThickness\": \"\""
  },
  "MedianAlpha": {
    "prefix": "medianAlpha",
    "description": "Description: This attribute sets the transparency of the line which is used to represent the median.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"medianAlpha\": \"\""
  },
  "ShowMean": {
    "prefix": "showMean",
    "description": "Description: This attribute allows you to show or hide the icon representing the mean value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMean\": \"${1|1,0|}\""
  },
  "ShowSD": {
    "prefix": "showSD",
    "description": "Description: This attribute allows you to show or hide the icon representing the standard deviation value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showSD\": \"${1|1,0|}\""
  },
  "ShowQD": {
    "prefix": "showQD",
    "description": "Description: This attribute allows you to show or hide the icon representing the quartile deviation value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showQD\": \"${1|1,0|}\""
  },
  "ShowMD": {
    "prefix": "showMD",
    "description": "Description: This attribute allows you to show or hide the icon representing the mean deviation value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMD\": \"${1|1,0|}\""
  },
  "MeanIconShape": {
    "prefix": "meanIconShape",
    "description": "Description: This attribute allows you to set the shape of the mean icon.\n      Type: string\n      Range: polygon/spoke",
    "body": "\"meanIconShape\": \"\""
  },
  "MeanIconRadius": {
    "prefix": "meanIconRadius",
    "description": "Description: This attribute allows you to set the radius of the mean icon.\n      Type: Number\n",
    "body": "\"meanIconRadius\": \"\""
  },
  "MeanIconSides": {
    "prefix": "meanIconSides",
    "description": "Description: This attribute allows you to set number of sides of the mean icon.\n      Type: Number\n",
    "body": "\"meanIconSides\": \"\""
  },
  "MeanIconColor": {
    "prefix": "meanIconColor",
    "description": "Description: This attribute allows you to set the color of the mean icon.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"meanIconColor\": \"\""
  },
  "MeanIconAlpha": {
    "prefix": "meanIconAlpha",
    "description": "Description: This attribute allows you to set the transparency of the mean icon.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"meanIconAlpha\": \"\""
  },
  "SDIconShape": {
    "prefix": "SDIconShape",
    "description": "Description: This attribute allows you to set the shape of the standard deviation icon.\n      Type: string\n      Range: polygon/spoke",
    "body": "\"SDIconShape\": \"\""
  },
  "SDIconRadius": {
    "prefix": "SDIconRadius",
    "description": "Description: This attribute allows you to set the radius of the standard deviation icon.\n      Type: Number\n",
    "body": "\"SDIconRadius\": \"\""
  },
  "SDIconSides": {
    "prefix": "SDIconSides",
    "description": "Description: This attribute allows you to set the number of sides of the standard deviation icon.\n      Type: Number\n",
    "body": "\"SDIconSides\": \"\""
  },
  "SDIconColor": {
    "prefix": "SDIconColor",
    "description": "Description: This attribute allows you to set the color of the standard deviation icon.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"SDIconColor\": \"\""
  },
  "SDIconAlpha": {
    "prefix": "SDIconAlpha",
    "description": "Description: This attribute allows you to set the transparency of the standard deviation icon.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"SDIconAlpha\": \"\""
  },
  "QDIconShape": {
    "prefix": "QDIconShape",
    "description": "Description: This attribute allows you to set the shape of the quartile deviation icon.\n      Type: String\n      Range: polygon/spoke",
    "body": "\"QDIconShape\": \"\""
  },
  "QDIconRadius": {
    "prefix": "QDIconRadius",
    "description": "Description: This attribute allows you to set the radius of the quartile deviation icon.\n      Type: Number\n",
    "body": "\"QDIconRadius\": \"\""
  },
  "QDIconSides": {
    "prefix": "QDIconSides",
    "description": "Description: This attribute allows you to set the number of sides of the quartile deviation icon.\n      Type: Number\n",
    "body": "\"QDIconSides\": \"\""
  },
  "QDIconColor": {
    "prefix": "QDIconColor",
    "description": "Description: This attribute allows you to set the color of the quartile deviation icon.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"QDIconColor\": \"\""
  },
  "QDIconAlpha": {
    "prefix": "QDIconAlpha",
    "description": "Description: This attribute allows you to set the transparency of the quartile deviation icon.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"QDIconAlpha\": \"\""
  },
  "MDIconShape": {
    "prefix": "MDIconShape",
    "description": "Description: This attribute allows you to set the shape of the median icon.\n      Type: String\n      Range: polygon/spoke",
    "body": "\"MDIconShape\": \"\""
  },
  "MDIconRadius": {
    "prefix": "MDIconRadius",
    "description": "Description: This attribute allows you to set the radius of the median icon.\n      Type: Number\n",
    "body": "\"MDIconRadius\": \"\""
  },
  "MDIconSides": {
    "prefix": "MDIconSides",
    "description": "Description: This attribute allows you to set the number of sides of the median icon.\n      Type: Number\n",
    "body": "\"MDIconSides\": \"\""
  },
  "MDIconColor": {
    "prefix": "MDIconColor",
    "description": "Description: This attribute allows you to set the color of the median icon.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"MDIconColor\": \"\""
  },
  "MDIconAlpha": {
    "prefix": "MDIconAlpha",
    "description": "Description: This attribute allows you to set the transparency of the median icon.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"MDIconAlpha\": \"\""
  },
  "DrawMeanConnector": {
    "prefix": "drawMeanConnector",
    "description": "Description: This attribute allows you to draw a line connecting all the mean icons of multiple set of data.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawMeanConnector\": \"${1|1,0|}\""
  },
  "DrawSDConnector": {
    "prefix": "drawSDConnector",
    "description": "Description: This attribute allows you to draw a line connecting all the standard deviation icons of multiple set of data.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawSDConnector\": \"${1|1,0|}\""
  },
  "DrawQDConnector": {
    "prefix": "drawQDConnector",
    "description": "Description: This attribute allows you to draw a line connecting all the quartile deviation icons of multiple set of data.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawQDConnector\": \"${1|1,0|}\""
  },
  "DrawMDConnector": {
    "prefix": "drawMDConnector",
    "description": "Description: This attribute allows you to draw a line connecting all the mean deviation icons of multiple set of data.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawMDConnector\": \"${1|1,0|}\""
  },
  "OutlierIconShape": {
    "prefix": "outlierIconShape",
    "description": "Description: This attribute allows you to set the shape of the icon representing the outliers.\n      Type: String\n      Range: polygon/spoke",
    "body": "\"outlierIconShape\": \"\""
  },
  "OutlierIconRadius": {
    "prefix": "outlierIconRadius",
    "description": "Description: This attribute allows you to set the radius of the icon representing the outliers.\n      Type: Number\n",
    "body": "\"outlierIconRadius\": \"\""
  },
  "OutlierIconSides": {
    "prefix": "outlierIconSides",
    "description": "Description: This attribute allows you to set the number of sides of the icon representing the outliers.\n      Type: Number\n",
    "body": "\"outlierIconSides\": \"\""
  },
  "OutlierIconColor": {
    "prefix": "outlierIconColor",
    "description": "Description: This attribute allows you to set the color of the icon representing the outliers.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"outlierIconColor\": \"\""
  },
  "OutlierIconAlpha": {
    "prefix": "outlierIconAlpha",
    "description": "Description: This attribute allows you to set the transparency of the icon representing the outliers.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"outlierIconAlpha\": \"\""
  },
  "WhiskersLimitsWidthRatio": {
    "prefix": "whiskersLimitsWidthRatio",
    "description": "Description: This attribute allows you to set the width of the upper and lower whiskers in percentage with respect to the width of the dataplot.\n      Type: Number\n",
    "body": "\"whiskersLimitsWidthRatio\": \"\""
  },
  "ShowAllOutliers": {
    "prefix": "showAllOutliers",
    "description": "Description: This attribute allows you to show or hide the outlier values of the data plots.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAllOutliers\": \"${1|1,0|}\""
  },
  "OutliersUpperRangeRatio": {
    "prefix": "outliersUpperRangeRatio",
    "description": "Description: This attribute allows you to set the upper limit of the y-axis to display the outlier values which are greater than the default upper limit of the y-axis.\n      Type: Number\n",
    "body": "\"outliersUpperRangeRatio\": \"\""
  },
  "OutliersLowerRangeRatio": {
    "prefix": "outliersLowerRangeRatio",
    "description": "Description: This attribute allows you to set the lower limit of the y-axis to display the outlier values which are smaller than the default lower limit of the y-axis.\n      Type: Number\n",
    "body": "\"outliersLowerRangeRatio\": \"\""
  },
  "UpperQuartileColor": {
    "prefix": "upperQuartileColor",
    "description": "Description: This attribute sets the color of the upper quartile line.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"upperQuartileColor\": \"\""
  },
  "UpperQuartileThickness": {
    "prefix": "upperQuartileThickness",
    "description": "Description: This attribute sets the thickness of the upper quartile line.\n      Type: Number\n",
    "body": "\"upperQuartileThickness\": \"\""
  },
  "UpperQuartileAlpha": {
    "prefix": "upperQuartileAlpha",
    "description": "Description: This attribute sets the transparency of the upper quartile line.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperQuartileAlpha\": \"\""
  },
  "LowerQuartileColor": {
    "prefix": "lowerQuartileColor",
    "description": "Description: This attribute sets the color of the lower quartile line.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lowerQuartileColor\": \"\""
  },
  "LowerQuartileThickness": {
    "prefix": "lowerQuartileThickness",
    "description": "Description: This attribute sets the thickness of the lower quartile line.\n      Type: Number\n",
    "body": "\"lowerQuartileThickness\": \"\""
  },
  "LowerQuartileAlpha": {
    "prefix": "lowerQuartileAlpha",
    "description": "Description: This attribute sets the transparency of the lower quartile line.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerQuartileAlpha\": \"\""
  },
  "UpperBoxColor": {
    "prefix": "upperBoxColor",
    "description": "Description: This attribute sets the color of the lower quartile box.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"upperBoxColor\": \"\""
  },
  "UpperBoxAlpha": {
    "prefix": "upperBoxAlpha",
    "description": "Description: This attribute sets the transparency of the upper quartile box.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperBoxAlpha\": \"\""
  },
  "LowerBoxColor": {
    "prefix": "lowerBoxColor",
    "description": "Description: This attribute sets the color of the lower quartile box.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lowerBoxColor\": \"\""
  },
  "LowerBoxAlpha": {
    "prefix": "lowerBoxAlpha",
    "description": "Description: This attribute sets the transparency of the lower quartile box.\n      Type: Number\n      Range: Hex Color Code",
    "body": "\"lowerBoxAlpha\": \"\""
  },
  "UpperBoxBorderColor": {
    "prefix": "upperBoxBorderColor",
    "description": "Description: This attribute sets the color for the border of the upper quartile box.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"upperBoxBorderColor\": \"\""
  },
  "UpperBoxBorderThickness": {
    "prefix": "upperBoxBorderThickness",
    "description": "Description: This attribute sets the thickness for the border of the upper quartile box.\n      Type: Number\n",
    "body": "\"upperBoxBorderThickness\": \"\""
  },
  "UpperBoxBorderAlpha": {
    "prefix": "upperBoxBorderAlpha",
    "description": "Description: This attribute sets the transparency for the border of the upper quartile box.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperBoxBorderAlpha\": \"\""
  },
  "LowerBoxBorderColor": {
    "prefix": "lowerBoxBorderColor",
    "description": "Description: This attribute sets the color for the border of the lower quartile box.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lowerBoxBorderColor\": \"\""
  },
  "LowerBoxBorderThickness": {
    "prefix": "lowerBoxBorderThickness",
    "description": "Description: This attribute sets the thickness for the border of the lower quartile box.\n      Type: Number\n",
    "body": "\"lowerBoxBorderThickness\": \"\""
  },
  "LowerBoxBorderAlpha": {
    "prefix": "lowerBoxBorderAlpha",
    "description": "Description: This attribute sets the transparency for the border of the lower quartile box.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerBoxBorderAlpha\": \"\""
  },
  "UpperWhiskerColor": {
    "prefix": "upperWhiskerColor",
    "description": "Description: This attribute sets the color of the upper whisker.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"upperWhiskerColor\": \"\""
  },
  "UpperWhiskerThickness": {
    "prefix": "upperWhiskerThickness",
    "description": "Description: This attribute sets the thickness of the upper whisker.\n      Type: Number\n",
    "body": "\"upperWhiskerThickness\": \"\""
  },
  "UpperWhiskerAlpha": {
    "prefix": "upperWhiskerAlpha",
    "description": "Description: This attribute sets the transparency of the upper whisker.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperWhiskerAlpha\": \"\""
  },
  "LowerWhiskerColor": {
    "prefix": "lowerWhiskerColor",
    "description": "Description: This attribute sets the color of the lower whisker.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lowerWhiskerColor\": \"\""
  },
  "LowerWhiskerThickness": {
    "prefix": "lowerWhiskerThickness",
    "description": "Description: This attribute sets the thickness of the lower whisker.\n      Type: Number\n",
    "body": "\"lowerWhiskerThickness\": \"\""
  },
  "LowerWhiskerAlpha": {
    "prefix": "lowerWhiskerAlpha",
    "description": "Description: This attribute sets the alpha of the lower whisker.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerWhiskerAlpha\": \"\""
  },
  "ShowDetailedLegend": {
    "prefix": "showDetailedLegend",
    "description": "Description: Allows you to show or hide the sub items of the legend.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showDetailedLegend\": \"${1|1,0|}\""
  },
  "UpperBoxHoverColor": {
    "prefix": "upperBoxHoverColor",
    "description": "Description: This attribute sets the color of the upper box when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"upperBoxHoverColor\": \"\""
  },
  "UpperBoxHoverAlpha": {
    "prefix": "upperBoxHoverAlpha",
    "description": "Description: This attribute sets the transparency of the upper box when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperBoxHoverAlpha\": \"\""
  },
  "UpperBoxBorderHoverColor": {
    "prefix": "upperBoxBorderHoverColor",
    "description": "Description: This attribute sets the border color of the upper box when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"upperBoxBorderHoverColor\": \"\""
  },
  "UpperBoxBorderHoverAlpha": {
    "prefix": "upperBoxBorderHoverAlpha",
    "description": "Description: This attribute sets the border's transparency of the upper box.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperBoxBorderHoverAlpha\": \"\""
  },
  "UpperBoxBorderHoverThickness": {
    "prefix": "upperBoxBorderHoverThickness",
    "description": "Description: This attribute sets the border thickness of the upper box.\n      Type: Number\n      Range: In pixels",
    "body": "\"upperBoxBorderHoverThickness\": \"\""
  },
  "LowerBoxHoverColor": {
    "prefix": "lowerBoxHoverColor",
    "description": "Description: This attribute sets the color of the lower box when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"lowerBoxHoverColor\": \"\""
  },
  "LowerBoxHoverAlpha": {
    "prefix": "lowerBoxHoverAlpha",
    "description": "Description: This attribute sets the transparency of the lower box when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerBoxHoverAlpha\": \"\""
  },
  "LowerBoxBorderHoverColor": {
    "prefix": "lowerBoxBorderHoverColor",
    "description": "Description: This attribute sets the border color of the lower box when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"lowerBoxBorderHoverColor\": \"\""
  },
  "LowerBoxBorderHoverAlpha": {
    "prefix": "lowerBoxBorderHoverAlpha",
    "description": "Description: This attribute sets the border's transparency of the lower box.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerBoxBorderHoverAlpha\": \"\""
  },
  "LowerBoxBorderHoverThickness": {
    "prefix": "lowerBoxBorderHoverThickness",
    "description": "Description: This attribute sets the border thickness of the lower box.\n      Type: Number\n      Range: In pixels",
    "body": "\"lowerBoxBorderHoverThickness\": \"\""
  },
  "UpperQuartileHoverColor": {
    "prefix": "upperQuartileHoverColor",
    "description": "Description: This attribute sets the color of the upper quartile when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"upperQuartileHoverColor\": \"\""
  },
  "UpperQuartileHoverAlpha": {
    "prefix": "upperQuartileHoverAlpha",
    "description": "Description: This attribute sets the transparency of the upper quartile when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"upperQuartileHoverAlpha\": \"\""
  },
  "UpperQuartileHoverThickness": {
    "prefix": "upperQuartileHoverThickness",
    "description": "Description: This attribute sets the thickness of the upper quartile when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"upperQuartileHoverThickness\": \"\""
  },
  "LowerQuartileHoverColor": {
    "prefix": "lowerQuartileHoverColor",
    "description": "Description: This attribute sets the color of the lower quartile when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"lowerQuartileHoverColor\": \"\""
  },
  "LowerQuartileHoverAlpha": {
    "prefix": "lowerQuartileHoverAlpha",
    "description": "Description: This attribute sets the transparency of the lower quartile when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lowerQuartileHoverAlpha\": \"\""
  },
  "LowerQuartileHoverThickness": {
    "prefix": "lowerQuartileHoverThickness",
    "description": "Description: This attribute sets the thickness of the lower quartile when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"lowerQuartileHoverThickness\": \"\""
  },
  "MedianHoverColor": {
    "prefix": "medianHoverColor",
    "description": "Description: This attribute sets the color of the median when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"medianHoverColor\": \"\""
  },
  "MedianHoverAlpha": {
    "prefix": "medianHoverAlpha",
    "description": "Description: This attribute sets the transparency of the median when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"medianHoverAlpha\": \"\""
  },
  "MedianHoverThickness": {
    "prefix": "medianHoverThickness",
    "description": "Description: This attribute sets the thickness of the median when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"medianHoverThickness\": \"\""
  },
  "ShowMinValue": {
    "prefix": "showMinValue",
    "description": "Description: This attribute allows you to show or hide the minimum value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMinValue\": \"${1|1,0|}\""
  },
  "ShowMaxValue": {
    "prefix": "showMaxValue",
    "description": "Description: This attribute allows you to show or hide the maximum value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMaxValue\": \"${1|1,0|}\""
  },
  "ShowQ1Value": {
    "prefix": "showQ1Value",
    "description": "Description: This attribute allows you to show or hide the lower quartile value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showQ1Value\": \"${1|1,0|}\""
  },
  "ShowQ3Value": {
    "prefix": "showQ3Value",
    "description": "Description: This attribute allows you to show or hide the upper quartile value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showQ3Value\": \"${1|1,0|}\""
  },
  "ShowMedianValue": {
    "prefix": "showMedianValue",
    "description": "Description: This attribute allows you to show or hide the median value of the set of data provided.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMedianValue\": \"${1|1,0|}\""
  },
  "Outliers": {
    "prefix": "outliers",
    "description": "Description: This attribute specifies the outliers or the values which are greater than the maximum number of the set of data provided.\n      Type: Number\n",
    "body": "\"outliers\": \"\""
  },
  "BubbleScale": {
    "prefix": "bubbleScale",
    "description": "Description: If you want to proportionately increase/decrease size of all the bubbles on the chart, you can use this attribute. A value of less than 1 (but greater than 0) will decrease all the bubble sizes and vice versa.\n      Type: Number\n      Range: 0-2",
    "body": "\"bubbleScale\": \"\""
  },
  "MinBubbleRadius": {
    "prefix": "minBubbleRadius",
    "description": "Description: This attribute lets you define a default minimum radius for the bubbles. This is needed to ensure that all bubbles are visible.\n      Type: Number\n",
    "body": "\"minBubbleRadius\": \"\""
  },
  "Showxaxisline": {
    "prefix": "showxaxisline",
    "description": "Description: This attribute if set to _0_, hides the x-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showxaxisline\": \"${1|1,0|}\""
  },
  "BubbleHoverColor": {
    "prefix": "bubbleHoverColor",
    "description": "Description: This attribute specifies the hover color for the bubbles.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bubbleHoverColor\": \"\""
  },
  "BubbleHoverAlpha": {
    "prefix": "bubbleHoverAlpha",
    "description": "Description: This attribute specifies the transparency of the bubble when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bubbleHoverAlpha\": \"\""
  },
  "BubbleHoverScale": {
    "prefix": "bubbleHoverScale",
    "description": "Description: This attribute sets the scale of bubble when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"bubbleHoverScale\": \"\""
  },
  "Is3dOnHover": {
    "prefix": "is3dOnHover",
    "description": "Description: Whether to show 3D bubble on hover. If not specified, the effect is guided by is3D attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"is3dOnHover\": \"${1|1,0|}\""
  },
  "HoverScale": {
    "prefix": "hoverScale",
    "description": "Description: This attribute scales the bubbles on hover.\n      Type: Number\n      Range: In pixels",
    "body": "\"hoverScale\": \"\""
  },
  "Z": {
    "prefix": "z",
    "description": "Description: Z-axis numerical value for the set of data. The size of bubble will depend on this value (with respect to z values of other bubbles on the chart).\n      Type: Number\n      Range: Numeric Value",
    "body": "\"z\": \"\""
  },
  "Showtrendlinelabels": {
    "prefix": "showtrendlinelabels",
    "description": "Description: It sets the configuration whether the trend line labels will be displayed or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showtrendlinelabels\": \"${1|1,0|}\""
  },
  "AutoScale": {
    "prefix": "autoScale",
    "description": "Description: If you've defined the chart parameters (like gauge origin, co-ordinates etc.) using a different chart size and now want to scale the chart to a different size, you need to specify the original width and height and then set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"autoScale\": \"${1|1,0|}\""
  },
  "OrigW": {
    "prefix": "origW",
    "description": "Description: If you've opted to dynamically resize the chart, you can convey the original width of chart using this attribute. It refers to the width based on which you had defined the various co-ordinates/radius of the gauge. For example, if you had designed a gauge with 300 px width and in that you had set the gauge radius to be 100, then you can use the dynamic resizing feature and specify `origW='300'`. It will automatically check the current width and scale the radius etc. appropriately. Please note that both the original width and height of the chart need to be set. To know more on how this attribute works, please read Angular Gauge &gt; Dynamic Resizing page.\n      Type: Number\n      Range: In pixels",
    "body": "\"origW\": \"\""
  },
  "OrigH": {
    "prefix": "origH",
    "description": "Description: If you've opted to dynamically resize the chart, you can convey the original height of chart using this attribute. It refers to the height based on which you had defined the various co-ordinates/radius of the gauge. For example, if you had designed a gauge with 300 px height and in that you had set the gauge radius to be 100, then you can use the dynamic resizing feature and specify `origH='300'`. It will automatically check the current height and scale the radius etc. appropriately. Please note that both the original width and height of the chart need to be set. To know more on how this attribute works, please read Angular Gauge &gt; Dynamic Resizing page.\n      Type: Number\n      Range: In pixels",
    "body": "\"origH\": \"\""
  },
  "UseColorNameAsValue": {
    "prefix": "useColorNameAsValue",
    "description": "Description: Whether to use the color range label as value or show the actual numerical value?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useColorNameAsValue\": \"${1|1,0|}\""
  },
  "PlaceValuesInside": {
    "prefix": "placeValuesInside",
    "description": "Description: Whether to place values inside the bulb or below it?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"placeValuesInside\": \"${1|1,0|}\""
  },
  "RefreshInstantly": {
    "prefix": "refreshInstantly",
    "description": "Description: By default, the real-time charts wait for a few seconds after rendering for the first time and before updating itself with new data. To allow the chart to start updating itself as soon as it is rendered, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"refreshInstantly\": \"${1|1,0|}\""
  },
  "DataStreamURL": {
    "prefix": "dataStreamURL",
    "description": "Description: This parameter sets the path of the page which is supposed to relay real-time data to the chart. If you've special characters as a part of your data stream URL, like `?` or `&`, you'll need to URL Encode the entire `dataStreamURL`. This page needs to be on the same sub-domain on which the chart is hosted and invoked from.\n      Type: URL\n",
    "body": "\"dataStreamURL\": \"\""
  },
  "RefreshInterval": {
    "prefix": "refreshInterval",
    "description": "Description: For this parameter, you can specify the number of seconds after which the chart will look for new data. This process will happen continuously - i.e., if you specify 5 seconds here, the chart will look for new data every 5 seconds.\n      Type: Number\n      Range: In seconds",
    "body": "\"refreshInterval\": \"\""
  },
  "DataStamp": {
    "prefix": "dataStamp",
    "description": "Description: Constantly changing data stamp that can be added to real time Data URL, so as to maintain a state. Please see the section Real time capabilities &gt; Adding data stamp\n      Type: String\n",
    "body": "\"dataStamp\": \"\""
  },
  "ShowRTMenuItem": {
    "prefix": "showRTMenuItem",
    "description": "Description: Whether to show the real-time update related menu items (like Start/Stop Update) in chart's context menu? Note: For JavaScript charts real-time update related menu items do not appear by default. You need to explicitly set `'showRTMenuItem': '1'` in the `chart` object. The menu appears as a button on the bottom-left corner of the JavaScript chart. You can then use the button to Start/Stop Update or Clear chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showRTMenuItem\": \"${1|1,0|}\""
  },
  "GaugeFillAlpha": {
    "prefix": "gaugeFillAlpha",
    "description": "Description: Fill alpha for the bulb.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gaugeFillAlpha\": \"\""
  },
  "GaugeOriginX": {
    "prefix": "gaugeOriginX",
    "description": "Description: If you want to specify your origin X for the bulb, please use this attribute.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeOriginX\": \"\""
  },
  "GaugeOriginY": {
    "prefix": "gaugeOriginY",
    "description": "Description: If you want to specify your origin Y for the bulb, please use this attribute.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeOriginY\": \"\""
  },
  "GaugeRadius": {
    "prefix": "gaugeRadius",
    "description": "Description: Your custom radius for the bulb.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeRadius\": \"\""
  },
  "ShowGaugeBorder": {
    "prefix": "showGaugeBorder",
    "description": "Description: Whether to show a border around bulb?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showGaugeBorder\": \"${1|1,0|}\""
  },
  "GaugeBorderColor": {
    "prefix": "gaugeBorderColor",
    "description": "Description: Color of bulb border. You can either specify a hex code here (like `333333`), or a single token from gradient fill mix like `{dark-20}` or `{light-30}`. The chart will then calculate the border color for each color range individually (based on the color code for each color range).\n      Type: Color Code or Fill Mix formula (but single token)\n      Range: Hex Code or token from gradient fill mix",
    "body": "\"gaugeBorderColor\": \"\""
  },
  "GaugeBorderThickness": {
    "prefix": "gaugeBorderThickness",
    "description": "Description: Thickness of bulb border.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeBorderThickness\": \"\""
  },
  "GaugeBorderAlpha": {
    "prefix": "gaugeBorderAlpha",
    "description": "Description: Alpha of bulb border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gaugeBorderAlpha\": \"\""
  },
  "Is3D": {
    "prefix": "is3D",
    "description": "Description: Whether to render the bulb in 2D or 3D mode? By default, the chart is displayed in 3D mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"is3D\": \"${1|1,0|}\""
  },
  "UpperLimit": {
    "prefix": "upperLimit",
    "description": "Description: This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, the chart automatically calculates the upper limit based on the data provided by you.\n      Type: Number\n",
    "body": "\"upperLimit\": \"\""
  },
  "LowerLimit": {
    "prefix": "lowerLimit",
    "description": "Description: This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, the chart automatically calculates the lower limit based on the data provided by you.\n      Type: Number\n",
    "body": "\"lowerLimit\": \"\""
  },
  "UseMessageLog": {
    "prefix": "useMessageLog",
    "description": "Description: Whether to use message logger for the chart?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useMessageLog\": \"${1|1,0|}\""
  },
  "MessageLogWPercent": {
    "prefix": "messageLogWPercent",
    "description": "Description: This attribute lets you set the width percent of the message logger window w.r.t entire chart width. So, if you set it as 80, the message logger window will take up 80% of chart width.\n      Type: Number\n      Range: In percent",
    "body": "\"messageLogWPercent\": \"\""
  },
  "MessageLogHPercent": {
    "prefix": "messageLogHPercent",
    "description": "Description: This attribute lets you set the height percent of the message logger window w.r.t entire chart height.\n      Type: Number\n      Range: In percent",
    "body": "\"messageLogHPercent\": \"\""
  },
  "MessageLogShowTitle": {
    "prefix": "messageLogShowTitle",
    "description": "Description: Whether to show the title for message logger?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"messageLogShowTitle\": \"${1|1,0|}\""
  },
  "MessageLogTitle": {
    "prefix": "messageLogTitle",
    "description": "Description: If you've opted to show the title for message logger, you can define your custom title here. Examples are &quot;Error log&quot;, &quot;Server History&quot; etc. The title displays at the top left corner of chart.\n      Type: String\n",
    "body": "\"messageLogTitle\": \"\""
  },
  "MessageLogColor": {
    "prefix": "messageLogColor",
    "description": "Description: You can customize the color of the entire message log window by setting a hex value for this attribute.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"messageLogColor\": \"\""
  },
  "MessageGoesToLog": {
    "prefix": "messageGoesToLog",
    "description": "Description: The messages streamed to the chart can either be displayed in the message log window or can be passed to JavaScript (which we'll see next). This attribute lets you control whether the messages should be logged in the in-built log window.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"messageGoesToLog\": \"${1|1,0|}\""
  },
  "MessageGoesToJS": {
    "prefix": "messageGoesToJS",
    "description": "Description: This attribute lets you configure whether each message streamed from the server should be passed to a local JavaScript function.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"messageGoesToJS\": \"${1|1,0|}\""
  },
  "MessageJSHandler": {
    "prefix": "messageJSHandler",
    "description": "Description: If you've opted to pass each message to JavaScript function, this attribute lets you define the name of the function. This helps you create your custom functions to react to messages streamed from server.\n      Type: String\n",
    "body": "\"messageJSHandler\": \"\""
  },
  "MessagePassAllToJS": {
    "prefix": "messagePassAllToJS",
    "description": "Description: Whether to pass all message envelope parameters to the custom JavaScript function.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"messagePassAllToJS\": \"${1|1,0|}\""
  },
  "FormatNumber": {
    "prefix": "formatNumber",
    "description": "Description: This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"formatNumber\": \"${1|1,0|}\""
  },
  "NumberPrefix": {
    "prefix": "numberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.\n      Type: String\n",
    "body": "\"numberPrefix\": \"\""
  },
  "NumberSuffix": {
    "prefix": "numberSuffix",
    "description": "Description: Using this attribute, you could add suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.\n      Type: String\n",
    "body": "\"numberSuffix\": \"\""
  },
  "Decimals": {
    "prefix": "decimals",
    "description": "Description: Number of decimal places to which all numbers on the chart will be rounded to.\n      Type: Number\n",
    "body": "\"decimals\": \"\""
  },
  "ForceDecimals": {
    "prefix": "forceDecimals",
    "description": "Description: Whether to add 0 padding at the end of decimal numbers? For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceDecimals\": \"${1|1,0|}\""
  },
  "FormatNumberScale": {
    "prefix": "formatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if `formatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"formatNumberScale\": \"${1|1,0|}\""
  },
  "DefaultNumberScale": {
    "prefix": "defaultNumberScale",
    "description": "Description: The default unit of the numbers that you're providing to the chart.\n      Type: String\n",
    "body": "\"defaultNumberScale\": \"\""
  },
  "NumberScaleUnit": {
    "prefix": "numberScaleUnit",
    "description": "Description: Unit of each block of the scale.\n      Type: String\n",
    "body": "\"numberScaleUnit\": \"\""
  },
  "NumberScaleValue": {
    "prefix": "numberScaleValue",
    "description": "Description: Range of the various blocks that constitute the scale.\n      Type: String\n",
    "body": "\"numberScaleValue\": \"\""
  },
  "ForceNumberScale": {
    "prefix": "forceNumberScale",
    "description": "Description: If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceNumberScale\": \"${1|1,0|}\""
  },
  "ScaleRecursively": {
    "prefix": "scaleRecursively",
    "description": "Description: Whether recursive scaling should be applied.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"scaleRecursively\": \"${1|1,0|}\""
  },
  "MaxScaleRecursion": {
    "prefix": "maxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"maxScaleRecursion\": \"\""
  },
  "ScaleSeparator": {
    "prefix": "scaleSeparator",
    "description": "Description: What character to use to separate the scales that are generated after recursion?\n      Type: String\n",
    "body": "\"scaleSeparator\": \"\""
  },
  "DecimalSeparator": {
    "prefix": "decimalSeparator",
    "description": "Description: This attribute helps you specify the character to be used as the decimal separator in a number.\n      Type: String\n",
    "body": "\"decimalSeparator\": \"\""
  },
  "ThousandSeparator": {
    "prefix": "thousandSeparator",
    "description": "Description: This attribute helps you specify the character to be used as the thousands separator in a number.\n      Type: String\n",
    "body": "\"thousandSeparator\": \"\""
  },
  "ThousandSeparatorPosition": {
    "prefix": "thousandSeparatorPosition",
    "description": "Description: This option helps you specify the position of the thousand separator.\n      Type: Number\n",
    "body": "\"thousandSeparatorPosition\": \"\""
  },
  "InDecimalSeparator": {
    "prefix": "inDecimalSeparator",
    "description": "Description: In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.\n      Type: String\n",
    "body": "\"inDecimalSeparator\": \"\""
  },
  "InThousandSeparator": {
    "prefix": "inThousandSeparator",
    "description": "Description: In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.\n      Type: String\n",
    "body": "\"inThousandSeparator\": \"\""
  },
  "Valuefontsize": {
    "prefix": "valuefontsize",
    "description": "Description: This attribute specifies the size of the font displayed at the center of the bulb.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"valuefontsize\": \"\""
  },
  "ShowToolTipShadow": {
    "prefix": "showToolTipShadow",
    "description": "Description: Whether to show shadow for tooltips.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolTipShadow\": \"${1|1,0|}\""
  },
  "Tooltipbgalpha": {
    "prefix": "tooltipbgalpha",
    "description": "Description: Sets the transparency of the tooltip.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"tooltipbgalpha\": \"\""
  },
  "Tooltipborderradius": {
    "prefix": "tooltipborderradius",
    "description": "Description: Sets the border radius of the tooltip.\n      Type: Number\n      Range: In Pixels",
    "body": "\"tooltipborderradius\": \"\""
  },
  "Tooltipborderthickness": {
    "prefix": "tooltipborderthickness",
    "description": "Description: Sets the border thickness of the tooltip.\n      Type: Number\n      Range: In Pixels",
    "body": "\"tooltipborderthickness\": \"\""
  },
  "ToolTipPadding": {
    "prefix": "toolTipPadding",
    "description": "Description: This attribute sets the vertical space between the value and the border of the tooltip. If you want more space between the value and the border, you can use this attribute to control it.\n      Type: Number\n      Range: In Pixels",
    "body": "\"toolTipPadding\": \"\""
  },
  "GaugeFillHoverColor": {
    "prefix": "gaugeFillHoverColor",
    "description": "Description: This attribute sets the hover color for the bulb.\n      Type: Color\n      Range: Hex color code",
    "body": "\"gaugeFillHoverColor\": \"\""
  },
  "GaugeFillHoverAlpha": {
    "prefix": "gaugeFillHoverAlpha",
    "description": "Description: This attribute sets the transparency of the bulb when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gaugeFillHoverAlpha\": \"\""
  },
  "Is3donHover": {
    "prefix": "is3donHover",
    "description": "Description: Sets whether to render the bulb in 3D mode when hovered.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"is3donHover\": \"${1|1,0|}\""
  },
  "ShowgaugeBorderonHover": {
    "prefix": "showgaugeBorderonHover",
    "description": "Description: Sets whether to show the border of the bulb when hovered.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showgaugeBorderonHover\": \"${1|1,0|}\""
  },
  "GaugeBorderHoverColor": {
    "prefix": "gaugeBorderHoverColor",
    "description": "Description: Sets the color for border of the bulb when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"gaugeBorderHoverColor\": \"\""
  },
  "GaugeBorderHoverAlpha": {
    "prefix": "gaugeBorderHoverAlpha",
    "description": "Description: Sets the transparency for the border of bulb when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gaugeBorderHoverAlpha\": \"\""
  },
  "GaugeBorderHoverThickness": {
    "prefix": "gaugeBorderHoverThickness",
    "description": "Description: Sets the thickness for the border of bulb when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeBorderHoverThickness\": \"\""
  },
  "Alpha": {
    "prefix": "alpha",
    "description": "Description: Sets the transparency of each range in the color range.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"alpha\": \"\""
  },
  "PlotPriceAs": {
    "prefix": "plotPriceAs",
    "description": "Description: This attribute lets you configure how your price chart would be plotted as. You can use either of the three options - CANDLESTICK, BAR or LINE\n      Type: String\n      Range: CANDLESTICK, LINE OR BAR",
    "body": "\"plotPriceAs\": \"\""
  },
  "PlotClosingPrice": {
    "prefix": "plotClosingPrice",
    "description": "Description: If you have opted to plot the price chart as line, this attribute lets you configure whether the closing price will be used for plot or opening price.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotClosingPrice\": \"${1|1,0|}\""
  },
  "ShowVolumeChart": {
    "prefix": "showVolumeChart",
    "description": "Description: If you want to hide volume chart, you can use this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVolumeChart\": \"${1|1,0|}\""
  },
  "VolumeHeightPercent": {
    "prefix": "volumeHeightPercent",
    "description": "Description: Height of the volume chart in percent (with respect to total chart). By default, it's set to 40%.\n      Type: Number\n      Range: 20%-80%",
    "body": "\"volumeHeightPercent\": \"\""
  },
  "PYAxisName": {
    "prefix": "pYAxisName",
    "description": "Description: The y-axis name for the price chart.\n      Type: String\n",
    "body": "\"pYAxisName\": \"\""
  },
  "VYAxisName": {
    "prefix": "vYAxisName",
    "description": "Description: The y-axis name for the volume chart.\n      Type: String\n",
    "body": "\"vYAxisName\": \"\""
  },
  "XAxisMinValue": {
    "prefix": "xAxisMinValue",
    "description": "Description: The candlestick chart has both x and y axis as numeric. This attribute lets you explicitly set the x-axis lower limit. If you do not specify this value, the chart will automatically calculate the best value for you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"xAxisMinValue\": \"\""
  },
  "XAxisMaxValue": {
    "prefix": "xAxisMaxValue",
    "description": "Description: The candlestick chart has both x and y axis as numeric. This attribute lets you explicitly set the x-axis upper limit. If you do not specify this value, the chart will automatically calculate the best value for you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"xAxisMaxValue\": \"\""
  },
  "PYAxisMaxValue": {
    "prefix": "pYAxisMaxValue",
    "description": "Description: This attribute helps you explicitly set the upper limit of the price chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.\n      Type: Number\n",
    "body": "\"pYAxisMaxValue\": \"\""
  },
  "PYAxisMinValue": {
    "prefix": "pYAxisMinValue",
    "description": "Description: This attribute helps you explicitly set the lower limit of the price chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.\n      Type: Number\n",
    "body": "\"pYAxisMinValue\": \"\""
  },
  "VYAxisMinValue": {
    "prefix": "vYAxisMinValue",
    "description": "Description: Lower limit for the volume chart axis. If you do not specify this, the chart will automatically calculate for you.\n      Type: Number\n",
    "body": "\"vYAxisMinValue\": \"\""
  },
  "VYAxisMaxValue": {
    "prefix": "vYAxisMaxValue",
    "description": "Description: Upper limit for the volume chart axis. If you do not specify this, the chart will automatically calculate for you.\n      Type: Number\n",
    "body": "\"vYAxisMaxValue\": \"\""
  },
  "ForceVYAxisValueDecimals": {
    "prefix": "forceVYAxisValueDecimals",
    "description": "Description: Whether to forcefully attach decimal places to all y-axis values of the volume chart. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all y-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all y-axis numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceVYAxisValueDecimals\": \"${1|1,0|}\""
  },
  "VYAxisValueDecimals": {
    "prefix": "vYAxisValueDecimals",
    "description": "Description: If you have opted to not adjust div lines of the volume chart, you can specify the div line values decimal precision using this attribute.\n      Type: Number\n      Range: 0-10",
    "body": "\"vYAxisValueDecimals\": \"\""
  },
  "PYAxisNameFont": {
    "prefix": "pYAxisNameFont",
    "description": "Description: Sets the primary y-axis font family for the text, in case of a dual-y axis chart\n      Type: String\n      Range: Font Name",
    "body": "\"pYAxisNameFont\": \"\""
  },
  "PYAxisNameFontColor": {
    "prefix": "pYAxisNameFontColor",
    "description": "Description: Sets the primary y-axis font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pYAxisNameFontColor\": \"\""
  },
  "PYAxisNameFontSize": {
    "prefix": "pYAxisNameFontSize",
    "description": "Description: Specifies the primary y-axis font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"pYAxisNameFontSize\": \"\""
  },
  "PYAxisNameFontBold": {
    "prefix": "pYAxisNameFontBold",
    "description": "Description: Whether primary y-axis font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"pYAxisNameFontBold\": \"${1|1,0|}\""
  },
  "PYAxisNameFontItalic": {
    "prefix": "pYAxisNameFontItalic",
    "description": "Description: Whether primary y-axis font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"pYAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "PYAxisNameBgColor": {
    "prefix": "pYAxisNameBgColor",
    "description": "Description: Sets the background color for primary y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pYAxisNameBgColor\": \"\""
  },
  "PYAxisNameBorderColor": {
    "prefix": "pYAxisNameBorderColor",
    "description": "Description: Sets the border around the primary y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pYAxisNameBorderColor\": \"\""
  },
  "PYAxisNameAlpha": {
    "prefix": "pYAxisNameAlpha",
    "description": "Description: Sets the primary y-axis alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pYAxisNameAlpha\": \"\""
  },
  "PYAxisNameFontAlpha": {
    "prefix": "pYAxisNameFontAlpha",
    "description": "Description: Sets the primary y-axis font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pYAxisNameFontAlpha\": \"\""
  },
  "PYAxisNameBgAlpha": {
    "prefix": "pYAxisNameBgAlpha",
    "description": "Description: Sets the primary y-axis background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pYAxisNameBgAlpha\": \"\""
  },
  "PYAxisNameBorderAlpha": {
    "prefix": "pYAxisNameBorderAlpha",
    "description": "Description: Sets the primary y-axis border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pYAxisNameBorderAlpha\": \"\""
  },
  "PYAxisNameBorderPadding": {
    "prefix": "pYAxisNameBorderPadding",
    "description": "Description: Sets the primary y-axis border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"pYAxisNameBorderPadding\": \"\""
  },
  "PYAxisNameBorderRadius": {
    "prefix": "pYAxisNameBorderRadius",
    "description": "Description: Sets the primary y-axis border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"pYAxisNameBorderRadius\": \"\""
  },
  "PYAxisNameBorderThickness": {
    "prefix": "pYAxisNameBorderThickness",
    "description": "Description: Sets the primary y-axis border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"pYAxisNameBorderThickness\": \"\""
  },
  "PYAxisNameBorderDashed": {
    "prefix": "pYAxisNameBorderDashed",
    "description": "Description: Whether the border around the primary y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"pYAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "PYAxisNameBorderDashLen": {
    "prefix": "pYAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the primary y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pYAxisNameBorderDashLen\": \"\""
  },
  "PYAxisNameBorderDashGap": {
    "prefix": "pYAxisNameBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the primary y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pYAxisNameBorderDashGap\": \"\""
  },
  "VYAxisNameFont": {
    "prefix": "vYAxisNameFont",
    "description": "Description: Sets the font for the volume y-axis name.\n      Type: String\n      Range: Font Name",
    "body": "\"vYAxisNameFont\": \"\""
  },
  "VYAxisNameFontColor": {
    "prefix": "vYAxisNameFontColor",
    "description": "Description: Sets the volume y-axis font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vYAxisNameFontColor\": \"\""
  },
  "VYAxisNameFontSize": {
    "prefix": "vYAxisNameFontSize",
    "description": "Description: Specifies the volume y-axis font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"vYAxisNameFontSize\": \"\""
  },
  "VYAxisNameFontBold": {
    "prefix": "vYAxisNameFontBold",
    "description": "Description: Whether volume y-axis font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vYAxisNameFontBold\": \"${1|1,0|}\""
  },
  "VYAxisNameFontItalic": {
    "prefix": "vYAxisNameFontItalic",
    "description": "Description: Whether volume y-axis font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vYAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "VYAxisNameBgColor": {
    "prefix": "vYAxisNameBgColor",
    "description": "Description: Sets the background color for volume y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vYAxisNameBgColor\": \"\""
  },
  "VYAxisNameBorderColor": {
    "prefix": "vYAxisNameBorderColor",
    "description": "Description: Sets the border around the volume y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vYAxisNameBorderColor\": \"\""
  },
  "VYAxisNameAlpha": {
    "prefix": "vYAxisNameAlpha",
    "description": "Description: Sets the volume y-axis alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vYAxisNameAlpha\": \"\""
  },
  "VYAxisNameFontAlpha": {
    "prefix": "vYAxisNameFontAlpha",
    "description": "Description: Sets the volume y-axis font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vYAxisNameFontAlpha\": \"\""
  },
  "VYAxisNameBgAlpha": {
    "prefix": "vYAxisNameBgAlpha",
    "description": "Description: Sets the volume y-axis background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vYAxisNameBgAlpha\": \"\""
  },
  "VYAxisNameBorderAlpha": {
    "prefix": "vYAxisNameBorderAlpha",
    "description": "Description: Sets the volume y-axis border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vYAxisNameBorderAlpha\": \"\""
  },
  "VYAxisNameBorderPadding": {
    "prefix": "vYAxisNameBorderPadding",
    "description": "Description: Sets the volume y-axis border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"vYAxisNameBorderPadding\": \"\""
  },
  "VYAxisNameBorderRadius": {
    "prefix": "vYAxisNameBorderRadius",
    "description": "Description: Sets the volume y-axis border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"vYAxisNameBorderRadius\": \"\""
  },
  "VYAxisNameBorderThickness": {
    "prefix": "vYAxisNameBorderThickness",
    "description": "Description: Sets the volume y-axis border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"vYAxisNameBorderThickness\": \"\""
  },
  "VYAxisNameBorderDashed": {
    "prefix": "vYAxisNameBorderDashed",
    "description": "Description: Whether the border around the volume y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vYAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "VYAxisNameBorderDashLen": {
    "prefix": "vYAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the volume y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"vYAxisNameBorderDashLen\": \"\""
  },
  "VYAxisNameBorderDashGap": {
    "prefix": "vYAxisNameBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the volume y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"vYAxisNameBorderDashGap\": \"\""
  },
  "BearBorderColor": {
    "prefix": "bearBorderColor",
    "description": "Description: Border color for the bear candles/lines/bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bearBorderColor\": \"\""
  },
  "BearFillColor": {
    "prefix": "bearFillColor",
    "description": "Description: Fill color for the bear candles/lines/bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bearFillColor\": \"\""
  },
  "BullBorderColor": {
    "prefix": "bullBorderColor",
    "description": "Description: Border color for the bull candles/lines/bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bullBorderColor\": \"\""
  },
  "BullFillColor": {
    "prefix": "bullFillColor",
    "description": "Description: Fill color for the bull candles/lines/bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bullFillColor\": \"\""
  },
  "RollOverBandColor": {
    "prefix": "rollOverBandColor",
    "description": "Description: When you hover your mouse over any candle on the chart, you'll see a colored band moving with your mouse. This attribute lets you set the color of that band.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"rollOverBandColor\": \"\""
  },
  "RollOverBandAlpha": {
    "prefix": "rollOverBandAlpha",
    "description": "Description: Lets you set the alpha of the color band.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"rollOverBandAlpha\": \"\""
  },
  "ShowVPlotBorder": {
    "prefix": "showVPlotBorder",
    "description": "Description: Whether to show plot border for the volume chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVPlotBorder\": \"${1|1,0|}\""
  },
  "VPlotBorderColor": {
    "prefix": "vPlotBorderColor",
    "description": "Description: Border color for the volume chart bars.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vPlotBorderColor\": \"\""
  },
  "VPlotBorderThickness": {
    "prefix": "vPlotBorderThickness",
    "description": "Description: Thickness of border of the volume chart bars.\n      Type: Number\n      Range: In Pixels",
    "body": "\"vPlotBorderThickness\": \"\""
  },
  "VPlotBorderAlpha": {
    "prefix": "vPlotBorderAlpha",
    "description": "Description: Alpha of border of the volume chart bars.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vPlotBorderAlpha\": \"\""
  },
  "PlotLineThickness": {
    "prefix": "plotLineThickness",
    "description": "Description: Thickness of the lines on the chart, if you're plotting the price chart as lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotLineThickness\": \"\""
  },
  "PlotLineAlpha": {
    "prefix": "plotLineAlpha",
    "description": "Description: Alpha of the lines on the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotLineAlpha\": \"\""
  },
  "PlotLineDashLen": {
    "prefix": "plotLineDashLen",
    "description": "Description: Sets the length of each dash when plot lines are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotLineDashLen\": \"\""
  },
  "PlotLineDashGap": {
    "prefix": "plotLineDashGap",
    "description": "Description: Sets the gap between consecutive dashes when plot lines are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotLineDashGap\": \"\""
  },
  "NumPDivLines": {
    "prefix": "numPDivLines",
    "description": "Description: Number of divisional lines to be plotted on the price chart.\n      Type: Number\n",
    "body": "\"numPDivLines\": \"\""
  },
  "ForceVDecimals": {
    "prefix": "forceVDecimals",
    "description": "Description: Whether to add 0 padding at the end of decimal numbers of the volume chart. For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceVDecimals\": \"${1|1,0|}\""
  },
  "VFormatNumber": {
    "prefix": "vFormatNumber",
    "description": "Description: This configuration determines whether the numbers belonging to volume chart will be formatted using commas, e.g., 40,000 if 'vFormatNumber': '1'; and 40000 if 'vFormatNumber' : '0';\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vFormatNumber\": \"${1|1,0|}\""
  },
  "VFormatNumberScale": {
    "prefix": "vFormatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number belonging to volume chart after truncating and rounding it - e.g., if `vFormatNumberScale` is set to 1, 10434 would become 1.04K (with `vDecimals` set to 2 places). Same with numbers in millions - an M will be added at the end.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vFormatNumberScale\": \"${1|1,0|}\""
  },
  "VDefaultNumberScale": {
    "prefix": "vDefaultNumberScale",
    "description": "Description: The default unit of the numbers belonging to volume chart.\n      Type: String\n",
    "body": "\"vDefaultNumberScale\": \"\""
  },
  "VNumberScaleUnit": {
    "prefix": "vNumberScaleUnit",
    "description": "Description: Unit of each block of the scale of volume chart.\n      Type: String\n",
    "body": "\"vNumberScaleUnit\": \"\""
  },
  "VNumberScaleValue": {
    "prefix": "vNumberScaleValue",
    "description": "Description: Range of the various blocks that constitute the scale for volume chart.\n      Type: String\n",
    "body": "\"vNumberScaleValue\": \"\""
  },
  "VScaleRecursively": {
    "prefix": "vScaleRecursively",
    "description": "Description: \n      Type: Boolean\n      Range: 0/1",
    "body": "\"vScaleRecursively\": \"${1|1,0|}\""
  },
  "VMaxScaleRecursion": {
    "prefix": "vMaxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling of the numbers of volume chart? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"vMaxScaleRecursion\": \"\""
  },
  "VScaleSeparator": {
    "prefix": "vScaleSeparator",
    "description": "Description: \n      Type: String\n",
    "body": "\"vScaleSeparator\": \"\""
  },
  "VNumberPrefix": {
    "prefix": "vNumberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers belonging to volume chart.\n      Type: String\n      Range: Character",
    "body": "\"vNumberPrefix\": \"\""
  },
  "VNumberSuffix": {
    "prefix": "vNumberSuffix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers belonging to volume chart.\n      Type: String\n      Range: Character",
    "body": "\"vNumberSuffix\": \"\""
  },
  "VDecimals": {
    "prefix": "vDecimals",
    "description": "Description: Number of decimal places to which all numbers belonging to volume chart would be rounded to.\n      Type: Number\n      Range: 0-10",
    "body": "\"vDecimals\": \"\""
  },
  "VerticalLineAlpha": {
    "prefix": "verticalLineAlpha",
    "description": "Description: Lets you set the alpha for category lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"verticalLineAlpha\": \"\""
  },
  "VerticalLineColor": {
    "prefix": "verticalLineColor",
    "description": "Description: You can opt to show vertical lines for each category label. This attribute lets you set the color for all of them.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"verticalLineColor\": \"\""
  },
  "VerticalLineDashed": {
    "prefix": "verticalLineDashed",
    "description": "Description: Whether the vertical lines should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"verticalLineDashed\": \"${1|1,0|}\""
  },
  "VerticalLineDashLen": {
    "prefix": "verticalLineDashLen",
    "description": "Description: Sets the length of each dash when vertical lines are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalLineDashLen\": \"\""
  },
  "VerticalLineDashGap": {
    "prefix": "verticalLineDashGap",
    "description": "Description: Sets the gap between consecutive dashes when vertical lines are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalLineDashGap\": \"\""
  },
  "VerticalLineThickness": {
    "prefix": "verticalLineThickness",
    "description": "Description: Lets you set the thickness for category lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalLineThickness\": \"\""
  },
  "LineDashed": {
    "prefix": "lineDashed",
    "description": "Description: Whether the vertical lines should be rendered as dashed lines. \n\n__Default value__: 0 (vertical lines using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"lineDashed\": \"${1|1,0|}\""
  },
  "ShowVerticalLine": {
    "prefix": "showVerticalLine",
    "description": "Description: Whether the vertical line should be shown for this category.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVerticalLine\": \"${1|1,0|}\""
  },
  "X": {
    "prefix": "x",
    "description": "Description: The candle stick chart has both x and y axis as numeric. This attribute lets you define the x value (numerical position on the x-axis) where this category name would be placed.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"x\": \"\""
  },
  "Open": {
    "prefix": "open",
    "description": "Description: Opening price for the set.\n      Type: Number\n",
    "body": "\"open\": \"\""
  },
  "Close": {
    "prefix": "close",
    "description": "Description: Closing price for the set.\n      Type: Number\n",
    "body": "\"close\": \"\""
  },
  "High": {
    "prefix": "high",
    "description": "Description: Highest price point reached for the set.\n      Type: Number\n",
    "body": "\"high\": \"\""
  },
  "Low": {
    "prefix": "low",
    "description": "Description: Lowest price point reached for the set.\n      Type: Number\n",
    "body": "\"low\": \"\""
  },
  "Volume": {
    "prefix": "volume",
    "description": "Description: Volume of transaction. If you do not specify volume for any of the sets, PowerCharts XT wouldn't plot the volume chart at the bottom.\n      Type: Number\n",
    "body": "\"volume\": \"\""
  },
  "Bordercolor": {
    "prefix": "bordercolor",
    "description": "Description: If you need to highlight a particular candlestick, you can assign a border color to that particular set using this attribute.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bordercolor\": \"\""
  },
  "TrendSetColor": {
    "prefix": "trendSetColor",
    "description": "Description: Lets you set the color for all the trend-sets on the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendSetColor\": \"\""
  },
  "TrendSetAlpha": {
    "prefix": "trendSetAlpha",
    "description": "Description: Lets you set the alpha for all the trend-sets on the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendSetAlpha\": \"\""
  },
  "TrendSetThickness": {
    "prefix": "trendSetThickness",
    "description": "Description: Helps you set the thickness for all the trend-set lines on the chart.\n      Type: Number\n",
    "body": "\"trendSetThickness\": \"\""
  },
  "TrendSetDashed": {
    "prefix": "trendSetDashed",
    "description": "Description: Whether the trendset should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendSetDashed\": \"${1|1,0|}\""
  },
  "TrendSetDashLen": {
    "prefix": "trendSetDashLen",
    "description": "Description: Sets the length of each dash when trendset is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendSetDashLen\": \"\""
  },
  "TrendSetDashGap": {
    "prefix": "trendSetDashGap",
    "description": "Description: Sets the gap between consecutive dashes when trendset is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendSetDashGap\": \"\""
  },
  "Dashlen": {
    "prefix": "dashlen",
    "description": "Description: Sets the length of each dash when trendset is rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"dashlen\": \"\""
  },
  "Dashgap": {
    "prefix": "dashgap",
    "description": "Description: Sets the gap between consecutive dashes when trendset is rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"dashgap\": \"\""
  },
  "Includeinlegend": {
    "prefix": "includeinlegend",
    "description": "Description: Whether to include the name of this trend set in legend.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"includeinlegend\": \"${1|1,0|}\""
  },
  "PlotBinSize": {
    "prefix": "plotBinSize",
    "description": "Description: This attribute is used to skip the data plot without any change in visualization. When set to `1`, minimum one data plot will be rendered within the width of one pixel. \n\n Example, if `plotBinSize: 1`, minimum one column plot will be rendered within the width of one pixel. For line and area charts, minimum of two anchors connecting one single line will be drawn. If `plotBinSize: 0.5`, minimum two column plot will be rendered within the width of one pixel. Data skipping can be disabled by setting this attribute to `0`. \n\n Default value: __0.5__\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotBinSize\": \"\""
  },
  "LabelBinSize": {
    "prefix": "labelBinSize",
    "description": "Description: This attribute is used to skip the labels of the data plots. When set to `1`, minimum one label will be displayed within the width of one pixel. To disable this label skipping, set this attribute to `0`. \n\nDefault value: __1__\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBinSize\": \"\""
  },
  "XAxisLineThickness": {
    "prefix": "xAxisLineThickness",
    "description": "Description: Sets the thickness of the x-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisLineThickness\": \"\""
  },
  "PlotGradientColor": {
    "prefix": "plotGradientColor",
    "description": "Description: You can globally add a gradient color to the entire plot of chart by specifying the second color as this attribute. For example, if you've specified individual colors for your columns and now you want a gradient that ends in white. You need to specify FFFFFF (white) as this color and the chart will now draw plots as gradient.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotGradientColor\": \"\""
  },
  "UsePlotGradientColor": {
    "prefix": "usePlotGradientColor",
    "description": "Description: Gradient color is a color added globally to the entire plot of chart by specifying the second color in an attribute. This attribute sets the gradient color to _true_. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"usePlotGradientColor\": \"${1|1,0|}\""
  },
  "DrawCrossLine": {
    "prefix": "drawCrossLine",
    "description": "Description: This attribute sets a cross line (vertical line/area), when you hover a data plot. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawCrossLine\": \"${1|1,0|}\""
  },
  "CrossLineAnimation": {
    "prefix": "crossLineAnimation",
    "description": "Description: This attributes enables the animation for the cross line. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"crossLineAnimation\": \"${1|1,0|}\""
  },
  "CrossLineAnimationDuration": {
    "prefix": "crossLineAnimationDuration",
    "description": "Description: This attribute sets the animation duration of the cross line. \n\nDefault value: __0.09 seconds__\n      Type: Number\n      Range: In seconds",
    "body": "\"crossLineAnimationDuration\": \"\""
  },
  "PlotColorinTooltip": {
    "prefix": "plotColorinTooltip",
    "description": "Description: This attribute displays the color of each plot with their labels in tooltip. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotColorinTooltip\": \"${1|1,0|}\""
  },
  "PlotHoverGradientColor": {
    "prefix": "plotHoverGradientColor",
    "description": "Description: Specifies the gradient color for the data plots when hovered. For example, if you've specified individual colors and now you want hover color that ends in white, You need to specify it.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotHoverGradientColor\": \"\""
  },
  "PlotHoverRatio": {
    "prefix": "plotHoverRatio",
    "description": "Description: Helps you specify the ratio of gradient colors when hovered.\n      Type: Number\n",
    "body": "\"plotHoverRatio\": \"\""
  },
  "PlotHoverAngle": {
    "prefix": "plotHoverAngle",
    "description": "Description: This attribute specifies the angle of the gradient color when hovered.\n      Type: Number\n",
    "body": "\"plotHoverAngle\": \"\""
  },
  "PlotBorderHoverDashed": {
    "prefix": "plotBorderHoverDashed",
    "description": "Description: When a data plot is hovered, this attribute is used to specify whether the data plot border will be rendered as a dashed line. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotBorderHoverDashed\": \"${1|1,0|}\""
  },
  "PlotBorderHoverDashLen": {
    "prefix": "plotBorderHoverDashLen",
    "description": "Description: When a data plot is hovered, this attribute is used to set the length of each dash if the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderHoverDashLen\": \"\""
  },
  "PlotBorderHoverDashGap": {
    "prefix": "plotBorderHoverDashGap",
    "description": "Description: When a data plot is hovered, this attribute is used to set the gap between consecutive dashes if the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderHoverDashGap\": \"\""
  },
  "HoverGradientColor": {
    "prefix": "hoverGradientColor",
    "description": "Description: This attribute sets the gradient color of the data plot on hover.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverGradientColor\": \"\""
  },
  "HoverRatio": {
    "prefix": "hoverRatio",
    "description": "Description: This attribute sets the ratio of gradient colors when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverRatio\": \"\""
  },
  "HoverAngle": {
    "prefix": "hoverAngle",
    "description": "Description: This attribute specifies the angle of the gradient color when hovered.\n      Type: Number\n      Range: 0 - 360",
    "body": "\"hoverAngle\": \"\""
  },
  "BorderHoverDashed": {
    "prefix": "borderHoverDashed",
    "description": "Description: When a data plot is hovered, this attribute is used to specify whether a data plot border will be rendered as a dashed line. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"borderHoverDashed\": \"${1|1,0|}\""
  },
  "BorderHoverDashLen": {
    "prefix": "borderHoverDashLen",
    "description": "Description: When a data plot is hovered, this attribute is used to set the length of each dash if the border around a data plot is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverDashLen\": \"\""
  },
  "BorderHoverDashGap": {
    "prefix": "borderHoverDashGap",
    "description": "Description: When a data plot is hovered, this attribute is used to set the gap between consecutive dashes if the border around a data plot is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverDashGap\": \"\""
  },
  "MaxLabelHeight": {
    "prefix": "maxLabelHeight",
    "description": "Description: This attribute can be used to set the maximum height for the x-axis labels (data labels) excluding the x-axis title. If any label goes beyond this height, the label will be truncated. In stagger mode, the number of stagger lines will be reduced if they exceed this value.\n      Type: Number\n      Range: In Pixels",
    "body": "\"maxLabelHeight\": \"\""
  },
  "LabelDisplay": {
    "prefix": "labelDisplay",
    "description": "Description: Using this attribute, you can customize the alignment of data labels (x-axis labels). There are 5 options: AUTO, WRAP, STAGGER, ROTATE or NONE. By default, this attribute is set to AUTO mode which means that the alignment of the data labels is determined automatically depending on the size of the chart. WRAP wraps the label text if it is too long to fit in one line. ROTATE rotates the labels vertically. STAGGER divides the labels into multiple lines.\n      Type: String\n      Range: 'AUTO', 'WRAP', 'STAGGER', 'ROTATE', 'NONE'",
    "body": "\"labelDisplay\": \"\""
  },
  "RotateLabels": {
    "prefix": "rotateLabels",
    "description": "Description: This attribute lets you set whether the data labels will show up as rotated labels on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateLabels\": \"${1|1,0|}\""
  },
  "SlantLabels": {
    "prefix": "slantLabels",
    "description": "Description: If you've opted to show rotated labels on chart, this attribute lets you set the configuration whether the labels will show as slanted labels or fully vertical ones.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"slantLabels\": \"${1|1,0|}\""
  },
  "LabelStep": {
    "prefix": "labelStep",
    "description": "Description: By default, all the labels are displayed on the chart. However, if you've a set of streaming data (like name of months or days of week), you can opt to show every n-th label for better clarity. This attribute just lets you do so. When a value greater than 1 (n) is set to this attribute, the first label from left and every label at the n-th position from left will be displayed. e.g., a chart showing data for 12 months and set with `labelStep: 3` will show labels for January, April, July, and October. The rest of the labels will be skipped.\n      Type: Number\n      Range: 1 or above",
    "body": "\"labelStep\": \"\""
  },
  "StaggerLines": {
    "prefix": "staggerLines",
    "description": "Description: If you've opted for STAGGER mode as `labelDisplay`, using this attribute you can control how many lines to stagger the label to. By default, all labels are displayed in a single line.\n      Type: Number\n      Range: 2 or above",
    "body": "\"staggerLines\": \"\""
  },
  "RotateValues": {
    "prefix": "rotateValues",
    "description": "Description: If you've opted to show data values, you can rotate them using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateValues\": \"${1|1,0|}\""
  },
  "ShowDivLineValues": {
    "prefix": "showDivLineValues",
    "description": "Description: Whether to show div line values. If not specified `showYAxisValues` attribute overrides this value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showDivLineValues\": \"${1|1,0|}\""
  },
  "AdjustDiv": {
    "prefix": "adjustDiv",
    "description": "Description: FusionCharts XT automatically tries to adjust divisional lines and limit values based on the data provided. However, if you want to set your explicit lower and upper limit values and number of divisional lines, first set this attribute to false. That will disable automatic adjustment of divisional lines.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"adjustDiv\": \"${1|1,0|}\""
  },
  "XAxisName": {
    "prefix": "xAxisName",
    "description": "Description: X-axis title of the chart.\n      Type: String\n",
    "body": "\"xAxisName\": \"\""
  },
  "YAxisName": {
    "prefix": "yAxisName",
    "description": "Description: Y-axis title of the chart.\n      Type: String\n",
    "body": "\"yAxisName\": \"\""
  },
  "ShowYAxisValues": {
    "prefix": "showYAxisValues",
    "description": "Description: FusionCharts XT y-axis is divided into vertical sections using div (divisional) lines. Each div line assumes a value based on its position. Using this attribute you can set whether to show those div line (y-axis) values or not. This attribute shows or hides the y-axis divisional lines and limits. The values of `showLimits` and `showDivLineValues`, if specified explicitly, overrides the value of this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYAxisValues\": \"${1|1,0|}\""
  },
  "YAxisValuesStep": {
    "prefix": "yAxisValuesStep",
    "description": "Description: By default, all div lines show their values. However, you can opt to display every x(th) div line value using this attribute.\n      Type: Number\n      Range: 1 or above",
    "body": "\"yAxisValuesStep\": \"\""
  },
  "RotateYAxisName": {
    "prefix": "rotateYAxisName",
    "description": "Description: If you do not wish to rotate y-axis name, set this as 0. It specifically comes to use when you've the special characters (UTF-8) in your y-axis name that do not show up in rotated mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateYAxisName\": \"${1|1,0|}\""
  },
  "YAxisNameWidth": {
    "prefix": "yAxisNameWidth",
    "description": "Description: If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to y-axis name.\n      Type: Number\n      Range: (In Pixels)",
    "body": "\"yAxisNameWidth\": \"\""
  },
  "YAxisMinValue": {
    "prefix": "yAxisMinValue",
    "description": "Description: This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, it is automatically calculated by FusionCharts XT based on the data provided by you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"yAxisMinValue\": \"\""
  },
  "YAxisMaxValue": {
    "prefix": "yAxisMaxValue",
    "description": "Description: This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, it is automatically calculated by FusionCharts XT based on the data provided by you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"yAxisMaxValue\": \"\""
  },
  "ForceYAxisValueDecimals": {
    "prefix": "forceYAxisValueDecimals",
    "description": "Description: Whether to forcefully attach decimal places to all y-axis values. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all y-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all y-axis numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceYAxisValueDecimals\": \"${1|1,0|}\""
  },
  "YAxisValueDecimals": {
    "prefix": "yAxisValueDecimals",
    "description": "Description: If you've opted to not adjust div lines, you can specify the div line values decimal precision using this attribute.\n      Type: Number\n      Range: 0-10",
    "body": "\"yAxisValueDecimals\": \"\""
  },
  "XAxisNameFontColor": {
    "prefix": "xAxisNameFontColor",
    "description": "Description: Sets the x-axis font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameFontColor\": \"\""
  },
  "XAxisNameFontSize": {
    "prefix": "xAxisNameFontSize",
    "description": "Description: Specifies the x-axis font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"xAxisNameFontSize\": \"\""
  },
  "XAxisNameFontBold": {
    "prefix": "xAxisNameFontBold",
    "description": "Description: Whether x-axis font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameFontBold\": \"${1|1,0|}\""
  },
  "XAxisNameFontItalic": {
    "prefix": "xAxisNameFontItalic",
    "description": "Description: Whether x-axis font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "XAxisNameBgColor": {
    "prefix": "xAxisNameBgColor",
    "description": "Description: Sets the background color for x-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameBgColor\": \"\""
  },
  "XAxisNameBorderColor": {
    "prefix": "xAxisNameBorderColor",
    "description": "Description: Sets the border around the x-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameBorderColor\": \"\""
  },
  "XAxisNameAlpha": {
    "prefix": "xAxisNameAlpha",
    "description": "Description: Sets the x-axis alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameAlpha\": \"\""
  },
  "XAxisNameFontAlpha": {
    "prefix": "xAxisNameFontAlpha",
    "description": "Description: Sets the x-axis font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameFontAlpha\": \"\""
  },
  "XAxisNameBgAlpha": {
    "prefix": "xAxisNameBgAlpha",
    "description": "Description: Sets the x-axis background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameBgAlpha\": \"\""
  },
  "XAxisNameBorderAlpha": {
    "prefix": "xAxisNameBorderAlpha",
    "description": "Description: Sets the x-axis border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameBorderAlpha\": \"\""
  },
  "XAxisNameBorderPadding": {
    "prefix": "xAxisNameBorderPadding",
    "description": "Description: Sets the x-axis border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderPadding\": \"\""
  },
  "XAxisNameBorderRadius": {
    "prefix": "xAxisNameBorderRadius",
    "description": "Description: Sets the x-axis border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderRadius\": \"\""
  },
  "XAxisNameBorderThickness": {
    "prefix": "xAxisNameBorderThickness",
    "description": "Description: Sets the x-axis border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderThickness\": \"\""
  },
  "XAxisNameBorderDashed": {
    "prefix": "xAxisNameBorderDashed",
    "description": "Description: Whether the border around the x-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "XAxisNameBorderDashLen": {
    "prefix": "xAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the x-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"xAxisNameBorderDashLen\": \"\""
  },
  "XAxisNameBorderDashGap": {
    "prefix": "xAxisNameBorderDashGap",
    "description": "Description: Sets the gap between consecutive dashes when the border around the x-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"xAxisNameBorderDashGap\": \"\""
  },
  "YAxisNameFont": {
    "prefix": "yAxisNameFont",
    "description": "Description: Sets the y-axis (primary / secondary) font family for the text\n      Type: String\n      Range: Font Name",
    "body": "\"yAxisNameFont\": \"\""
  },
  "YAxisNameFontColor": {
    "prefix": "yAxisNameFontColor",
    "description": "Description: Sets the y-axis (primary / secondary) font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameFontColor\": \"\""
  },
  "YAxisNameFontSize": {
    "prefix": "yAxisNameFontSize",
    "description": "Description: Specifies the y-axis (primary / secondary) font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"yAxisNameFontSize\": \"\""
  },
  "YAxisNameFontBold": {
    "prefix": "yAxisNameFontBold",
    "description": "Description: Whether y-axis (primary / secondary) font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameFontBold\": \"${1|1,0|}\""
  },
  "YAxisNameFontItalic": {
    "prefix": "yAxisNameFontItalic",
    "description": "Description: Whether y-axis (primary / secondary) font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "YAxisNameBgColor": {
    "prefix": "yAxisNameBgColor",
    "description": "Description: Sets the background color for y-axis (primary / secondary) text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameBgColor\": \"\""
  },
  "YAxisNameBorderColor": {
    "prefix": "yAxisNameBorderColor",
    "description": "Description: Sets the border around the y-axis (primary / secondary) text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameBorderColor\": \"\""
  },
  "YAxisNameAlpha": {
    "prefix": "yAxisNameAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameAlpha\": \"\""
  },
  "YAxisNameFontAlpha": {
    "prefix": "yAxisNameFontAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameFontAlpha\": \"\""
  },
  "YAxisNameBgAlpha": {
    "prefix": "yAxisNameBgAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameBgAlpha\": \"\""
  },
  "YAxisNameBorderAlpha": {
    "prefix": "yAxisNameBorderAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameBorderAlpha\": \"\""
  },
  "YAxisNameBorderPadding": {
    "prefix": "yAxisNameBorderPadding",
    "description": "Description: Sets the y-axis (primary / secondary) border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderPadding\": \"\""
  },
  "YAxisNameBorderRadius": {
    "prefix": "yAxisNameBorderRadius",
    "description": "Description: Sets the y-axis (primary / secondary) border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderRadius\": \"\""
  },
  "YAxisNameBorderThickness": {
    "prefix": "yAxisNameBorderThickness",
    "description": "Description: Sets the y-axis (primary / secondary) border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderThickness\": \"\""
  },
  "YAxisNameBorderDashed": {
    "prefix": "yAxisNameBorderDashed",
    "description": "Description: Whether the border around the y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "YAxisNameBorderDashLen": {
    "prefix": "yAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"yAxisNameBorderDashLen\": \"\""
  },
  "YAxisNameBorderDashGap": {
    "prefix": "yAxisNameBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"yAxisNameBorderDashGap\": \"\""
  },
  "CanvasBaseColor": {
    "prefix": "canvasBaseColor",
    "description": "Description: Helps you specify the color for canvas base.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"canvasBaseColor\": \"\""
  },
  "ShowCanvasBg": {
    "prefix": "showCanvasBg",
    "description": "Description: Whether to show canvas background.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCanvasBg\": \"${1|1,0|}\""
  },
  "ShowCanvasBase": {
    "prefix": "showCanvasBase",
    "description": "Description: Whether to show canvas base.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCanvasBase\": \"${1|1,0|}\""
  },
  "CanvasBaseDepth": {
    "prefix": "canvasBaseDepth",
    "description": "Description: Height of canvas base (in pixels)\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasBaseDepth\": \"\""
  },
  "CanvasBgDepth": {
    "prefix": "canvasBgDepth",
    "description": "Description: Depth of Canvas Background\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasBgDepth\": \"\""
  },
  "OverlapColumns": {
    "prefix": "overlapColumns",
    "description": "Description: Whether to overlap columns over each other to give a richer 3D look. If there are too many columns on the chart, it will automatically overlap.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"overlapColumns\": \"${1|1,0|}\""
  },
  "NumDivLines": {
    "prefix": "numDivLines",
    "description": "Description: Number of horizontal axis division lines that you want on the chart.\n      Type: Number\n      Range: Numeric value > 0",
    "body": "\"numDivLines\": \"\""
  },
  "DivLineColor": {
    "prefix": "divLineColor",
    "description": "Description: Color for divisional lines.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"divLineColor\": \"\""
  },
  "DivLineThickness": {
    "prefix": "divLineThickness",
    "description": "Description: Thickness of divisional lines.\n      Type: Number\n      Range: 1-5",
    "body": "\"divLineThickness\": \"\""
  },
  "DivLineAlpha": {
    "prefix": "divLineAlpha",
    "description": "Description: Alpha of divisional lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"divLineAlpha\": \"\""
  },
  "DivLineDashed": {
    "prefix": "divLineDashed",
    "description": "Description: Whether the divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (divisional lines rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"divLineDashed\": \"${1|1,0|}\""
  },
  "DivLineDashLen": {
    "prefix": "divLineDashLen",
    "description": "Description: Sets the length of each dash when divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"divLineDashLen\": \"\""
  },
  "DivLineDashGap": {
    "prefix": "divLineDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"divLineDashGap\": \"\""
  },
  "ZeroPlaneColor": {
    "prefix": "zeroPlaneColor",
    "description": "Description: Color for the Zero Plane. Zero Plane is the line/plane that appears at position 0 on the y-axis, when negative data is being shown on the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"zeroPlaneColor\": \"\""
  },
  "ZeroPlaneAlpha": {
    "prefix": "zeroPlaneAlpha",
    "description": "Description: Alpha of zero plane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"zeroPlaneAlpha\": \"\""
  },
  "ZeroPlaneThickness": {
    "prefix": "zeroPlaneThickness",
    "description": "Description: Thickness of zero plane.\n      Type: Number\n      Range: In Pixels",
    "body": "\"zeroPlaneThickness\": \"\""
  },
  "ZeroPlaneShowBorder": {
    "prefix": "zeroPlaneShowBorder",
    "description": "Description: Whether to show border of zero plane.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"zeroPlaneShowBorder\": \"${1|1,0|}\""
  },
  "ZeroPlaneBorderColor": {
    "prefix": "zeroPlaneBorderColor",
    "description": "Description: Sets the border color of zero plane.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"zeroPlaneBorderColor\": \"\""
  },
  "ShowZeroPlaneValue": {
    "prefix": "showZeroPlaneValue",
    "description": "Description: Allows you to show or hide the value on which the zero plane exists on the y-axis. By default, the value is displayed.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showZeroPlaneValue\": \"${1|1,0|}\""
  },
  "XAxisNamePadding": {
    "prefix": "xAxisNamePadding",
    "description": "Description: Using this, you can set the distance between the top end of x-axis title and the bottom end of data labels (or canvas, if data labels are not to be shown).\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNamePadding\": \"\""
  },
  "YAxisNamePadding": {
    "prefix": "yAxisNamePadding",
    "description": "Description: Using this, you can set the distance between the right end of y-axis title and the start of y-axis values (or canvas, if the y-axis values are not to be shown).\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNamePadding\": \"\""
  },
  "YAxisValuesPadding": {
    "prefix": "yAxisValuesPadding",
    "description": "Description: This attribute helps you set the horizontal space between the canvas left edge and the y-axis values or trend line values (on left/right side). This is particularly useful, when you want more space between your canvas and y-axis values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisValuesPadding\": \"\""
  },
  "LabelPadding": {
    "prefix": "labelPadding",
    "description": "Description: This attribute sets the vertical space between the labels and canvas bottom edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelPadding\": \"\""
  },
  "VLine": {
    "prefix": "vLine",
    "description": "Description: Set this attribute to __true__ to render a vertical data separator line.\n      Type: String\n",
    "body": "\"vLine\": \"\""
  },
  "ShowLabelBorder": {
    "prefix": "showLabelBorder",
    "description": "Description: Whether to show a border around the vLine label.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabelBorder\": \"${1|1,0|}\""
  },
  "LinePosition": {
    "prefix": "linePosition",
    "description": "Description: Helps configure the position of vertical line i.e., if a vLine is to be plotted between 2 points Jan and Feb, user can set any position between 0 and 1 to indicate the relative position of vLine between these two points (0 means Jan and 1 means Feb). By default, it’s 0.5 to show in between the points.\n      Type: Number\n      Range: 0-1",
    "body": "\"linePosition\": \"\""
  },
  "LabelPosition": {
    "prefix": "labelPosition",
    "description": "Description: Helps configure the position of the vLine label by setting a relative position between 0 and 1. In vertical charts, 0 means top of canvas and 1 means bottom. In horizontal charts, 0 means left of canvas and 1 means right.\n      Type: Number\n      Range: 0-1",
    "body": "\"labelPosition\": \"\""
  },
  "LabelHAlign": {
    "prefix": "labelHAlign",
    "description": "Description: Horizontal anchor point for the alignment of vLine label.\n      Type: String\n      Range: left, center, right",
    "body": "\"labelHAlign\": \"\""
  },
  "LabelVAlign": {
    "prefix": "labelVAlign",
    "description": "Description: Vertical anchor point for the alignment of vLine label.\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"labelVAlign\": \"\""
  },
  "ValueOnRight": {
    "prefix": "valueOnRight",
    "description": "Description: Whether to show the trend line value on left side or right side of chart. This is particularly useful when the trend line display values on the chart are colliding with divisional lines values on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueOnRight\": \"${1|1,0|}\""
  },
  "TrendValueFont": {
    "prefix": "trendValueFont",
    "description": "Description: Sets the font family for the trend-line display value.\n      Type: String\n      Range: Font Name",
    "body": "\"trendValueFont\": \"\""
  },
  "TrendValueFontSize": {
    "prefix": "trendValueFontSize",
    "description": "Description: Sets the font size for the trend-line display value.\n      Type: Number\n      Range:  ",
    "body": "\"trendValueFontSize\": \"\""
  },
  "TrendValueFontBold": {
    "prefix": "trendValueFontBold",
    "description": "Description: Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueFontBold\": \"${1|1,0|}\""
  },
  "TrendValueFontItalic": {
    "prefix": "trendValueFontItalic",
    "description": "Description: Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueFontItalic\": \"${1|1,0|}\""
  },
  "TrendValueBgColor": {
    "prefix": "trendValueBgColor",
    "description": "Description: Sets the background color for the trend-line display value.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendValueBgColor\": \"\""
  },
  "TrendValueBorderColor": {
    "prefix": "trendValueBorderColor",
    "description": "Description: Sets the border color for the trend-line display value.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendValueBorderColor\": \"\""
  },
  "TrendValueAlpha": {
    "prefix": "trendValueAlpha",
    "description": "Description: Sets the transparency for the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueAlpha\": \"\""
  },
  "TrendValueBgAlpha": {
    "prefix": "trendValueBgAlpha",
    "description": "Description: Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueBgAlpha\": \"\""
  },
  "TrendValueBorderAlpha": {
    "prefix": "trendValueBorderAlpha",
    "description": "Description: Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueBorderAlpha\": \"\""
  },
  "TrendValueBorderPadding": {
    "prefix": "trendValueBorderPadding",
    "description": "Description: Sets padding for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderPadding\": \"\""
  },
  "TrendValueBorderRadius": {
    "prefix": "trendValueBorderRadius",
    "description": "Description: Sets the radius for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderRadius\": \"\""
  },
  "TrendValueBorderThickness": {
    "prefix": "trendValueBorderThickness",
    "description": "Description: Sets the thickness for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderThickness\": \"\""
  },
  "TrendValueBorderDashed": {
    "prefix": "trendValueBorderDashed",
    "description": "Description: Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueBorderDashed\": \"${1|1,0|}\""
  },
  "TrendValueBorderDashLen": {
    "prefix": "trendValueBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderDashLen\": \"\""
  },
  "TrendValueBorderDashGap": {
    "prefix": "trendValueBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderDashGap\": \"\""
  },
  "Animate3D": {
    "prefix": "animate3D",
    "description": "Description: This attribute enables you to set whether the initial animation of the 3D elements in chart canvas will occur or not. If set to 0, it will also set off chart canvas' rotation while using JavaScript API functions like `view2D(), resetView(), rotateView(). `The view will be updated instantly without any rotation or animation.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"animate3D\": \"${1|1,0|}\""
  },
  "ExeTime": {
    "prefix": "exeTime",
    "description": "Description: It sets the time in seconds (can accept decimals) that the 3D elements of the chart take to animate when the chart is rendered initially. This attribute also sets the time that the chart canvas will take to animate when the chart is transformed to any view (View3D, View 2D, Reset View) using context menu (right click menu). This is also applicable while using JavaScript API functions - `view2D(), view3D, resetView() or rotateView()`. Default value is 0.5.\n      Type: Number\n      Range: 0.00 - 10.00",
    "body": "\"exeTime\": \"\""
  },
  "AreaOverColumns": {
    "prefix": "areaOverColumns",
    "description": "Description: If you've both area and column plots on the combination chart, this attribute lets you configure whether area chart will appear over column chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"areaOverColumns\": \"${1|1,0|}\""
  },
  "DivLineEffect": {
    "prefix": "divLineEffect",
    "description": "Description: This attribute enables you to apply an effect, for example, EMBOSS, or BEVEL to the divisional lines as well as to the trendlines.\n      Type: String\n      Range: EMBOSS or BEVEL or NONE",
    "body": "\"divLineEffect\": \"\""
  },
  "ZeroPlaneMesh": {
    "prefix": "zeroPlaneMesh",
    "description": "Description: Whether to draw the zero plane as a wireframe mesh or as a filled plane. If set to 1, a mesh on the zero plane of the chart will be drawn.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"zeroPlaneMesh\": \"${1|1,0|}\""
  },
  "YLabelGap": {
    "prefix": "yLabelGap",
    "description": "Description: This attribute helps you set the horizontal space between the canvas wall edge and the y-axis values or trend line values (on left/right side). This is particularly useful, when you want more space between your canvas and y-axis values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yLabelGap\": \"\""
  },
  "XLabelGap": {
    "prefix": "xLabelGap",
    "description": "Description: This attribute sets the vertical space between the labels and canvas wall edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.\n      Type: Number\n      Range: In Pixels",
    "body": "\"xLabelGap\": \"\""
  },
  "RenderAs": {
    "prefix": "renderAs",
    "description": "Description: This attribute defines what the particular dataset will be plotted as. Valid values are COLUMN, AREA or LINE.\n      Type: String\n      Range: COLUMN, AREA or LINE",
    "body": "\"renderAs\": \"\""
  },
  "Use3DLighting": {
    "prefix": "use3DLighting",
    "description": "Description: Whether to use advanced gradients and shadow effects to create better looking 3D cylinder?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"use3DLighting\": \"${1|1,0|}\""
  },
  "SetAdaptiveMin": {
    "prefix": "setAdaptiveMin",
    "description": "Description: This attribute lets you set whether the lower limit will be 0 (in case of all positive values on chart) or should the lower limit adapt itself to a different figure based on values provided to the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"setAdaptiveMin\": \"${1|1,0|}\""
  },
  "LowerLimitDisplay": {
    "prefix": "lowerLimitDisplay",
    "description": "Description: This attribute allows you to display a label instead of the lower limit. For example, in a chart displaying Literacy Rate on a scale of 0 - 100%, you may need to show the label Low at the starting point of the chart. Upon using this attribute to specify the label, the value 0 will be replaced by Low. Default value: If you do not specify the `lowerLimitDisplay` attribute, the lower limit value will be shown.\n      Type: String\n",
    "body": "\"lowerLimitDisplay\": \"\""
  },
  "UpperLimitDisplay": {
    "prefix": "upperLimitDisplay",
    "description": "Description: This attribute allows you to display a label instead of the upper limit. Upon using this attribute, the upper limit of the chart gets replaced by the label specified. Default value: If you do not specify the `upperLimitDisplay` attribute, the upper limit value will be shown.\n      Type: String\n",
    "body": "\"upperLimitDisplay\": \"\""
  },
  "ShowTickMarks": {
    "prefix": "showTickMarks",
    "description": "Description: Whether to show tick marks?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTickMarks\": \"${1|1,0|}\""
  },
  "ShowTickValues": {
    "prefix": "showTickValues",
    "description": "Description: Whether to show tick values?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTickValues\": \"${1|1,0|}\""
  },
  "ShowLimits": {
    "prefix": "showLimits",
    "description": "Description: Whether to show the first and last tick value (i.e., chart lower and upper limit)?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLimits\": \"${1|1,0|}\""
  },
  "AdjustTM": {
    "prefix": "adjustTM",
    "description": "Description: Whether to adjust major tick mark number so as to best distribute the specified chart scale.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"adjustTM\": \"${1|1,0|}\""
  },
  "TicksOnRight": {
    "prefix": "ticksOnRight",
    "description": "Description: Whether to show ticks on the left or right side of gauge? By default, this attribute is turned on.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"ticksOnRight\": \"${1|1,0|}\""
  },
  "MajorTMNumber": {
    "prefix": "majorTMNumber",
    "description": "Description: Number of major tick marks.\n      Type: Number\n",
    "body": "\"majorTMNumber\": \"\""
  },
  "MajorTMColor": {
    "prefix": "majorTMColor",
    "description": "Description: Major tick marks color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"majorTMColor\": \"\""
  },
  "MajorTMAlpha": {
    "prefix": "majorTMAlpha",
    "description": "Description: Major tick marks alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"majorTMAlpha\": \"\""
  },
  "MajorTMHeight": {
    "prefix": "majorTMHeight",
    "description": "Description: Width of major tick marks.\n      Type: Number\n      Range: In pixels",
    "body": "\"majorTMHeight\": \"\""
  },
  "MajorTMThickness": {
    "prefix": "majorTMThickness",
    "description": "Description: Thickness of major tick mark line.\n      Type: Number\n      Range: In pixels",
    "body": "\"majorTMThickness\": \"\""
  },
  "MinorTMNumber": {
    "prefix": "minorTMNumber",
    "description": "Description: Number of minor tick marks. Minor tick marks refer to the tick marks between two major tick marks.\n      Type: Number\n",
    "body": "\"minorTMNumber\": \"\""
  },
  "MinorTMColor": {
    "prefix": "minorTMColor",
    "description": "Description: Color of minor tick marks.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"minorTMColor\": \"\""
  },
  "MinorTMAlpha": {
    "prefix": "minorTMAlpha",
    "description": "Description: Alpha of minor tick marks.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"minorTMAlpha\": \"\""
  },
  "MinorTMHeight": {
    "prefix": "minorTMHeight",
    "description": "Description: Width of minor tick marks.\n      Type: Number\n      Range: In pixels",
    "body": "\"minorTMHeight\": \"\""
  },
  "MinorTMThickness": {
    "prefix": "minorTMThickness",
    "description": "Description: Thickness of minor tick marks.\n      Type: Number\n      Range: In pixels",
    "body": "\"minorTMThickness\": \"\""
  },
  "TickMarkDistance": {
    "prefix": "tickMarkDistance",
    "description": "Description: Distance between the gauge and tick marks.\n      Type: Number\n      Range: In pixels",
    "body": "\"tickMarkDistance\": \"\""
  },
  "TickValueDistance": {
    "prefix": "tickValueDistance",
    "description": "Description: Distance between tick values and tick marks.\n      Type: Number\n      Range: In pixels",
    "body": "\"tickValueDistance\": \"\""
  },
  "TickValueStep": {
    "prefix": "tickValueStep",
    "description": "Description: If you need to show every n-th tick value only, you can specify that value here. The upper and lower limit of the scale is always displayed.\n      Type: Number\n",
    "body": "\"tickValueStep\": \"\""
  },
  "TickValueDecimals": {
    "prefix": "tickValueDecimals",
    "description": "Description: Number of decimals to which tick values will be rounded to.\n      Type: Number\n",
    "body": "\"tickValueDecimals\": \"\""
  },
  "ForceTickValueDecimals": {
    "prefix": "forceTickValueDecimals",
    "description": "Description: Whether to force number of decimals on tick values?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceTickValueDecimals\": \"${1|1,0|}\""
  },
  "CylOriginX": {
    "prefix": "cylOriginX",
    "description": "Description: Origin x co-ordinate for cylinder.\n      Type: Number\n      Range: In pixels",
    "body": "\"cylOriginX\": \"\""
  },
  "CylOriginY": {
    "prefix": "cylOriginY",
    "description": "Description: Origin y co-ordinate for cylinder.\n      Type: Number\n      Range: In pixels",
    "body": "\"cylOriginY\": \"\""
  },
  "CylRadius": {
    "prefix": "cylRadius",
    "description": "Description: Radius for the cylinder.\n      Type: Number\n      Range: In pixels",
    "body": "\"cylRadius\": \"\""
  },
  "CylHeight": {
    "prefix": "cylHeight",
    "description": "Description: If you want to manually specify the height for cylinder, please use this attribute.\n      Type: Number\n      Range: In pixels",
    "body": "\"cylHeight\": \"\""
  },
  "CylYScale": {
    "prefix": "cylYScale",
    "description": "Description: Y-scale perspective for cylinder.\n      Type: Number\n      Range: 0-50",
    "body": "\"cylYScale\": \"\""
  },
  "CylFillColor": {
    "prefix": "cylFillColor",
    "description": "Description: Color of cylinder fill.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"cylFillColor\": \"\""
  },
  "CylGlassColor": {
    "prefix": "cylGlassColor",
    "description": "Description: Sets the color of cylinder’s glass.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"cylGlassColor\": \"\""
  },
  "CylFillHoverColor": {
    "prefix": "cylFillHoverColor",
    "description": "Description: This attribute sets the color of the cylinder when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"cylFillHoverColor\": \"\""
  },
  "CylFillHoverAlpha": {
    "prefix": "cylFillHoverAlpha",
    "description": "Description: This attribute sets the transparency of the cylinder when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"cylFillHoverAlpha\": \"\""
  },
  "AnimateClockwise": {
    "prefix": "animateClockwise",
    "description": "Description: Animates the plot in clockwise direction. \n\nDefault value: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"animateClockwise\": \"${1|1,0|}\""
  },
  "AlphaAnimation": {
    "prefix": "alphaAnimation",
    "description": "Description: Instead of rotational animation, you can set alpha animation which displays your chart slowly from `0` alpha to `100`. \n\nDefault value : 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"alphaAnimation\": \"${1|1,0|}\""
  },
  "ShowZeroPies": {
    "prefix": "showZeroPies",
    "description": "Description: Configuration whether to show pies with 0 values (and their values). Otherwise, they won't show up in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showZeroPies\": \"${1|1,0|}\""
  },
  "UseDataPlotColorForLabels": {
    "prefix": "useDataPlotColorForLabels",
    "description": "Description: Uses the same data plot color for data labels.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useDataPlotColorForLabels\": \"${1|1,0|}\""
  },
  "ShowVLineLabelBorder": {
    "prefix": "showVLineLabelBorder",
    "description": "Description: If you've opted to show a label for any of your vLines in the chart, you can collectively configure whether to show border for all such labels using this attribute. If you want to show label border for just a particular vLine, you can over-ride this value by specifying border configuration for that specific vLine.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVLineLabelBorder\": \"${1|1,0|}\""
  },
  "RotateVLineLabels": {
    "prefix": "rotateVLineLabels",
    "description": "Description: This attribute lets you set whether the vline labels will show up as rotated labels on the chart. \n\nDefault value: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateVLineLabels\": \"${1|1,0|}\""
  },
  "DoughnutRadius": {
    "prefix": "doughnutRadius",
    "description": "Description: This attribute lets you explicitly set the inner radius of the chart. FusionCharts XT automatically calculates the best fit radius for the chart. This attribute is useful if you want to enforce one of your own values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"doughnutRadius\": \"\""
  },
  "StartingAngle": {
    "prefix": "startingAngle",
    "description": "Description: By default, the doughnut chart starts from angle 0 degree i.e., the first doughnut slice starts plotting from 0 degree angle. If you want to change the starting angle of the chart, use this attribute. It obeys the conventions of co-ordinate geometry where 0 degrees means hand of a clock at 3. Starting angle Increases anti-clockwise.\n      Type: Number\n      Range: 0-360",
    "body": "\"startingAngle\": \"\""
  },
  "Radius3D": {
    "prefix": "radius3D",
    "description": "Description: You can define the 3D Radius of chart in percentage using this attribute. It basically helps you set the bevel distance for the pie/doughnut (if in 3D Lighting Mode).\n      Type: Number\n      Range: 0-100",
    "body": "\"radius3D\": \"\""
  },
  "EnableSlicing": {
    "prefix": "enableSlicing",
    "description": "Description: This attribute specifies whether slicing of the data plots should be enabled for pie/doughnut charts. Setting this attribute to `1` will enable slicing for the chart, setting it to `0` will disable slicing. \n\n Default value: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableSlicing\": \"${1|1,0|}\""
  },
  "SlicingDistance": {
    "prefix": "slicingDistance",
    "description": "Description: If you've opted to slice a particular pie/doughnut slice, using this attribute you can control the distance between the slice and the center of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"slicingDistance\": \"\""
  },
  "EnableRotation": {
    "prefix": "enableRotation",
    "description": "Description: The doughnut charts have three modes: Slicing, Rotation, and Link. By default, a chart starts in Slicing mode. If you need to enable rotation from XML, set this attribute to 1. But, when links are defined, the chart always works in Link mode irrespective of the value of this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableRotation\": \"${1|1,0|}\""
  },
  "EnableMultiSlicing": {
    "prefix": "enableMultiSlicing",
    "description": "Description: This attribute specifes whether single-slicing for the data plots should be enabled for pie/doughnut charts. Setting this attribute to `0` will enable single-slicing for the chart, setting it to `1` will enable multi-slicing. \n\n Default value: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableMultiSlicing\": \"${1|1,0|}\""
  },
  "SkipOverlapLabels": {
    "prefix": "skipOverlapLabels",
    "description": "Description: Whether to skip labels that are overlapping even when using smart labels. If not, they might overlap if there are too many labels.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"skipOverlapLabels\": \"${1|1,0|}\""
  },
  "IsSmartLineSlanted": {
    "prefix": "isSmartLineSlanted",
    "description": "Description: The smart lines (smart label connector lines) can appear in two ways: Slanted or Straight. This attribute lets you choose between them.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isSmartLineSlanted\": \"${1|1,0|}\""
  },
  "ManageLabelOverflow": {
    "prefix": "manageLabelOverflow",
    "description": "Description: This attribute tries to manage overflow of data labels. If enabled, data labels are either wrapped or truncated with ellipses to prevent them from overflowing out of the chart canvas. In case `smartLabels` is disabled, the labels are wrapped to avoid the overflow. Since `smartLabels` is disabled, the wrapped labels might get overlapped. When `smartLabels` is enabled, management of the overflowing labels fit in the &quot;quadrant specific smart labeling algorithm&quot;. Data labels try to wrap first. In case, there is a space constraint in the quadrant, the labels get truncated with ellipses.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"manageLabelOverflow\": \"${1|1,0|}\""
  },
  "Centerlabel": {
    "prefix": "centerlabel",
    "description": "Description: This attribute sets the label at the center if we hover the cursor over the chart. It will display the value for that particular area which has been hovered.\n      Type: String\n",
    "body": "\"centerlabel\": \"\""
  },
  "CenterLabelFont": {
    "prefix": "centerLabelFont",
    "description": "Description: Sets the center label font family for the text.\n      Type: String\n      Range: Font name",
    "body": "\"centerLabelFont\": \"\""
  },
  "CenterLabelFontSize": {
    "prefix": "centerLabelFontSize",
    "description": "Description: Specifies the label label font size.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"centerLabelFontSize\": \"\""
  },
  "CenterLabelColor": {
    "prefix": "centerLabelColor",
    "description": "Description: Sets the center label font color.\n      Type: Color\n      Range: Hex color code",
    "body": "\"centerLabelColor\": \"\""
  },
  "CenterLabelAlpha": {
    "prefix": "centerLabelAlpha",
    "description": "Description: Sets the transparency of the center label.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"centerLabelAlpha\": \"\""
  },
  "CenterLabelBold": {
    "prefix": "centerLabelBold",
    "description": "Description: Sets whether the center label value will be bold formatted. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"centerLabelBold\": \"${1|1,0|}\""
  },
  "CenterLabelItalic": {
    "prefix": "centerLabelItalic",
    "description": "Description: This attribute sets whether center label font should be italicized or not. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"centerLabelItalic\": \"${1|1,0|}\""
  },
  "CenterLabelBgColor": {
    "prefix": "centerLabelBgColor",
    "description": "Description: Sets the background color for center label text.\n      Type: Color\n      Range: Hex color code",
    "body": "\"centerLabelBgColor\": \"\""
  },
  "CenterLabelBgAlpha": {
    "prefix": "centerLabelBgAlpha",
    "description": "Description: Sets the background transparency of the center label.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"centerLabelBgAlpha\": \"\""
  },
  "CenterLabelBorderColor": {
    "prefix": "centerLabelBorderColor",
    "description": "Description: Sets the color of the border around the center label text.\n      Type: Color\n      Range: Hex color code",
    "body": "\"centerLabelBorderColor\": \"\""
  },
  "CenterLabelBorderAlpha": {
    "prefix": "centerLabelBorderAlpha",
    "description": "Description: Sets the transparency of the border around the center label text.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"centerLabelBorderAlpha\": \"\""
  },
  "CenterLabelBorderThickness": {
    "prefix": "centerLabelBorderThickness",
    "description": "Description: Sets the center label border thickness.\n      Type: Number\n      Range: In pixels",
    "body": "\"centerLabelBorderThickness\": \"\""
  },
  "CenterLabelBorderRadius": {
    "prefix": "centerLabelBorderRadius",
    "description": "Description: Sets the center label border radius.\n      Type: Number\n      Range: In pixels",
    "body": "\"centerLabelBorderRadius\": \"\""
  },
  "CenterLabelTextPadding": {
    "prefix": "centerLabelTextPadding",
    "description": "Description: Sets the center label text padding.\n      Type: Number\n      Range: In pixels",
    "body": "\"centerLabelTextPadding\": \"\""
  },
  "CenterLabelPadding": {
    "prefix": "centerLabelPadding",
    "description": "Description: Sets the center label padding.\n      Type: Number\n      Range: In pixels",
    "body": "\"centerLabelPadding\": \"\""
  },
  "CenterLabelBgOval": {
    "prefix": "centerLabelBgOval",
    "description": "Description: Sets the background of the center label in oval shape. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"centerLabelBgOval\": \"${1|1,0|}\""
  },
  "ShowCenterLabelShadow": {
    "prefix": "showCenterLabelShadow",
    "description": "Description: Whether to apply the shadow effect for the center label. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCenterLabelShadow\": \"${1|1,0|}\""
  },
  "CenterLabelHoverColor": {
    "prefix": "centerLabelHoverColor",
    "description": "Description: This attribute can set the hover color for the center label text.\n      Type: Color\n      Range: Hex color code",
    "body": "\"centerLabelHoverColor\": \"\""
  },
  "CenterLabelHoverAlpha": {
    "prefix": "centerLabelHoverAlpha",
    "description": "Description: This attribute sets the transparency for the center label text when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"centerLabelHoverAlpha\": \"\""
  },
  "CenterLabelToolText": {
    "prefix": "centerLabelToolText",
    "description": "Description: You can define the tooltip for a center label using this attribute.\n      Type: String\n",
    "body": "\"centerLabelToolText\": \"\""
  },
  "Defaultcenterlabel": {
    "prefix": "defaultcenterlabel",
    "description": "Description: Sets the default label for the chart. This label can be seen at the center of the chart.\n      Type: String\n",
    "body": "\"defaultcenterlabel\": \"\""
  },
  "ShowLabel": {
    "prefix": "showLabel",
    "description": "Description: You can individually opt to show/hide labels of individual data items using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabel\": \"${1|1,0|}\""
  },
  "HoverColor": {
    "prefix": "hoverColor",
    "description": "Description: This attribute can set the hover color for a particular data plot.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverColor\": \"\""
  },
  "HoverAlpha": {
    "prefix": "hoverAlpha",
    "description": "Description: This attribute sets the transparency for a particular data plot when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverAlpha\": \"\""
  },
  "BorderHoverColor": {
    "prefix": "borderHoverColor",
    "description": "Description: This attribute sets the border color of the data plot on hover.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"borderHoverColor\": \"\""
  },
  "BorderHoverAlpha": {
    "prefix": "borderHoverAlpha",
    "description": "Description: This attribute sets the border's transparency for the data plot on hover.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"borderHoverAlpha\": \"\""
  },
  "BorderHoverThickness": {
    "prefix": "borderHoverThickness",
    "description": "Description: This attribute sets the thickness for the data plot's border on hover.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverThickness\": \"\""
  },
  "EnableLink": {
    "prefix": "enableLink",
    "description": "Description: In a drag chart, if you have links defined for your data points (anchors), by default the links would NOT be activated. The user would need to activate it by right clicking on chart and then selecting &quot;Enable Links&quot; options. However, if you wish to enable links (instead of dragging functionality) by default, you can set this attribute to 1. In that case, the links would be accessible by default and the user can switch between link and dragging mode using the context menu of the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableLink\": \"${1|1,0|}\""
  },
  "AllowAxisChange": {
    "prefix": "allowAxisChange",
    "description": "Description: In drag charts of PowerCharts, the end user has an option to change axis limits. He can increase or decrease the axis limits as per his requirements. If you do not want the user to be able to change axis limits, set this attribute as 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowAxisChange\": \"${1|1,0|}\""
  },
  "SnapToDivOnly": {
    "prefix": "snapToDivOnly",
    "description": "Description: Using this option, you can set the configuration that data points can be dragged only to the nearest divisional lines on chart. That means, the data points cannot acquire a value between any two divisional lines and as such, they will always fall on a divisional line value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"snapToDivOnly\": \"${1|1,0|}\""
  },
  "SnapToDiv": {
    "prefix": "snapToDiv",
    "description": "Description: When dragging the lines, you can snap them to the nearest divisional line on chart. To do so, just set this attribute as 1. The difference between this attribute and `snapToDivOnly` attribute is that `snapToDivOnly` attribute (when set to 1) allows you to drag the data points onto a div line. But using this attribute, you can create a &quot;sticky&quot; kind of interface, so that when the data points is dropped near a divisional line, it assumes the divisional line value. However, if it's dropped at a farther location, it will stay here.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"snapToDiv\": \"${1|1,0|}\""
  },
  "SnapToDivRelaxation": {
    "prefix": "snapToDivRelaxation",
    "description": "Description: When snaptoDiv is set to 1, this attribute lets you set the distance in pixels (from each divisional lines), where the data points will behave &quot;sticky&quot;.\n      Type: Number\n      Range: In pixels",
    "body": "\"snapToDivRelaxation\": \"\""
  },
  "DoNotSnap": {
    "prefix": "doNotSnap",
    "description": "Description: If you do not want the data points to stick to any divisional lines, set this attribute as 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"doNotSnap\": \"${1|1,0|}\""
  },
  "AllowNegativeDrag": {
    "prefix": "allowNegativeDrag",
    "description": "Description: If you have positive as well as negative numbers on your chart, this attribute lets you configure whether the positive data points can be made negative by dragging them below zero plane.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowNegativeDrag\": \"${1|1,0|}\""
  },
  "ViewMode": {
    "prefix": "viewMode",
    "description": "Description: Whether to set the chart in view mode or edit mode. In view mode, end users will only be able to drag the nodes (which are marked as drag-able). In edit mode, they can add/delete nodes or add/delete connectors.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"viewMode\": \"${1|1,0|}\""
  },
  "ShowRestoreBtn": {
    "prefix": "showRestoreBtn",
    "description": "Description: Sets whether the __Restore__ button, rendered in the bottom left corner of the drag-node chart, should be shown or hidden \n\n__Default value__: 1 (the button is shown)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showRestoreBtn\": \"${1|1,0|}\""
  },
  "EnableLinks": {
    "prefix": "enableLinks",
    "description": "Description: If there are any links defined on the nodes, you can opt to start the chart in link mode (rather than dragging mode) by setting this attribute as 1. Your users can, at runtime, toggle between link mode and drag mode using the right-click context menu of chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableLinks\": \"${1|1,0|}\""
  },
  "EnableSubmit": {
    "prefix": "enableSubmit",
    "description": "Description: If you want the user to be able to submit the data as form, you need to set this attribute to 1. If you are using JavaScript methods to get the data from chart, you can hide this option by setting this attribute to 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableSubmit\": \"${1|1,0|}\""
  },
  "FormAction": {
    "prefix": "formAction",
    "description": "Description: URL of your Server-side script to which you want to submit data. You can either use relative path or absolute path. The name of form variable which is to be requested in this page is `strXML`. If `submitFormUsingAjax` attribute is set to `1`, the `formAction` attribute will not work.\n      Type: String\n      Range:  ",
    "body": "\"formAction\": \"\""
  },
  "FormMethod": {
    "prefix": "formMethod",
    "description": "Description: Method of form submission - POST or GET. We recommend POST method if you're submitting data as XML.\n      Type: String\n      Range: GET or POST",
    "body": "\"formMethod\": \"\""
  },
  "FormTarget": {
    "prefix": "formTarget",
    "description": "Description: Target of the form - _blank or _self. If `submitFormUsingAjax` attribute is set to `1`, the `formTarget` attribute will not work.\n      Type: String\n      Range:  ",
    "body": "\"formTarget\": \"\""
  },
  "SubmitText": {
    "prefix": "submitText",
    "description": "Description: Lets you configure the text for the submit option. By default, it is &quot;Submit&quot;.\n      Type: String\n      Range:  ",
    "body": "\"submitText\": \"\""
  },
  "SubmitFormUsingAjax": {
    "prefix": "submitFormUsingAjax",
    "description": "Description: When the __Submit__ button in drag-able charts is clicked, instead of setting a new URL or a new tab for data values, this attribute (when set to `1`) updates the data in the existing page internally. \n\n __Note__: If `submitFormUsingAjax` is set to `1`, the `formTarget` attribute will not work.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"submitFormUsingAjax\": \"${1|1,0|}\""
  },
  "EnableRestore": {
    "prefix": "enableRestore",
    "description": "Description: Whether to add the restore option in the menu.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableRestore\": \"${1|1,0|}\""
  },
  "RestoreText": {
    "prefix": "restoreText",
    "description": "Description: Lets you configure the text for the restore option. By default, it's &quot;Restore&quot;\n      Type: String\n",
    "body": "\"restoreText\": \"\""
  },
  "Connectortooltext": {
    "prefix": "connectortooltext",
    "description": "Description: This attribute works on text of the tooltip. It is used to specify the value or the text when we hover over the node or the connector. You can use variable values from the data level by putting a _$_ sign infront of it, eg $name, and you'll get the value of the name in the tooltip according to the chart.\n      Type: String\n",
    "body": "\"connectortooltext\": \"\""
  },
  "PlotHoverHeight": {
    "prefix": "plotHoverHeight",
    "description": "Description: This attribute sets the height of the rectangular plot when hovered over it.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotHoverHeight\": \"\""
  },
  "PlotHoverWidth": {
    "prefix": "plotHoverWidth",
    "description": "Description: This attribute sets the width of the rectangular plot when hovered over it.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotHoverWidth\": \"\""
  },
  "PlotHoverRadius": {
    "prefix": "plotHoverRadius",
    "description": "Description: This attribute sets the radius of the polygon/circle plot when hovered over it.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotHoverRadius\": \"\""
  },
  "AllowDrag": {
    "prefix": "allowDrag",
    "description": "Description: Whether to allow the end users to drag the nodes belonging to this data-set.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowDrag\": \"${1|1,0|}\""
  },
  "HoverHeight": {
    "prefix": "hoverHeight",
    "description": "Description: This attribute can set the height of a node when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"hoverHeight\": \"\""
  },
  "HoverWidth": {
    "prefix": "hoverWidth",
    "description": "Description: This attribute can set the width of a node when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"hoverWidth\": \"\""
  },
  "HoverRadius": {
    "prefix": "hoverRadius",
    "description": "Description: This attribute can set the radius of a node when hovered.\n      Type: Number\n      Range: I pixels",
    "body": "\"hoverRadius\": \"\""
  },
  "Shape": {
    "prefix": "shape",
    "description": "Description: Lets you define the shape of node. Valid values are RECTANGLE / CIRCLE or POLYGON.\n      Type: String\n      Range: RECTANGLE / CIRCLE or POLYGON",
    "body": "\"shape\": \"\""
  },
  "Height": {
    "prefix": "height",
    "description": "Description: If you have selected Rectangle as the shape, this attribute lets you define the height of the same.\n      Type: Number\n      Range: Pixels",
    "body": "\"height\": \"\""
  },
  "Width": {
    "prefix": "width",
    "description": "Description: If you have selected Rectangle as the shape, this attribute lets you define the width of the same.\n      Type: Number\n      Range: Pixels",
    "body": "\"width\": \"\""
  },
  "NumSides": {
    "prefix": "numSides",
    "description": "Description: If you have selected Polygon as the shape for node, this attribute lets you define the sides for the same.\n      Type: Number\n      Range: More than 3.",
    "body": "\"numSides\": \"\""
  },
  "ImageNode": {
    "prefix": "imageNode",
    "description": "Description: Whether this node should contain an image. You can load GIF/JPG or PNG images in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"imageNode\": \"${1|1,0|}\""
  },
  "ImageAlign": {
    "prefix": "imageAlign",
    "description": "Description: Vertical alignment of image in the node - TOP, MIDDLE or BOTTOM\n      Type: String\n      Range: TOP, MIDDLE or BOTTOM",
    "body": "\"imageAlign\": \"\""
  },
  "ImageWidth": {
    "prefix": "imageWidth",
    "description": "Description: Width of the image that you intend to load.\n      Type: Number\n      Range: Pixels",
    "body": "\"imageWidth\": \"\""
  },
  "ImageHeight": {
    "prefix": "imageHeight",
    "description": "Description: Height of the image that you intend to load.\n      Type: Number\n      Range: Pixels",
    "body": "\"imageHeight\": \"\""
  },
  "LabelAlign": {
    "prefix": "labelAlign",
    "description": "Description: Vertical alignment of the node label in the node -TOP, MIDDLE or BOTTOM. This is applicable only when `imageNode='1'`.\n      Type: String\n      Range: TOP, MIDDLE or BOTTOM",
    "body": "\"labelAlign\": \"\""
  },
  "Y": {
    "prefix": "y",
    "description": "Description: The y-axis value for the node. The node will be placed vertically on the y-axis based on this value. The y value (numerical position on the y-axis) is not based on pixels. All the values contribute to form a numeric scale on the y-axis. You can modify this scale using `yAxisMaxValue` and `yAxisMinValue` attributes.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"y\": \"\""
  },
  "ArrowAtEnd": {
    "prefix": "arrowAtEnd",
    "description": "Description: Whether to show arrows at the end point of connectors.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"arrowAtEnd\": \"${1|1,0|}\""
  },
  "ArrowAtStart": {
    "prefix": "arrowAtStart",
    "description": "Description: Whether to show arrows at the origin of connectors.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"arrowAtStart\": \"${1|1,0|}\""
  },
  "StdThickness": {
    "prefix": "stdThickness",
    "description": "Description: Using this value, you can specify a number which will be multiplied by individual connectors strength to get the line thickness. Say, you have a connector whose thickness should be 2 pixels and another whose thickness should be 4. So, you can define this attribute as 2 and then specify the strength of first connector as 1 and second one as 2. This is useful when you're plotting network diagrams and you have to show link strength as connector thickness.\n      Type: Number\n      Range: 0-5",
    "body": "\"stdThickness\": \"\""
  },
  "Strength": {
    "prefix": "strength",
    "description": "Description: Default strength for all connectors.\n      Type: Number\n      Range: 0-2",
    "body": "\"strength\": \"\""
  },
  "From": {
    "prefix": "from",
    "description": "Description: ID of the node from where you want the connector to start. The id should refer to the user defined id of each node (defined in XML).\n      Type: String\n      Range:  ",
    "body": "\"from\": \"\""
  },
  "To": {
    "prefix": "to",
    "description": "Description: ID of the node from where you want the connector to end. The id should refer to the user defined id of each node (defined in XML).\n      Type: String\n      Range:  ",
    "body": "\"to\": \"\""
  },
  "Allowdrag": {
    "prefix": "allowdrag",
    "description": "Description: Whether to allow the user to drag this particular label.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowdrag\": \"${1|1,0|}\""
  },
  "Fontsize": {
    "prefix": "fontsize",
    "description": "Description: Sets the font size of the label.\n      Type: Number\n      Range:  ",
    "body": "\"fontsize\": \"\""
  },
  "Padding": {
    "prefix": "padding",
    "description": "Description: Padding space around the text. The background color of the label spreads till this padding space. Around this padding space the border is drawn.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"padding\": \"${1|1,0|}\""
  },
  "Text": {
    "prefix": "text",
    "description": "Description: The text that is displayed on the label.\n      Type: String\n      Range:  ",
    "body": "\"text\": \"\""
  },
  "HalfErrorBar": {
    "prefix": "halfErrorBar",
    "description": "Description: PowerCharts XT supports two types of error bars - normal error bars (half) and high-low error bars (full). Using this attribute, you can set whether to show half error bars or full error bars.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"halfErrorBar\": \"${1|1,0|}\""
  },
  "ErrorBarWidthPercent": {
    "prefix": "errorBarWidthPercent",
    "description": "Description: What percent of column width should the width of error bars be.\n      Type: Number\n      Range: In Percent",
    "body": "\"errorBarWidthPercent\": \"\""
  },
  "ErrorInPercent": {
    "prefix": "errorInPercent",
    "description": "Description: This attribute specifies that the error value is in percent of original plot value. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"errorInPercent\": \"${1|1,0|}\""
  },
  "ErrorBarColor": {
    "prefix": "errorBarColor",
    "description": "Description: Color for all the error bars on the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"errorBarColor\": \"\""
  },
  "ErrorBarAlpha": {
    "prefix": "errorBarAlpha",
    "description": "Description: Alpha for all the error bars on the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"errorBarAlpha\": \"\""
  },
  "ErrorBarThickness": {
    "prefix": "errorBarThickness",
    "description": "Description: Line thickness for all the error bars on the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"errorBarThickness\": \"\""
  },
  "Cumulativevalueonerrorbar": {
    "prefix": "cumulativevalueonerrorbar",
    "description": "Description: This attribute enables (or disables) cumulative plot values when the cursor is hovered upon the upper and lower limits of the error bars. Therefore, the tooltip will show the cumulative plot values along with the plot values. \n\n Default value: __1__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"cumulativevalueonerrorbar\": \"${1|1,0|}\""
  },
  "ErrorValue": {
    "prefix": "errorValue",
    "description": "Description: Error value to be plotted as error bar on the chart.\n      Type: Number\n",
    "body": "\"errorValue\": \"\""
  },
  "PositiveErrorValue": {
    "prefix": "positiveErrorValue",
    "description": "Description: This attribute helps you explicitly set the error value for the upper (positive) limit. \n\n__Default value__: Inherited from `errorValue`\n      Type: Number\n",
    "body": "\"positiveErrorValue\": \"\""
  },
  "NegativeErrorValue": {
    "prefix": "negativeErrorValue",
    "description": "Description: This attribute helps you explicitly set the error value for the lower (negative) limit. \n\n__Default value__: Inherited from `errorValue`\n      Type: Number\n",
    "body": "\"negativeErrorValue\": \"\""
  },
  "ErrorBarWidth": {
    "prefix": "errorBarWidth",
    "description": "Description: This attribute lets you set the width for the horizontal and vertical error bars.\n      Type: Number\n      Range: In Pixels",
    "body": "\"errorBarWidth\": \"\""
  },
  "UseHorizontalErrorBar": {
    "prefix": "useHorizontalErrorBar",
    "description": "Description: Whether to show horizontal error bars in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useHorizontalErrorBar\": \"${1|1,0|}\""
  },
  "UseVerticalErrorBar": {
    "prefix": "useVerticalErrorBar",
    "description": "Description: Whether to show vertical error bars in the chart. By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useVerticalErrorBar\": \"${1|1,0|}\""
  },
  "HalfHorizontalErrorBar": {
    "prefix": "halfHorizontalErrorBar",
    "description": "Description: If you have opted to show horizontal error bars, this attribute lets you set whether the chart will display half or full horizontal error bars in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"halfHorizontalErrorBar\": \"${1|1,0|}\""
  },
  "HalfVerticalErrorBar": {
    "prefix": "halfVerticalErrorBar",
    "description": "Description: This attribute lets you set whether the chart will display half or full vertical error bars in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"halfVerticalErrorBar\": \"${1|1,0|}\""
  },
  "HorizontalErrorBarWidth": {
    "prefix": "horizontalErrorBarWidth",
    "description": "Description: This attribute lets you individually set the width of all horizontal error bars. This attribute over-rides the width applied using `errorBarWidth` attribute.\n      Type: Number\n      Range: In Pixels",
    "body": "\"horizontalErrorBarWidth\": \"\""
  },
  "VerticalErrorBarWidth": {
    "prefix": "verticalErrorBarWidth",
    "description": "Description: This attribute lets you individually set the width of all vertical error bars. This attribute over-rides the width applied using `errorBarWidth` attribute.\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalErrorBarWidth\": \"\""
  },
  "HorizontalErrorBarColor": {
    "prefix": "horizontalErrorBarColor",
    "description": "Description: Helps you set the color of horizontal error bars on the chart. This attribute over-rides the color applied using `errorBarColor` attribute.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"horizontalErrorBarColor\": \"\""
  },
  "VerticalErrorBarColor": {
    "prefix": "verticalErrorBarColor",
    "description": "Description: Helps you set the color of the vertical error bars on the chart. This attribute over-rides the color applied using `errorBarColor` attribute.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"verticalErrorBarColor\": \"\""
  },
  "HorizontalErrorBarAlpha": {
    "prefix": "horizontalErrorBarAlpha",
    "description": "Description: Helps you set the alpha of the horizontal error bars on the chart. This attribute over-rides the alpha applied using `errorBarAlpha` attribute.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"horizontalErrorBarAlpha\": \"\""
  },
  "VerticalErrorBarAlpha": {
    "prefix": "verticalErrorBarAlpha",
    "description": "Description: Helps you set the alpha of the vertical error bars on the chart. This attribute over-rides the alpha applied using `errorBarAlpha` attribute.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"verticalErrorBarAlpha\": \"\""
  },
  "HorizontalErrorBarThickness": {
    "prefix": "horizontalErrorBarThickness",
    "description": "Description: Helps you set the thickness of the horizontal error bars on the chart. This attribute over-rides the thickness applied using `errorBarThickness` attribute.\n      Type: Number\n      Range: In Pixels",
    "body": "\"horizontalErrorBarThickness\": \"\""
  },
  "VerticalErrorBarThickness": {
    "prefix": "verticalErrorBarThickness",
    "description": "Description: Helps you set the thickness of the vertical error bars on the chart. This attribute over-rides the thickness applied using `errorBarThickness` attribute.\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalErrorBarThickness\": \"\""
  },
  "HorizontalErrorValue": {
    "prefix": "horizontalErrorValue",
    "description": "Description: Horizontal error value to be plotted as error bar for individual data items.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"horizontalErrorValue\": \"\""
  },
  "VerticalErrorValue": {
    "prefix": "verticalErrorValue",
    "description": "Description: Vertical error value to be plotted as error bar for individual data items.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"verticalErrorValue\": \"\""
  },
  "ShowLabelsAtCenter": {
    "prefix": "showLabelsAtCenter",
    "description": "Description: Whether to show the labels of each funnel at its side or at the center? This attribute is only applicable for 2D Pyramid chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabelsAtCenter\": \"${1|1,0|}\""
  },
  "LabelDistance": {
    "prefix": "labelDistance",
    "description": "Description: Lets you set the horizontal distance between the data labels & funnel slices.\n      Type: Number\n      Range: In pixels",
    "body": "\"labelDistance\": \"\""
  },
  "LabelSepChar": {
    "prefix": "labelSepChar",
    "description": "Description: If you've opted to show both funnel label & value, this attribute lets you specify the character using which they'll be separated. By default, a comma (,) is used.\n      Type: String\n",
    "body": "\"labelSepChar\": \"\""
  },
  "EnableSmartLabels": {
    "prefix": "enableSmartLabels",
    "description": "Description: Whether to use smart lines & labels for the funnel chart?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"enableSmartLabels\": \"${1|1,0|}\""
  },
  "SmartLineColor": {
    "prefix": "smartLineColor",
    "description": "Description: If you've opted to use smart lines, this attribute lets you define the color for the same.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"smartLineColor\": \"\""
  },
  "SmartLineThickness": {
    "prefix": "smartLineThickness",
    "description": "Description: Thickness of smart lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"smartLineThickness\": \"\""
  },
  "SmartLineAlpha": {
    "prefix": "smartLineAlpha",
    "description": "Description: Alpha of the smart lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"smartLineAlpha\": \"\""
  },
  "PercentOfPrevious": {
    "prefix": "percentOfPrevious",
    "description": "Description: When showing values in percentage for each slice, you can ask the chart to calculate the percentage value of a slice w.r.t the previous slice (instead of the first slice) by setting this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"percentOfPrevious\": \"${1|1,0|}\""
  },
  "StreamlinedData": {
    "prefix": "streamlinedData",
    "description": "Description: Whether to present the data as streamlined data or as section data?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"streamlinedData\": \"${1|1,0|}\""
  },
  "Is2D": {
    "prefix": "is2D",
    "description": "Description: Whether the chart will render as 2D?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"is2D\": \"${1|1,0|}\""
  },
  "IsSliced": {
    "prefix": "isSliced",
    "description": "Description: This attribute determines whether a funnel slice appears as a part of the total chart or is sliced out as an individual item.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isSliced\": \"${1|1,0|}\""
  },
  "IsHollow": {
    "prefix": "isHollow",
    "description": "Description: Whether the funnel slices will render as filled slices or as hollow ones?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isHollow\": \"${1|1,0|}\""
  },
  "UseSameSlantAngle": {
    "prefix": "useSameSlantAngle",
    "description": "Description: In a streamlined funnel chart, whether all slices will have the same slant angle?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useSameSlantAngle\": \"${1|1,0|}\""
  },
  "FunnelYScale": {
    "prefix": "funnelYScale",
    "description": "Description: Lets you set the 3D perspective of the funnel. You'll need to restrict your values to a value between 0 and 40 (depending on your funnel chart dimensions) to get a proper drawing.\n      Type: Number\n      Range: 0 - 40",
    "body": "\"funnelYScale\": \"\""
  },
  "Palettecolors": {
    "prefix": "palettecolors",
    "description": "Description: This attribute sets the color for each of the individual data plots of the funnel.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"palettecolors\": \"\""
  },
  "LabelBgColor": {
    "prefix": "labelBgColor",
    "description": "Description: Sets the background color for x-axis label text.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelBgColor\": \"\""
  },
  "LabelBorderColor": {
    "prefix": "labelBorderColor",
    "description": "Description: Sets the color of the border around the x-axis label text.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelBorderColor\": \"\""
  },
  "LabelAlpha": {
    "prefix": "labelAlpha",
    "description": "Description: Sets the x-axis label alpha for both font and background.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelAlpha\": \"\""
  },
  "LabelBgAlpha": {
    "prefix": "labelBgAlpha",
    "description": "Description: Sets the x-axis label background alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelBgAlpha\": \"\""
  },
  "LabelBorderAlpha": {
    "prefix": "labelBorderAlpha",
    "description": "Description: Sets the x-axis label border alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelBorderAlpha\": \"\""
  },
  "LabelBorderPadding": {
    "prefix": "labelBorderPadding",
    "description": "Description: Sets the x-axis label border padding.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderPadding\": \"\""
  },
  "LabelBorderRadius": {
    "prefix": "labelBorderRadius",
    "description": "Description: Sets the x-axis label border radius.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderRadius\": \"\""
  },
  "LabelBorderThickness": {
    "prefix": "labelBorderThickness",
    "description": "Description: Sets the x-axis label border thickness.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderThickness\": \"\""
  },
  "LabelBorderDashed": {
    "prefix": "labelBorderDashed",
    "description": "Description: Whether the border around x-axis labels should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelBorderDashed\": \"${1|1,0|}\""
  },
  "LabelBorderDashLen": {
    "prefix": "labelBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the x-axis labels are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"labelBorderDashLen\": \"\""
  },
  "LabelBorderDashGap": {
    "prefix": "labelBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around x-axis labels are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"labelBorderDashGap\": \"\""
  },
  "LabelLink": {
    "prefix": "labelLink",
    "description": "Description: Sets a link for every data plot labels.\n      Type: URL\n",
    "body": "\"labelLink\": \"\""
  },
  "LegendItemHoverFontColor": {
    "prefix": "legendItemHoverFontColor",
    "description": "Description: Sets legend item font color on hover\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendItemHoverFontColor\": \"\""
  },
  "LegendItemHiddenColor": {
    "prefix": "legendItemHiddenColor",
    "description": "Description: Sets the color that applies on both text font and icon when they are in a  disabled / hidden state\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendItemHiddenColor\": \"\""
  },
  "LegendIconScale": {
    "prefix": "legendIconScale",
    "description": "Description: Scaling of legend icon is possible starting FusionWidgets XT. This attribute lets you control the size of the legend icon. The default scale value is 1. Anything less than 1 reduces the size of the legend-icons on the chart. Any value bigger than 1 enlarges the icons. e.g., 0.5 means half the size, whereas, 2 means twice the size.\n      Type: Number\n      Range: 1-5",
    "body": "\"legendIconScale\": \"\""
  },
  "LegendScrollBgColor": {
    "prefix": "legendScrollBgColor",
    "description": "Description: If you've too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendScrollBgColor\": \"\""
  },
  "ReverseLegend": {
    "prefix": "reverseLegend",
    "description": "Description: You can reverse the ordering of datasets in the legend by setting this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"reverseLegend\": \"${1|1,0|}\""
  },
  "InteractiveLegend": {
    "prefix": "interactiveLegend",
    "description": "Description: This attribute lets you interact with the legend in your chart. When you click a particular legend key, the associated slice slides out from the chart. Re-clicking the key causes the slice to slide in.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"interactiveLegend\": \"${1|1,0|}\""
  },
  "LegendNumColumns": {
    "prefix": "legendNumColumns",
    "description": "Description: The legend items are arranged in columns. Using this attribute, you can set the number of columns. This value undergoes internal checking on judicious use of white-space. In case, the value is found improper, the chart auto-calculates the number of columns. When set to 0, the chart automatically decides the number of columns. The above is applicable when `legendPosition` is set to `BOTTOM``.` If the `legendPosition` is set to `RIGHT`, the number of columns is always set to 1.\n      Type: Number\n      Range: Zero and Positive Integers",
    "body": "\"legendNumColumns\": \"\""
  },
  "MinimiseWrappingInLegend": {
    "prefix": "minimiseWrappingInLegend",
    "description": "Description: Whether to minimize legend item text wrapping.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"minimiseWrappingInLegend\": \"${1|1,0|}\""
  },
  "DrawCustomLegendIcon": {
    "prefix": "drawCustomLegendIcon",
    "description": "Description: Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawCustomLegendIcon\": \"${1|1,0|}\""
  },
  "LegendIconBorderColor": {
    "prefix": "legendIconBorderColor",
    "description": "Description: Sets the border color for the legend icon. \n\nDefault value: Data plot border color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendIconBorderColor\": \"\""
  },
  "LegendIconBgColor": {
    "prefix": "legendIconBgColor",
    "description": "Description: Sets the background color for the legend icon. \n\nDefault value: Data plot fill color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendIconBgColor\": \"\""
  },
  "LegendIconAlpha": {
    "prefix": "legendIconAlpha",
    "description": "Description: Sets the legend icon transparency. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendIconAlpha\": \"\""
  },
  "LegendIconBgAlpha": {
    "prefix": "legendIconBgAlpha",
    "description": "Description: Sets the legend icon background transparency. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendIconBgAlpha\": \"\""
  },
  "LegendIconSides": {
    "prefix": "legendIconSides",
    "description": "Description: Sets the number of sides for the legend icon. \n\nDefault value: 4\n      Type: Number\n",
    "body": "\"legendIconSides\": \"\""
  },
  "LegendIconBorderThickness": {
    "prefix": "legendIconBorderThickness",
    "description": "Description: Sets the thickness of the legend icon border. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"legendIconBorderThickness\": \"\""
  },
  "LegendIconStartAngle": {
    "prefix": "legendIconStartAngle",
    "description": "Description: Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45\n      Type: Number\n",
    "body": "\"legendIconStartAngle\": \"\""
  },
  "AlignLegendWithCanvas": {
    "prefix": "alignLegendWithCanvas",
    "description": "Description: This attribute if set to `0`, the legend box will be center aligned with respect to the entire width of the chart only if the total width of the legend box is more than the canvas width. By default, the legend box is center aligned with respect to the canvas width and it remains the same if the width of the legend box is less than the canvas width.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"alignLegendWithCanvas\": \"${1|1,0|}\""
  },
  "ShowPercentInToolTip": {
    "prefix": "showPercentInToolTip",
    "description": "Description: Whether to show percent values in tooltip? If not, the actual values will be shown.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPercentInToolTip\": \"${1|1,0|}\""
  },
  "DateFormat": {
    "prefix": "dateFormat",
    "description": "Description: This attribute helps you specify the input date format for all the dates in your XML. This is a mandatory attribute to specify and once specified, all the dates in your XML data should conform to the format specified herein.\n      Type: Date\n      Range: 'mm/dd/yyyy' or 'dd/mm/yyyy' or 'yyyy/mm/dd' or 'mm-dd-yyyy' or 'dd-mm-yyyy' or 'yyyy-mm-dd'",
    "body": "\"dateFormat\": \"\""
  },
  "OutputDateFormat": {
    "prefix": "outputDateFormat",
    "description": "Description: You can also specify how the dates look on your Gantt chart using this attribute. This attribute takes the output date format as string. You can build your own output date format string as explained in the section &quot;Configuring date formats&quot;.\n      Type: String\n",
    "body": "\"outputDateFormat\": \"\""
  },
  "GanttPaneDuration": {
    "prefix": "ganttPaneDuration",
    "description": "Description: If you want your Gantt pane to scroll through a specified time line, you can use this attribute to set what timeline the pane will represent. For example, if you want your Gantt pane to show date only for 3 months and then scroll the rest, you can set this attribute as 3. More of this has been explained in the section &quot;Enable scrolling&quot;.\n      Type: Number\n",
    "body": "\"ganttPaneDuration\": \"\""
  },
  "GanttPaneDurationUnit": {
    "prefix": "ganttPaneDurationUnit",
    "description": "Description: If you've opted to scroll the Gantt pane, this attribute lets you choose the unit of your specified duration. More of this has been explained in the section &quot;Enable scrolling&quot;.\n      Type: String\n      Range: 'y','m','d','h','mn' or 's'",
    "body": "\"ganttPaneDurationUnit\": \"\""
  },
  "ShowFullDataTable": {
    "prefix": "showFullDataTable",
    "description": "Description: Whether to show full names of the process labels and data columns in grid. If you set this as on, the labels will not wrap and always show in full. When required, a scroll bar will automatically appear for the entire grid.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showFullDataTable\": \"${1|1,0|}\""
  },
  "GanttWidthPercent": {
    "prefix": "ganttWidthPercent",
    "description": "Description: You can opt to set the width of the Gantt view pane in percent using this attribute. The rest of the width will be taken by the grid. If the data grid takes lesser space, the chart will automatically adjust the Gantt pane to assume more width.\n      Type: Number\n      Range: 10 - 100",
    "body": "\"ganttWidthPercent\": \"\""
  },
  "ForceGanttWidthPercent": {
    "prefix": "forceGanttWidthPercent",
    "description": "Description: If you want the chart to never automatically adjust the Gantt width and stick to the percent width that you've specified, you can set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceGanttWidthPercent\": \"${1|1,0|}\""
  },
  "ShowTaskStartDate": {
    "prefix": "showTaskStartDate",
    "description": "Description: For each task bar in the Gantt chart, you can show its respective start date on its left. To do so, set this attribute as 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTaskStartDate\": \"${1|1,0|}\""
  },
  "ShowTaskEndDate": {
    "prefix": "showTaskEndDate",
    "description": "Description: For each task bar in the Gantt chart, you can show its end date value too by setting this attribute as 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTaskEndDate\": \"${1|1,0|}\""
  },
  "ShowTaskLabels": {
    "prefix": "showTaskLabels",
    "description": "Description: Whether to show task labels for each task bar in the Gantt chart. The task labels show up only if they've been defined for the task.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTaskLabels\": \"${1|1,0|}\""
  },
  "ShowPercentLabel": {
    "prefix": "showPercentLabel",
    "description": "Description: If you've used the percentage task feature, you can opt to show the percent complete for each task as part of the task label by setting this attribute as 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPercentLabel\": \"${1|1,0|}\""
  },
  "ShowSlackAsFill": {
    "prefix": "showSlackAsFill",
    "description": "Description: If you've used the percentage task feature, you can opt to show the slack (percent of work not completed) as either a filled bar or empty bar. To draw as empty bars, set this attribute as 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showSlackAsFill\": \"${1|1,0|}\""
  },
  "SlackFillColor": {
    "prefix": "slackFillColor",
    "description": "Description: If you've opted to fill the slack bars with color, you can define the color code for the same here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"slackFillColor\": \"\""
  },
  "ExtendCategoryBg": {
    "prefix": "extendCategoryBg",
    "description": "Description: If you set this attribute as 1, the Gantt pane grid will take the same background and border properties as that of the last category (visual dateline) defined.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"extendCategoryBg\": \"${1|1,0|}\""
  },
  "ScrollToDate": {
    "prefix": "scrollToDate",
    "description": "Description: Chart will automatically scroll to the given date at the time of rendering. This attribute will only work when `ganttPaneDuration` and `ganttPaneDurationUnit` attributes are set as per requirement. This feature is supported by JavaScript Gantt chart only.\n      Type: Date\n      Range: 'mm/dd/yyyy'",
    "body": "\"scrollToDate\": \"\""
  },
  "UseVerticalScrolling": {
    "prefix": "useVerticalScrolling",
    "description": "Description: Whether to display the vertical scroll bar or not. By default, the attribute is set to 1 and the vertical scroll bar appears depending on the height of the chart. More of this has been explained in the section &quot;Enable scrolling&quot;. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useVerticalScrolling\": \"${1|1,0|}\""
  },
  "ForceRowHeight": {
    "prefix": "forceRowHeight",
    "description": "Description: When the process rows do not occupy the complete height of the chart, this attribute is used to specify the row height configuration. If set to true, each row is set to its own height. Otherwise, the rows occupy the total available height equally. Default value is false.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceRowHeight\": \"${1|1,0|}\""
  },
  "GanttLineColor": {
    "prefix": "ganttLineColor",
    "description": "Description: Lets you specify the color in which the grid border for the Gantt pane view will be drawn.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"ganttLineColor\": \"\""
  },
  "GanttLineAlpha": {
    "prefix": "ganttLineAlpha",
    "description": "Description: Alpha for the grid border of Gantt view pane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"ganttLineAlpha\": \"\""
  },
  "GridBorderColor": {
    "prefix": "gridBorderColor",
    "description": "Description: Color for the data grid border.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"gridBorderColor\": \"\""
  },
  "GridBorderAlpha": {
    "prefix": "gridBorderAlpha",
    "description": "Description: Alpha for the data grid border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gridBorderAlpha\": \"\""
  },
  "GridResizeBarColor": {
    "prefix": "gridResizeBarColor",
    "description": "Description: Color for the drag line that appears when resizing the data grid.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"gridResizeBarColor\": \"\""
  },
  "GridResizeBarThickness": {
    "prefix": "gridResizeBarThickness",
    "description": "Description: Thickness of the drag line that appears when resizing the data grid,\n      Type: Number\n",
    "body": "\"gridResizeBarThickness\": \"\""
  },
  "GridResizeBarAlpha": {
    "prefix": "gridResizeBarAlpha",
    "description": "Description: Alpha of the drag line that appears when resizing the data grid.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"gridResizeBarAlpha\": \"\""
  },
  "TaskBarRoundRadius": {
    "prefix": "taskBarRoundRadius",
    "description": "Description: If you want your task bars to be rounded (when not using percent complete feature), you can set the radius of the round corner here. That'll result in all task bars having rounded corners.\n      Type: Number\n",
    "body": "\"taskBarRoundRadius\": \"\""
  },
  "TaskBarFillMix": {
    "prefix": "taskBarFillMix",
    "description": "Description: This attribute lets you specify the gradient fill formula for the task bars. Example: `{light-10},{light-20},{light-60}`\n      Type: String\n",
    "body": "\"taskBarFillMix\": \"\""
  },
  "TaskBarFillRatio": {
    "prefix": "taskBarFillRatio",
    "description": "Description: If you're using gradient fill formula for the task bars, this attribute lets you specify the ratio for each color in the gradient.\n      Type: Numbers separated by comma\n",
    "body": "\"taskBarFillRatio\": \"\""
  },
  "DateInToolTip": {
    "prefix": "dateInToolTip",
    "description": "Description: Whether to show starting and ending date for each task in tooltip?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"dateInToolTip\": \"${1|1,0|}\""
  },
  "ShowHoverBand": {
    "prefix": "showHoverBand",
    "description": "Description: Whether to show the vertical and horizontal hover band for both the `categories` and the `processes` objects. This atrribute overrides the value of `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHoverBand\": \"${1|1,0|}\""
  },
  "HoverBandColor": {
    "prefix": "hoverBandColor",
    "description": "Description: Lets you set the hover band color of both the `categories` and the `processes` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverBandColor\": \"\""
  },
  "HoverBandAlpha": {
    "prefix": "hoverBandAlpha",
    "description": "Description: Lets you set the transparency of the hover band for both the `categories` and the `processes` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverBandAlpha\": \"\""
  },
  "ShowCategoryHoverBand": {
    "prefix": "showCategoryHoverBand",
    "description": "Description: Whether to show the vertical color band on mouse hover for the `categories` object. The value of this attribute overrides the value of the `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCategoryHoverBand\": \"${1|1,0|}\""
  },
  "CategoryHoverBandColor": {
    "prefix": "categoryHoverBandColor",
    "description": "Description: Lets you set the hover band color for multiple `categories` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"categoryHoverBandColor\": \"\""
  },
  "CategoryHoverBandAlpha": {
    "prefix": "categoryHoverBandAlpha",
    "description": "Description: Lets you set the transparency of the hover band for multiple `categories` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"categoryHoverBandAlpha\": \"\""
  },
  "ShowGanttPaneVerticalHoverBand": {
    "prefix": "showGanttPaneVerticalHoverBand",
    "description": "Description: Whether to show the color band of Gantt pane on mouse hover for multiple `categories` objects. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showGanttPaneVerticalHoverBand\": \"${1|1,0|}\""
  },
  "ShowProcessHoverBand": {
    "prefix": "showProcessHoverBand",
    "description": "Description: Whether to show the horizontal hover band for the `processes` object on mouse hover. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showProcessHoverBand\": \"${1|1,0|}\""
  },
  "ProcessHoverBandColor": {
    "prefix": "processHoverBandColor",
    "description": "Description: Lets you set the hover band color for all `processes` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"processHoverBandColor\": \"\""
  },
  "ProcessHoverBandAlpha": {
    "prefix": "processHoverBandAlpha",
    "description": "Description: Lets you set the transparency of the hover band for all `processes` objects. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"processHoverBandAlpha\": \"\""
  },
  "ShowGanttPaneHorizontalHoverBand": {
    "prefix": "showGanttPaneHorizontalHoverBand",
    "description": "Description: Whether to show the hover bands for the `processes` object of the Gantt pane on mouse hover. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showGanttPaneHorizontalHoverBand\": \"${1|1,0|}\""
  },
  "ShowConnectorHoverEffect": {
    "prefix": "showConnectorHoverEffect",
    "description": "Description: Whether to display the mouse hover effect on connector lines. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showConnectorHoverEffect\": \"${1|1,0|}\""
  },
  "ConnectorHoverColor": {
    "prefix": "connectorHoverColor",
    "description": "Description: Lets you set the hover color of the connector lines. This feature is supported by JavaScript Gantt chart only.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"connectorHoverColor\": \"\""
  },
  "ConnectorHoverAlpha": {
    "prefix": "connectorHoverAlpha",
    "description": "Description: Lets you set the transparency of the hover color of the connector lines. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"connectorHoverAlpha\": \"\""
  },
  "ConnectorHoverThickness": {
    "prefix": "connectorHoverThickness",
    "description": "Description: Lets you set the thickness of the connector lines after the mouse cursor hover. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n",
    "body": "\"connectorHoverThickness\": \"\""
  },
  "ShowTaskHoverEffect": {
    "prefix": "showTaskHoverEffect",
    "description": "Description: Whether to use the mouse hover effect of task bars. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTaskHoverEffect\": \"${1|1,0|}\""
  },
  "TaskHoverFillColor": {
    "prefix": "taskHoverFillColor",
    "description": "Description: Lets you set the color of task fill on mouse hover. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"taskHoverFillColor\": \"${1|1,0|}\""
  },
  "TaskHoverFillAlpha": {
    "prefix": "taskHoverFillAlpha",
    "description": "Description: Lets you set the transparency of the task fill on mouse hover. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"taskHoverFillAlpha\": \"${1|1,0|}\""
  },
  "SlackHoverFillColor": {
    "prefix": "slackHoverFillColor",
    "description": "Description: Lets you set the hover color of the task bar slack. This attribute is not applicable when `showSlackAsFill` is set to 0. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n",
    "body": "\"slackHoverFillColor\": \"\""
  },
  "SlackHoverFillAlpha": {
    "prefix": "slackHoverFillAlpha",
    "description": "Description: Lets you set the transparency of the hover color of the task bar slack fill. This attribute is not applicable when `showSlackAsFill` is set to 0. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"slackHoverFillAlpha\": \"${1|1,0|}\""
  },
  "ScrollWidth": {
    "prefix": "scrollWidth",
    "description": "Description: Width of scroll bar.\n      Type: Number\n      Range: In pixels",
    "body": "\"scrollWidth\": \"\""
  },
  "ScrollBtnWidth": {
    "prefix": "scrollBtnWidth",
    "description": "Description: Width of scroll buttons.\n      Type: Number\n      Range: In pixels",
    "body": "\"scrollBtnWidth\": \"\""
  },
  "ScrollBtnPadding": {
    "prefix": "scrollBtnPadding",
    "description": "Description: Horizontal padding between the scroll bar and its buttons.\n      Type: Number\n      Range: In pixels",
    "body": "\"scrollBtnPadding\": \"\""
  },
  "TaskDatePadding": {
    "prefix": "taskDatePadding",
    "description": "Description: Horizontal padding between the task bars and start of date labels (if you've opted to show them for the chart).\n      Type: Number\n      Range: In pixels",
    "body": "\"taskDatePadding\": \"\""
  },
  "MilestoneFont": {
    "prefix": "milestoneFont",
    "description": "Description: Sets the font family for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.\n      Type: String\n",
    "body": "\"milestoneFont\": \"\""
  },
  "MilestoneFontSize": {
    "prefix": "milestoneFontSize",
    "description": "Description: Sets the font  size for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.\n      Type: String\n",
    "body": "\"milestoneFontSize\": \"\""
  },
  "MilestoneFontColor": {
    "prefix": "milestoneFontColor",
    "description": "Description: Sets the font  color for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.\n      Type: String\n",
    "body": "\"milestoneFontColor\": \"\""
  },
  "MilestoneFontBold": {
    "prefix": "milestoneFontBold",
    "description": "Description: Sets whether the milestone label will be formatted in bold  \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.\n      Type: String\n      Range: 0/1",
    "body": "\"milestoneFontBold\": \"\""
  },
  "MilestoneFontItalic": {
    "prefix": "milestoneFontItalic",
    "description": "Description: Sets whether the milestone label will be formatted in italics  \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.\n      Type: String\n      Range: 0/1",
    "body": "\"milestoneFontItalic\": \"\""
  },
  "Align": {
    "prefix": "align",
    "description": "Description: Horizontal alignment position of category labels.\n      Type: String\n      Range: 'left', 'center' or 'right'",
    "body": "\"align\": \"\""
  },
  "IsBold": {
    "prefix": "isBold",
    "description": "Description: Whether to render font as bold for this category?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isBold\": \"${1|1,0|}\""
  },
  "IsItalic": {
    "prefix": "isItalic",
    "description": "Description: Whether to render font as italic for this category?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isItalic\": \"${1|1,0|}\""
  },
  "IsUnderline": {
    "prefix": "isUnderline",
    "description": "Description: Whether to render font as underline for this category?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isUnderline\": \"${1|1,0|}\""
  },
  "ShowGanttPaneHoverBand": {
    "prefix": "showGanttPaneHoverBand",
    "description": "Description: Whether to show the color band of Gantt pane on mouse hover. This feature is supported by JavaScript Gantt chart only.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showGanttPaneHoverBand\": \"${1|1,0|}\""
  },
  "VAlign": {
    "prefix": "vAlign",
    "description": "Description: Vertical alignment position of category labels.\n      Type: String\n      Range: 'top', 'middle' or 'bottom'",
    "body": "\"vAlign\": \"\""
  },
  "End": {
    "prefix": "end",
    "description": "Description: End date/time for this category. Needs to be specified in the date/time formats for the chart.\n      Type: Date/Time\n",
    "body": "\"end\": \"\""
  },
  "Start": {
    "prefix": "start",
    "description": "Description: Start date/time for this category. Needs to be specified in the date/time formats for the chart.\n      Type: Date/Time\n",
    "body": "\"start\": \"\""
  },
  "HeaderAlign": {
    "prefix": "headerAlign",
    "description": "Description: Horizontal alignment position of the header label.\n      Type: String\n      Range: 'left', 'center' or 'right'",
    "body": "\"headerAlign\": \"\""
  },
  "HeaderBgAlpha": {
    "prefix": "headerBgAlpha",
    "description": "Description: Background alpha of the process header.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"headerBgAlpha\": \"\""
  },
  "HeaderBgColor": {
    "prefix": "headerBgColor",
    "description": "Description: Background color of the process header.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"headerBgColor\": \"\""
  },
  "HeaderFont": {
    "prefix": "headerFont",
    "description": "Description: Font for the process header\n      Type: Font face\n",
    "body": "\"headerFont\": \"\""
  },
  "HeaderFontColor": {
    "prefix": "headerFontColor",
    "description": "Description: Font color for the process header\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"headerFontColor\": \"\""
  },
  "HeaderFontSize": {
    "prefix": "headerFontSize",
    "description": "Description: Font size for the process header\n      Type: Number\n",
    "body": "\"headerFontSize\": \"\""
  },
  "HeaderIsBold": {
    "prefix": "headerIsBold",
    "description": "Description: Whether process header should appear bold?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"headerIsBold\": \"${1|1,0|}\""
  },
  "HeaderIsItalic": {
    "prefix": "headerIsItalic",
    "description": "Description: Whether process header should appear in italics?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"headerIsItalic\": \"${1|1,0|}\""
  },
  "HeaderIsUnderline": {
    "prefix": "headerIsUnderline",
    "description": "Description: Whether process header should appear as underlined?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"headerIsUnderline\": \"${1|1,0|}\""
  },
  "HeaderVAlign": {
    "prefix": "headerVAlign",
    "description": "Description: Vertical alignment position of the header label.\n      Type: String\n      Range: 'top', 'middle' or 'bottom'",
    "body": "\"headerVAlign\": \"\""
  },
  "Headertext": {
    "prefix": "headertext",
    "description": "Description: Header label for the processes column in data table.\n      Type: String\n",
    "body": "\"headertext\": \"\""
  },
  "PositionInGrid": {
    "prefix": "positionInGrid",
    "description": "Description: Whether the process column appears as the left-most column of data grid or right-most?\n      Type: String\n      Range: 'left' or 'right'",
    "body": "\"positionInGrid\": \"\""
  },
  "Borderalpha": {
    "prefix": "borderalpha",
    "description": "Description: If border is to be shown for task bars, this attribute defines the alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"borderalpha\": \"\""
  },
  "Borderthickness": {
    "prefix": "borderthickness",
    "description": "Description: If border is to be shown for task bars, this attribute defines the thickness.\n      Type: Number\n",
    "body": "\"borderthickness\": \"\""
  },
  "Showborder": {
    "prefix": "showborder",
    "description": "Description: Whether to show border for task bars?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showborder\": \"${1|1,0|}\""
  },
  "Showenddate": {
    "prefix": "showenddate",
    "description": "Description: Whether to show end date for each task?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showenddate\": \"${1|1,0|}\""
  },
  "Showlabels": {
    "prefix": "showlabels",
    "description": "Description: Whether to show the label for each task (if defined)?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showlabels\": \"${1|1,0|}\""
  },
  "Showpercentlabel": {
    "prefix": "showpercentlabel",
    "description": "Description: If percent complete has been defined for each task, whether to show the same as part of label?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showpercentlabel\": \"${1|1,0|}\""
  },
  "Showstartdate": {
    "prefix": "showstartdate",
    "description": "Description: Whether to show start date for each task?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showstartdate\": \"${1|1,0|}\""
  },
  "HoverFillAlpha": {
    "prefix": "hoverFillAlpha",
    "description": "Description: Lets you set the transparency of the hover color for the task bars. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverFillAlpha\": \"\""
  },
  "PercentComplete": {
    "prefix": "percentComplete",
    "description": "Description: Each task can be shown as incomplete task by specifying the percent completed here.\n      Type: Number\n",
    "body": "\"percentComplete\": \"\""
  },
  "ProcessId": {
    "prefix": "processId",
    "description": "Description: You can relate each task to its process using the process ID, which can be specified here.\n      Type: String identifier\n",
    "body": "\"processId\": \"\""
  },
  "ShowAsGroup": {
    "prefix": "showAsGroup",
    "description": "Description: Whether to render the task bar visually as a group?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAsGroup\": \"${1|1,0|}\""
  },
  "ShowEndDate": {
    "prefix": "showEndDate",
    "description": "Description: Whether to show end date label for the task bar?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showEndDate\": \"${1|1,0|}\""
  },
  "ShowStartDate": {
    "prefix": "showStartDate",
    "description": "Description: Whether to show start date for the task bar?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showStartDate\": \"${1|1,0|}\""
  },
  "TopPadding": {
    "prefix": "topPadding",
    "description": "Description: Padding required at the top of the task bar either in pixels or in percent.\n      Type: Number\n      Range: In pixels or in percent",
    "body": "\"topPadding\": \"\""
  },
  "HeaderLink": {
    "prefix": "headerLink",
    "description": "Description: Link for the header.\n      Type: Link in FusionCharts format\n",
    "body": "\"headerLink\": \"\""
  },
  "HeaderText": {
    "prefix": "headerText",
    "description": "Description: Label for the header.\n      Type: String\n",
    "body": "\"headerText\": \"\""
  },
  "HoverThickness": {
    "prefix": "hoverThickness",
    "description": "Description: Lets you set the thickness of the hover effect for the connector lines. This feature is supported by JavaScript Gantt chart only.\n      Type: Number\n",
    "body": "\"hoverThickness\": \"\""
  },
  "IsDashed": {
    "prefix": "isDashed",
    "description": "Description: Whether the connectors should be rendered as dashed lines. \n\n__Default value__: 0 (connectors rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isDashed\": \"${1|1,0|}\""
  },
  "Link": {
    "prefix": "link",
    "description": "Description: Link for the pie.\n      Type: String\n",
    "body": "\"link\": \"\""
  },
  "FromTaskConnectStart": {
    "prefix": "fromTaskConnectStart",
    "description": "Description: Whether to connect left side of the starting task bar?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"fromTaskConnectStart\": \"${1|1,0|}\""
  },
  "FromTaskId": {
    "prefix": "fromTaskId",
    "description": "Description: ID of the task which will act as the starting point for connector. You'll need to define IDs for each task before you can define connectors.\n      Type: String ID\n",
    "body": "\"fromTaskId\": \"\""
  },
  "ToTaskConnectStart": {
    "prefix": "toTaskConnectStart",
    "description": "Description: Whether to connect left side of the ending task bar?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"toTaskConnectStart\": \"${1|1,0|}\""
  },
  "ToTaskId": {
    "prefix": "toTaskId",
    "description": "Description: ID of the task which will act as the ending point for connector.\n      Type: String ID\n",
    "body": "\"toTaskId\": \"\""
  },
  "Date": {
    "prefix": "date",
    "description": "Description: Date for the milestone in the specified date format.\n      Type: Date\n",
    "body": "\"date\": \"\""
  },
  "StartAngle": {
    "prefix": "startAngle",
    "description": "Description: Starting angle for the star/polygon.\n      Type: Number\n      Range: 0-360",
    "body": "\"startAngle\": \"\""
  },
  "TaskId": {
    "prefix": "taskId",
    "description": "Description: ID of the task to which this milestone relates to. You must define task IDs before you can use milestones.\n      Type: String ID\n",
    "body": "\"taskId\": \"\""
  },
  "HoverBorderColor": {
    "prefix": "hoverBorderColor",
    "description": "Description: Lets you set the color of the border of milestone when hovered.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverBorderColor\": \"\""
  },
  "HoverBorderAlpha": {
    "prefix": "hoverBorderAlpha",
    "description": "Description: Lets you set the transparency of the border of milestone when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverBorderAlpha\": \"\""
  },
  "SetAdaptiveYMin": {
    "prefix": "setAdaptiveYMin",
    "description": "Description: This attribute lets you set whether the y-axis lower limit will be 0 (in case of all positive values on chart) or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"setAdaptiveYMin\": \"${1|1,0|}\""
  },
  "TicksBelowGraph": {
    "prefix": "ticksBelowGraph",
    "description": "Description: Whether tick marks & values will appear under the graph or above it?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"ticksBelowGraph\": \"${1|1,0|}\""
  },
  "PlaceTicksInside": {
    "prefix": "placeTicksInside",
    "description": "Description: Whether to place ticks inside the gauge or outside?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"placeTicksInside\": \"${1|1,0|}\""
  },
  "PlotAsDot": {
    "prefix": "plotAsDot",
    "description": "Description: Whether to plot the value as bar or as dot?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotAsDot\": \"${1|1,0|}\""
  },
  "PlotFillPercent": {
    "prefix": "plotFillPercent",
    "description": "Description: Width percent of the color range that the plot fill bar should occupy.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotFillPercent\": \"\""
  },
  "Target": {
    "prefix": "target",
    "description": "Description: Sets a vertical target line for the bullet.\n      Type: Number\n      Range: Between minValue & maxValue",
    "body": "\"target\": \"\""
  },
  "TargetColor": {
    "prefix": "targetColor",
    "description": "Description: Color for the target line.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"targetColor\": \"\""
  },
  "TargetThickness": {
    "prefix": "targetThickness",
    "description": "Description: Thickness for the target line.\n      Type: Number\n      Range: In pixels",
    "body": "\"targetThickness\": \"\""
  },
  "TargetFillPercent": {
    "prefix": "targetFillPercent",
    "description": "Description: Width percent of the color range that the target fill bar should occupy.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"targetFillPercent\": \"\""
  },
  "TargetCapStyle": {
    "prefix": "targetCapStyle",
    "description": "Description: This attribute specifies the shape to be used for the ends of the target line. \n\nDefault value : round\n      Type: String\n      Range: 'round','square','butt','inherit'",
    "body": "\"targetCapStyle\": \"\""
  },
  "ColorRangeFillMix": {
    "prefix": "colorRangeFillMix",
    "description": "Description: This attribute specifies the gradient fill formula for the color range. Example: `{light-10},{light-20},{light-60}` \n\n __Note:__ This attribute is not supported in IE8\n      Type: String\n",
    "body": "\"colorRangeFillMix\": \"\""
  },
  "ColorRangeFillRatio": {
    "prefix": "colorRangeFillRatio",
    "description": "Description: This attribute sets the ratio of each color separated by comma using `colorRangeFillMix` attribute.\n      Type: Numbers separated by comma\n",
    "body": "\"colorRangeFillRatio\": \"\""
  },
  "ShowColorRangeBorder": {
    "prefix": "showColorRangeBorder",
    "description": "Description: Whether to show border for color range?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showColorRangeBorder\": \"${1|1,0|}\""
  },
  "ColorRangeBorderColor": {
    "prefix": "colorRangeBorderColor",
    "description": "Description: Border color for the color range.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"colorRangeBorderColor\": \"\""
  },
  "ColorRangeBorderThickness": {
    "prefix": "colorRangeBorderThickness",
    "description": "Description: Border thickness for the color range.\n      Type: Number\n      Range: In pixels",
    "body": "\"colorRangeBorderThickness\": \"\""
  },
  "ColorRangeBorderAlpha": {
    "prefix": "colorRangeBorderAlpha",
    "description": "Description: Border alpha for the color range.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"colorRangeBorderAlpha\": \"\""
  },
  "ShowHoverAnimation": {
    "prefix": "showHoverAnimation",
    "description": "Description: This attribute animates the plot when hovered.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHoverAnimation\": \"${1|1,0|}\""
  },
  "TargetHoverColor": {
    "prefix": "targetHoverColor",
    "description": "Description: Sets the color for the target line when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"targetHoverColor\": \"\""
  },
  "TargetHoverAlpha": {
    "prefix": "targetHoverAlpha",
    "description": "Description: This attribute sets the transparency for the target line when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"targetHoverAlpha\": \"\""
  },
  "TargetHoverThickness": {
    "prefix": "targetHoverThickness",
    "description": "Description: This attribute sets the thickness for the target line when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"targetHoverThickness\": \"\""
  },
  "ShowPlotBorderOnHover": {
    "prefix": "showPlotBorderOnHover",
    "description": "Description: Sets whether to show the border for the bar when hovered.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPlotBorderOnHover\": \"${1|1,0|}\""
  },
  "PlotBorderHoverColor": {
    "prefix": "plotBorderHoverColor",
    "description": "Description: This attribute sets the border color of the plot when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"plotBorderHoverColor\": \"\""
  },
  "PlotBorderHoverAlpha": {
    "prefix": "plotBorderHoverAlpha",
    "description": "Description: This attribute sets the transparency of plot border when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotBorderHoverAlpha\": \"\""
  },
  "PlotBorderHoverThickness": {
    "prefix": "plotBorderHoverThickness",
    "description": "Description: This attribute sets the thickness of plot border when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderHoverThickness\": \"\""
  },
  "TrType": {
    "prefix": "trType",
    "description": "Description: Specifies the type of data provided in the top-right label. This value is displayed in the tool tip.\n      Type: String\n      Range:  ",
    "body": "\"trType\": \"\""
  },
  "TlType": {
    "prefix": "tlType",
    "description": "Description: Specifies the type of data provided in the top-left label. This value is displayed in the tool tip.\n      Type: String\n      Range:  ",
    "body": "\"tlType\": \"\""
  },
  "BrType": {
    "prefix": "brType",
    "description": "Description: Specifies the type of data provided in the bottom-right label. This value is displayed in the tool tip.\n      Type: String\n      Range:  ",
    "body": "\"brType\": \"\""
  },
  "BlType": {
    "prefix": "blType",
    "description": "Description: Specifies the type of data provided in the bottom-left label. This value is displayed in the tool tip.\n      Type: String\n      Range:  ",
    "body": "\"blType\": \"\""
  },
  "InteractiveAnimationDuration": {
    "prefix": "interactiveAnimationDuration",
    "description": "Description: Sets the duration of the animation that takes place when the legends are used to show or hide dataplots.\n      Type: Number\n",
    "body": "\"interactiveAnimationDuration\": \"\""
  },
  "MapByCategory": {
    "prefix": "mapByCategory",
    "description": "Description: Allows you to render a category based heat map chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"mapByCategory\": \"${1|1,0|}\""
  },
  "ShowXaxisLabels": {
    "prefix": "showXaxisLabels",
    "description": "Description: This attribute is used to show or hide the x axis or the column labels.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showXaxisLabels\": \"${1|1,0|}\""
  },
  "PlaceXAxisLabelsOnTop": {
    "prefix": "placeXAxisLabelsOnTop",
    "description": "Description: This attribute when set to '1', allows you to display the x-axis labels on top of the chart canvas.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"placeXAxisLabelsOnTop\": \"${1|1,0|}\""
  },
  "XAxisLineColor": {
    "prefix": "xAxisLineColor",
    "description": "Description: Sets color of the x-axis of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisLineColor\": \"\""
  },
  "RotatexAxisLabels": {
    "prefix": "rotatexAxisLabels",
    "description": "Description: This attribute lets you set whether the data labels would show up as rotated labels on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotatexAxisLabels\": \"${1|1,0|}\""
  },
  "ShowYaxisLabels": {
    "prefix": "showYaxisLabels",
    "description": "Description: This attribute is used to show or hide y axis or the row labels.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYaxisLabels\": \"${1|1,0|}\""
  },
  "PlotBorderDashed": {
    "prefix": "plotBorderDashed",
    "description": "Description: Whether the border around the data plots should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotBorderDashed\": \"${1|1,0|}\""
  },
  "PlotBorderDashLen": {
    "prefix": "plotBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderDashLen\": \"\""
  },
  "PlotBorderDashGap": {
    "prefix": "plotBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderDashGap\": \"\""
  },
  "PlotFillAngle": {
    "prefix": "plotFillAngle",
    "description": "Description: If you have opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill angle for gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"plotFillAngle\": \"\""
  },
  "PlotFillRatio": {
    "prefix": "plotFillRatio",
    "description": "Description: If you have opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the ratio for gradient.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotFillRatio\": \"\""
  },
  "LabelXPadding": {
    "prefix": "labelXPadding",
    "description": "Description: This attribute sets the vertical space between the x-axis labels and canvas bottom edge.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelXPadding\": \"\""
  },
  "LabelYPadding": {
    "prefix": "labelYPadding",
    "description": "Description: It sets the horizontal space between the y-axis labels and the canvas right edge.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelYPadding\": \"\""
  },
  "MaxLabelWidthPercent": {
    "prefix": "maxLabelWidthPercent",
    "description": "Description: Restricts the maximum space allotted for the y-axis data labels with respect to the chart's width. If a data label is longer than the specified percentage width then it will either be wrapped or get truncated, subject to the availability of vertical space. Unnecessary space is not reserved for the labels. If all the labels are shorter than the specified maximum width, this value is not applied.\n      Type: Numeric\n      Range: In Pixels",
    "body": "\"maxLabelWidthPercent\": \"\""
  },
  "MinLabelWidthPercent": {
    "prefix": "minLabelWidthPercent",
    "description": "Description: Restricts the minimum length of data labels in terms of percentage of the chart's width that the data labels can occupy. The space thus calculated stays reserved even if the label width is less than the minimum width.\n      Type: Number\n      Range: 1-100",
    "body": "\"minLabelWidthPercent\": \"\""
  },
  "TlFont": {
    "prefix": "tlFont",
    "description": "Description: Allows user to set Top Left font for the tooltext\n      Type: String\n      Range: Font Name",
    "body": "\"tlFont\": \"\""
  },
  "TlFontSize": {
    "prefix": "tlFontSize",
    "description": "Description: Allows user to set Top Left font size for the tooltext\n      Type: Number\n      Range: 6 - 72",
    "body": "\"tlFontSize\": \"\""
  },
  "TlFontColor": {
    "prefix": "tlFontColor",
    "description": "Description: Allows user to set Top Left font color for the tooltext\n      Type: Color\n      Range: Hex color code",
    "body": "\"tlFontColor\": \"\""
  },
  "TrFont": {
    "prefix": "trFont",
    "description": "Description: Allows user to set Top Right font for the tooltext\n      Type: String\n      Range: Font Name",
    "body": "\"trFont\": \"\""
  },
  "TrFontSize": {
    "prefix": "trFontSize",
    "description": "Description: Allows user to set Top Right font size for the tooltext\n      Type: Number\n      Range: 6 - 72",
    "body": "\"trFontSize\": \"\""
  },
  "TrFontColor": {
    "prefix": "trFontColor",
    "description": "Description: Allows user to set Top Right font color for the tooltext\n      Type: Color\n      Range: Hex color code",
    "body": "\"trFontColor\": \"\""
  },
  "BlFont": {
    "prefix": "blFont",
    "description": "Description: Allows user to set Bottom Left font for the tooltext\n      Type: String\n      Range: Font Name",
    "body": "\"blFont\": \"\""
  },
  "BlFontSize": {
    "prefix": "blFontSize",
    "description": "Description: Allows user to set Bottom Left font size for the tooltext\n      Type: Number\n      Range: 6 - 72",
    "body": "\"blFontSize\": \"\""
  },
  "BlFontColor": {
    "prefix": "blFontColor",
    "description": "Description: Allows user to set Bottom Left font color for the tooltext\n      Type: Color\n      Range: Hex color code",
    "body": "\"blFontColor\": \"\""
  },
  "BrFont": {
    "prefix": "brFont",
    "description": "Description: Allows user to set Bottom Right font for the tooltext\n      Type: String\n      Range: Font Name",
    "body": "\"brFont\": \"\""
  },
  "BrFontSize": {
    "prefix": "brFontSize",
    "description": "Description: Allows user to set Bottom Right font size for the tooltext\n      Type: Number\n      Range: 6 - 72",
    "body": "\"brFontSize\": \"\""
  },
  "BrFontColor": {
    "prefix": "brFontColor",
    "description": "Description: Allows user to set Bottom Right font color for the tooltext\n      Type: Color\n      Range: Hex color code",
    "body": "\"brFontColor\": \"\""
  },
  "LegendPointerColor": {
    "prefix": "legendPointerColor",
    "description": "Description: Sets the legend pointer color for a gradient legend.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendPointerColor\": \"\""
  },
  "LegendPointerAlpha": {
    "prefix": "legendPointerAlpha",
    "description": "Description: Sets the legend pointer transparency for a gradient legend.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendPointerAlpha\": \"\""
  },
  "LegendPointerBorderAlpha": {
    "prefix": "legendPointerBorderAlpha",
    "description": "Description: Sets the transparency for the legend pointer border for a gradient legend.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendPointerBorderAlpha\": \"\""
  },
  "Legendpointerbordercolor": {
    "prefix": "legendpointerbordercolor",
    "description": "Description: Sets the color for the border of the legend pointer.\n      Type: Color\n      Range: Hex color code",
    "body": "\"legendpointerbordercolor\": \"\""
  },
  "AutoOrderLegendIcon": {
    "prefix": "autoOrderLegendIcon",
    "description": "Description: Allows you to show the legend icon in ascending order in icon legend.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"autoOrderLegendIcon\": \"${1|1,0|}\""
  },
  "RowId": {
    "prefix": "rowId",
    "description": "Description: Specifies the position of the row where the data it is to be placed in the chart. If the `rows` object is used then it is mandatory to use the same id which is defined in the `row` object by the `id` attribute.\n      Type: String\n",
    "body": "\"rowId\": \"\""
  },
  "ColumnId": {
    "prefix": "columnId",
    "description": "Description: Specifies the position of the column where the data it is to be placed in the chart. If the `columns` object is used then it is mandatory to use the same id which is defined in the `column` object by the `id` attribute.\n      Type: String\n",
    "body": "\"columnId\": \"\""
  },
  "ColorRangeLabel": {
    "prefix": "colorRangeLabel",
    "description": "Description: This attribute is used to provide the color-range label which is defined in the `color` object of the `colorRange` object. It is used only in category based heat map chart.\n      Type: String\n",
    "body": "\"colorRangeLabel\": \"\""
  },
  "TlLabel": {
    "prefix": "tlLabel",
    "description": "Description: This attribute allows you to display a label on the top-left corner of a data plot.\n      Type: Number/String\n",
    "body": "\"tlLabel\": \"\""
  },
  "TrLabel": {
    "prefix": "trLabel",
    "description": "Description: This attribute allows you to display a label on the top-right corner of a data plot.\n      Type: Number/String\n",
    "body": "\"trLabel\": \"\""
  },
  "BlLabel": {
    "prefix": "blLabel",
    "description": "Description: This attribute allows you to display a label on the bottom-left corner of a data plot.\n      Type: Number/String\n",
    "body": "\"blLabel\": \"\""
  },
  "BrLabel": {
    "prefix": "brLabel",
    "description": "Description: This attribute allows you to display a label on the bottom-left corner of a data plot.\n      Type: Number/String\n",
    "body": "\"brLabel\": \"\""
  },
  "TicksBelowGauge": {
    "prefix": "ticksBelowGauge",
    "description": "Description: Whether to show ticks below the gauge scale or above?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"ticksBelowGauge\": \"${1|1,0|}\""
  },
  "GaugeFillColor": {
    "prefix": "gaugeFillColor",
    "description": "Description: Background fill color for gauge\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"gaugeFillColor\": \"\""
  },
  "LedSize": {
    "prefix": "ledSize",
    "description": "Description: This sets the size of each LED bar.\n      Type: Number\n      Range: In pixels",
    "body": "\"ledSize\": \"\""
  },
  "LedGap": {
    "prefix": "ledGap",
    "description": "Description: This sets the distance or the gap between two LED bars.\n      Type: Number\n      Range: In pixels",
    "body": "\"ledGap\": \"\""
  },
  "UseSameFillColor": {
    "prefix": "useSameFillColor",
    "description": "Description: If you've defined color range for the chart, the LED bars take their fill color based on color range. But, if you want all the LED bars to use the color of the last color range (which matches current value), set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useSameFillColor\": \"${1|1,0|}\""
  },
  "UseSameFillBgColor": {
    "prefix": "useSameFillBgColor",
    "description": "Description: If you want all the background (non-activated) LED blocks to use the color of the last color range (which matches current value), set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useSameFillBgColor\": \"${1|1,0|}\""
  },
  "ReversalValue": {
    "prefix": "reversalValue",
    "description": "Description: The numerical (absolute) value which determines whether to make a horizontal shift to plot the next point. For example, if the Kagi line is running up (rally or decline in trend does not matter) and the next point to plot is having a value lower than the current point, then we have to run down. If the deviation between the 2 points is greater than the `reversalValue`, only then we make a horizontal shift to right and move down. Else, the next point is neglected in plotting and we do not move horizontally.\n      Type: Number\n      Range:  ",
    "body": "\"reversalValue\": \"\""
  },
  "ReversalPercentage": {
    "prefix": "reversalPercentage",
    "description": "Description: Same as `reversalValue` attribute, but in percentage (instead of absolute value).\n      Type: Number\n      Range: In Percent",
    "body": "\"reversalPercentage\": \"\""
  },
  "MaxHShiftPercent": {
    "prefix": "maxHShiftPercent",
    "description": "Description: Maximum horizontal shift possible. Percentage value with respect to the canvas width.\n      Type: Number\n      Range: Percent",
    "body": "\"maxHShiftPercent\": \"\""
  },
  "RallyColor": {
    "prefix": "rallyColor",
    "description": "Description: Color of line denoting rally trend.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"rallyColor\": \"\""
  },
  "RallyAlpha": {
    "prefix": "rallyAlpha",
    "description": "Description: Transparency of line denoting rally trend.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"rallyAlpha\": \"\""
  },
  "RallyThickness": {
    "prefix": "rallyThickness",
    "description": "Description: Thickness of line denoting rally trend.\n      Type: Number\n      Range: In Pixels",
    "body": "\"rallyThickness\": \"\""
  },
  "RallyDashed": {
    "prefix": "rallyDashed",
    "description": "Description: Whether the line denoting rally trend should be rendered as dashed lines. \n\n__Default value__: 0 (line rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rallyDashed\": \"${1|1,0|}\""
  },
  "RallyDashGap": {
    "prefix": "rallyDashGap",
    "description": "Description: Sets the length of each dash when line denoting rally trend are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"rallyDashGap\": \"\""
  },
  "RallyDashLen": {
    "prefix": "rallyDashLen",
    "description": "Description: Sets the gap between consecutive dashes when line denoting rally trend are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"rallyDashLen\": \"\""
  },
  "DeclineColor": {
    "prefix": "declineColor",
    "description": "Description: Color of line denoting decline trend.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"declineColor\": \"\""
  },
  "DeclineAlpha": {
    "prefix": "declineAlpha",
    "description": "Description: Transparency of line denoting decline trend.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"declineAlpha\": \"\""
  },
  "DeclineThickness": {
    "prefix": "declineThickness",
    "description": "Description: Thickness of line denoting decline trend.\n      Type: Number\n      Range: In Pixels",
    "body": "\"declineThickness\": \"\""
  },
  "DeclineDashed": {
    "prefix": "declineDashed",
    "description": "Description: Whether the line denoting decline trend should be rendered as dashed lines. \n\n__Default value__: 0 (line rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"declineDashed\": \"${1|1,0|}\""
  },
  "DeclineDashGap": {
    "prefix": "declineDashGap",
    "description": "Description: Sets the length of each dash when line denoting decline trend are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"declineDashGap\": \"\""
  },
  "DeclineDashLen": {
    "prefix": "declineDashLen",
    "description": "Description: Sets the gap between consecutive dashes when line denoting decline trend are rendered as dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"declineDashLen\": \"\""
  },
  "LineDashLen": {
    "prefix": "lineDashLen",
    "description": "Description: Sets the length of each dash when lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"lineDashLen\": \"\""
  },
  "LineDashGap": {
    "prefix": "lineDashGap",
    "description": "Description: Sets the gap between consecutive dashes when lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"lineDashGap\": \"\""
  },
  "ValueAbovePointer": {
    "prefix": "valueAbovePointer",
    "description": "Description: Whether to show pointer value above/below the pointer?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueAbovePointer\": \"${1|1,0|}\""
  },
  "PointerOnTop": {
    "prefix": "pointerOnTop",
    "description": "Description: Whether to show the pointer above or below the chart?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"pointerOnTop\": \"${1|1,0|}\""
  },
  "ShowGaugeLabels": {
    "prefix": "showGaugeLabels",
    "description": "Description: Whether the gauge (color range scale) labels will be visible or not?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showGaugeLabels\": \"${1|1,0|}\""
  },
  "GaugeRoundRadius": {
    "prefix": "gaugeRoundRadius",
    "description": "Description: Whether to use rounded corners for the gauge? If yes, specify the round radius (in pixels) here.This feature in not supported in JavaScript Horizontal Liner gauge.\n      Type: Number\n      Range: In pixels",
    "body": "\"gaugeRoundRadius\": \"\""
  },
  "PointerRadius": {
    "prefix": "pointerRadius",
    "description": "Description: Radius of the pointer.\n      Type: Number\n      Range: In pixels",
    "body": "\"pointerRadius\": \"\""
  },
  "PointerBgColor": {
    "prefix": "pointerBgColor",
    "description": "Description: Fill color for the pointer.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pointerBgColor\": \"\""
  },
  "PointerBgAlpha": {
    "prefix": "pointerBgAlpha",
    "description": "Description: Fill alpha for the pointer.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pointerBgAlpha\": \"\""
  },
  "PointerSides": {
    "prefix": "pointerSides",
    "description": "Description: Number of sides for the pointer.\n      Type: Number\n      Range: 3-15",
    "body": "\"pointerSides\": \"\""
  },
  "PointerBorderThickness": {
    "prefix": "pointerBorderThickness",
    "description": "Description: Border thickness for pointer.\n      Type: Number\n      Range: In pixels",
    "body": "\"pointerBorderThickness\": \"\""
  },
  "PointerBorderColor": {
    "prefix": "pointerBorderColor",
    "description": "Description: Border color for pointer.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"pointerBorderColor\": \"\""
  },
  "PointerBorderAlpha": {
    "prefix": "pointerBorderAlpha",
    "description": "Description: Border alpha for pointer.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pointerBorderAlpha\": \"\""
  },
  "ShowPointerShadow": {
    "prefix": "showPointerShadow",
    "description": "Description: Whether to apply shadow of pointer. If this attribute is not specifically mentioned, the gauge inherits the default value from `showShadow` attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPointerShadow\": \"${1|1,0|}\""
  },
  "PointerBgHoverColor": {
    "prefix": "pointerBgHoverColor",
    "description": "Description: This attribute sets the color of the pointer when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"pointerBgHoverColor\": \"\""
  },
  "PointerBgHoverAlpha": {
    "prefix": "pointerBgHoverAlpha",
    "description": "Description: This attribute sets the transparency of the pointer when hovered.\n      Type: Number\n      Range: 1 - 100",
    "body": "\"pointerBgHoverAlpha\": \"\""
  },
  "ShowBorderOnHover": {
    "prefix": "showBorderOnHover",
    "description": "Description: Sets whether to show the border for the pointer when hovered.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showBorderOnHover\": \"${1|1,0|}\""
  },
  "PointerBorderHoverThickness": {
    "prefix": "pointerBorderHoverThickness",
    "description": "Description: Sets the thickness of the border for pointer when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"pointerBorderHoverThickness\": \"\""
  },
  "PointerBorderHoverColor": {
    "prefix": "pointerBorderHoverColor",
    "description": "Description: Sets the border color for pointers when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"pointerBorderHoverColor\": \"\""
  },
  "PointerBorderHoverAlpha": {
    "prefix": "pointerBorderHoverAlpha",
    "description": "Description: Sets the transparency of border for pointers when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pointerBorderHoverAlpha\": \"\""
  },
  "PointerHoverRadius": {
    "prefix": "pointerHoverRadius",
    "description": "Description: This attribute sets the radius of the pointer when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"pointerHoverRadius\": \"\""
  },
  "Sides": {
    "prefix": "sides",
    "description": "Description: Number of sides this pointer will have.\n      Type: Number\n      Range: 3-15",
    "body": "\"sides\": \"\""
  },
  "Base": {
    "prefix": "base",
    "description": "Description: Using this attribute, you can set the base of the logarithmic chart. The value has to be a positive numeric value apart from 1.\n      Type: Number\n      Range: Positive Numeric Value apart from 1",
    "body": "\"base\": \"\""
  },
  "InvertYAxis": {
    "prefix": "invertYAxis",
    "description": "Description: Whether to use inverted y-axis so that y-axis upper limit appears at canvas bottom instead of top.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"invertYAxis\": \"${1|1,0|}\""
  },
  "ShowMinorDivLineValues": {
    "prefix": "showMinorDivLineValues",
    "description": "Description: Whether to show minor divisional lines. Minor divisional lines are incremental scale lines between any two major division line.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showMinorDivLineValues\": \"${1|1,0|}\""
  },
  "NumMinorDivLines": {
    "prefix": "numMinorDivLines",
    "description": "Description: Number of minor division lines to be plotted between any two major divisional lines.\n      Type: Number\n      Range: Value greater than 0.",
    "body": "\"numMinorDivLines\": \"\""
  },
  "MinorDivLineColor": {
    "prefix": "minorDivLineColor",
    "description": "Description: Color of minor divisional lines.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"minorDivLineColor\": \"\""
  },
  "MinorDivLineThickness": {
    "prefix": "minorDivLineThickness",
    "description": "Description: Thickness of minor divisional lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"minorDivLineThickness\": \"\""
  },
  "MinorDivLineAlpha": {
    "prefix": "minorDivLineAlpha",
    "description": "Description: Alpha of minor divisional lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"minorDivLineAlpha\": \"\""
  },
  "AllowSelection": {
    "prefix": "allowSelection",
    "description": "Description: Whether to show the checkboxes for each axis, thereby allowing the user to show or hide data-sets belonging to that particular axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowSelection\": \"${1|1,0|}\""
  },
  "AllowAxisShift": {
    "prefix": "allowAxisShift",
    "description": "Description: Whether to allow shifting of axis from one end to other, upon clicking the same.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowAxisShift\": \"${1|1,0|}\""
  },
  "AxisColor": {
    "prefix": "axisColor",
    "description": "Description: Sets color of all the y-axis in the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"axisColor\": \"\""
  },
  "CheckBoxColor": {
    "prefix": "checkBoxColor",
    "description": "Description: Color for the checkbox that shows up for each axis.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"checkBoxColor\": \"\""
  },
  "AxisLineThickness": {
    "prefix": "axisLineThickness",
    "description": "Description: Thickness of the line using which axis will be plotted.\n      Type: Number\n      Range: In pixels",
    "body": "\"axisLineThickness\": \"\""
  },
  "AxisOnLeft": {
    "prefix": "axisOnLeft",
    "description": "Description: Whether to show the axis on left side of canvas or right side of canvas.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"axisOnLeft\": \"${1|1,0|}\""
  },
  "ShowAxis": {
    "prefix": "showAxis",
    "description": "Description: Whether this axis is a visible axis or imaginary axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAxis\": \"${1|1,0|}\""
  },
  "TickWidth": {
    "prefix": "tickWidth",
    "description": "Description: Width of the tick marks that extend from axis.\n      Type: Number\n      Range: In pixels",
    "body": "\"tickWidth\": \"\""
  },
  "Title": {
    "prefix": "title",
    "description": "Description: Title of the axis.\n      Type: String\n      Range:  ",
    "body": "\"title\": \"\""
  },
  "TransposeAxis": {
    "prefix": "transposeAxis",
    "description": "Description: If you hide a dataset using legend icon, this attribute (when set to `1`) will compute the axes limit with respect to maximum and minimum value of the visible dataset(s). \n\nDefault value: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"transposeAxis\": \"${1|1,0|}\""
  },
  "CenterXaxisName": {
    "prefix": "centerXaxisName",
    "description": "Description: This attribute when set to '1', allows you to align the x-axis name with respect to the height of the chart. When set to '0', the x-axis name is aligned with respect to the height of the canvas.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"centerXaxisName\": \"${1|1,0|}\""
  },
  "RotateXAxisName": {
    "prefix": "rotateXAxisName",
    "description": "Description: If you do not wish to rotate x-axis name, set this as 0. It specifically comes to use when you've special characters (UTF8) in your x-axis name that do not show up in rotated mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateXAxisName\": \"${1|1,0|}\""
  },
  "XAxisNameWidth": {
    "prefix": "xAxisNameWidth",
    "description": "Description: If you opt to not rotate x-axis name, you can choose a maximum width that will be applied to x-axis name.\n      Type: Number\n      Range: (In Pixels)",
    "body": "\"xAxisNameWidth\": \"\""
  },
  "OverlapBars": {
    "prefix": "overlapBars",
    "description": "Description: Whether to overlap bars over each other to give a richer 3D look. If there are too many bars on the chart, it will automatically overlap.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"overlapBars\": \"${1|1,0|}\""
  },
  "PlotPaddingPercent": {
    "prefix": "plotPaddingPercent",
    "description": "Description: This attribute adds white space between columns/bars representing a single category. Applicable only when there are more than one datasets.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotPaddingPercent\": \"\""
  },
  "Visible": {
    "prefix": "visible",
    "description": "Description: Sets whether a dataset will be visible on the chart, when the chart is first loaded. This attribute overrides the `initiallyHidden` attribute. \n\n __Default Value__ : 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"visible\": \"${1|1,0|}\""
  },
  "SyncAxisLimits": {
    "prefix": "syncAxisLimits",
    "description": "Description: Setting this attribute to 1 lets you synchronize the limits of both the primary and secondary axes.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"syncAxisLimits\": \"${1|1,0|}\""
  },
  "DrawVerticalJoins": {
    "prefix": "drawVerticalJoins",
    "description": "Description: Allows you to set whether to join the parallel horizontal planes by drawing vertical lines on the canvas. By default, this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawVerticalJoins\": \"${1|1,0|}\""
  },
  "UseForwardSteps": {
    "prefix": "useForwardSteps",
    "description": "Description: Whether to display the chart in forward progressive mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useForwardSteps\": \"${1|1,0|}\""
  },
  "LegendNumColumn": {
    "prefix": "legendNumColumn",
    "description": "Description: If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.\n      Type: Number\n      Range: Positive Integer",
    "body": "\"legendNumColumn\": \"\""
  },
  "ShowSum": {
    "prefix": "showSum",
    "description": "Description: If you want to show sum of all the columns in a given stacked column, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showSum\": \"${1|1,0|}\""
  },
  "UsePercentDistribution": {
    "prefix": "usePercentDistribution",
    "description": "Description: If you do not wish to show data values as percentage figures, set this attribute to 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"usePercentDistribution\": \"${1|1,0|}\""
  },
  "ShowXAxisPercentValues": {
    "prefix": "showXAxisPercentValues",
    "description": "Description: This attribute specifies whether percentage values should be should along the x-axis or not. \n\n Default value: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showXAxisPercentValues\": \"${1|1,0|}\""
  },
  "WidthPercent": {
    "prefix": "widthPercent",
    "description": "Description: FusionCharts XT automatically calculates the horizontal width of the columns based on the data provided by you. But, using this attribute you can specify different width values to each segment. The values in each category must be specified in a way that sum of all the figures equals to 100 percent in order to render your chart successfully.\n      Type: Number\n      Range: 1-100",
    "body": "\"widthPercent\": \"\""
  },
  "Ratio": {
    "prefix": "ratio",
    "description": "Description: If you've opted to show columns as gradients, this attribute lets you control the ratio of each color. Please see Gradients under Advanced Charting Section to get more information.\n      Type: String\n      Range: Comma separated list of ratios",
    "body": "\"ratio\": \"\""
  },
  "PaletteColors": {
    "prefix": "paletteColors",
    "description": "Description: While the `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of data items (that is, column, line, pie etc.). Using `paletteColors` attribute, you can specify your custom list of hex colors for the data items. The list of colors have to be separated by comma. For example, `&quot;paletteColors&quot;: &quot;#FF0000, #0372AB, #FF5904...&quot;`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart JSON.\n      Type: String\n      Range: List of hex color codes separated by comma",
    "body": "\"paletteColors\": \"\""
  },
  "UnescapeLinks": {
    "prefix": "unescapeLinks",
    "description": "Description: Internally the chart decodes a Url that you set as link. Before invoking the link it again encodes the Url. If you are passing multilingual characters via a Url or do not want this decode-encode mechanism to be handled by chart you can set,`unescapeLinks='0'`.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"unescapeLinks\": \"${1|1,0|}\""
  },
  "ShowLabels": {
    "prefix": "showLabels",
    "description": "Description: Allows you to show or hide the labels on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabels\": \"${1|1,0|}\""
  },
  "ShowValues": {
    "prefix": "showValues",
    "description": "Description: Allows you to show or hide the values on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showValues\": \"${1|1,0|}\""
  },
  "ShowValuesInTooltip": {
    "prefix": "showValuesInTooltip",
    "description": "Description: Allows you to show the values of the chart in the tooltip.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showValuesInTooltip\": \"${1|1,0|}\""
  },
  "ShowPercentValues": {
    "prefix": "showPercentValues",
    "description": "Description: Allows you to show the values as percentage on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPercentValues\": \"${1|1,0|}\""
  },
  "ShowPercentInTooltip": {
    "prefix": "showPercentInTooltip",
    "description": "Description: Allows you to show the percentage values of the chart in tooltip.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPercentInTooltip\": \"${1|1,0|}\""
  },
  "ShowPlotBorder": {
    "prefix": "showPlotBorder",
    "description": "Description: Whether the pie border would show up.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPlotBorder\": \"${1|1,0|}\""
  },
  "PlotBorderAlpha": {
    "prefix": "plotBorderAlpha",
    "description": "Description: Alpha for pie border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotBorderAlpha\": \"\""
  },
  "PlotFillAlpha": {
    "prefix": "plotFillAlpha",
    "description": "Description: This attribute lets you set the fill alpha for plot.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotFillAlpha\": \"\""
  },
  "ShadowColor": {
    "prefix": "shadowColor",
    "description": "Description: Lets you set a color of the shadow for pie.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"shadowColor\": \"\""
  },
  "ShadowAlpha": {
    "prefix": "shadowAlpha",
    "description": "Description: Lets you set alpha of the shadow for pie.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"shadowAlpha\": \"\""
  },
  "PlotFillColor": {
    "prefix": "plotFillColor",
    "description": "Description: Fill color for all the pies.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotFillColor\": \"\""
  },
  "Pieborderthickness": {
    "prefix": "pieborderthickness",
    "description": "Description: Fill color for all the pies.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pieborderthickness\": \"\""
  },
  "Piefillalpha": {
    "prefix": "piefillalpha",
    "description": "Description: Fill color for all the pies.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"piefillalpha\": \"\""
  },
  "PieRadius": {
    "prefix": "pieRadius",
    "description": "Description: This attribute lets you explicitly set the outer radius of the chart. The chart automatically calculates the best fit pie radius for the chart. This attribute is useful if you want to enforce one of your own values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pieRadius\": \"\""
  },
  "InnerRadius": {
    "prefix": "innerRadius",
    "description": "Description: This attribute lets you explicitly set the inner radius of the chart. This attribute is useful if you want to enforce one of your own values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"innerRadius\": \"\""
  },
  "PieBorderColor": {
    "prefix": "pieBorderColor",
    "description": "Description: Set the border color of the pie. By default, it is set to 'FFFFFF'.\n      Type: Hex code\n      Range:  ",
    "body": "\"pieBorderColor\": \"\""
  },
  "TotalAngle": {
    "prefix": "totalAngle",
    "description": "Description: This attribute sets the total angle of the arcs.  \n\nDefault value: 360\n      Type: Number\n      Range: 0 - 360",
    "body": "\"totalAngle\": \"\""
  },
  "CenterAngle": {
    "prefix": "centerAngle",
    "description": "Description: If an imaginary line bisect the pie chart, the angle that line makes with the base might be defined as the center angle for it. \n\n When you set `totalAngle` less than 360, you can set different positions for the plot using `centerAngle`\n      Type: Number\n      Range: 0 - 360",
    "body": "\"centerAngle\": \"\""
  },
  "OriginX": {
    "prefix": "originX",
    "description": "Description: This attribute sets the x-coordinate for the center of the plot.\n      Type: Number\n      Range: In pixels",
    "body": "\"originX\": \"\""
  },
  "OriginY": {
    "prefix": "originY",
    "description": "Description: This attribute sets the y-coordinate for the center of the plot.\n      Type: Number\n      Range: In pixels",
    "body": "\"originY\": \"\""
  },
  "UseHoverColor": {
    "prefix": "useHoverColor",
    "description": "Description: Whether to use the hover fill color for the pies.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useHoverColor\": \"${1|1,0|}\""
  },
  "HoverFillColor": {
    "prefix": "hoverFillColor",
    "description": "Description: The color which should be used as fill during hover.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverFillColor\": \"\""
  },
  "HighlightParentPieSlices": {
    "prefix": "highlightParentPieSlices",
    "description": "Description: This attribute sets the direction of highlighting plots when hovered. The default value of this attribute is `1`, by which the plots are highlighted from the current node to its parent node. When this attribute is set to `0`, all the leaf node will be highlighted from the current hovered node.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"highlightParentPieSlices\": \"${1|1,0|}\""
  },
  "HighlightChildPieSlices": {
    "prefix": "highlightChildPieSlices",
    "description": "Description: This attribute sets the direction of highlighting plots when hovered. The default value of this attribute is `0`, by which the plots are highlighted from the current node to its leaf node. When this attribute is set to `1`, the direction of the highlight gets reversed, i.e., all the leaf node will be highlighted from the current hovered node.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"highlightChildPieSlices\": \"${1|1,0|}\""
  },
  "Color": {
    "prefix": "color",
    "description": "Description: Color for the pie\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"color\": \"\""
  },
  "ToolText": {
    "prefix": "toolText",
    "description": "Description: The tooltip defined in the `category` object appears only when the mouse cursor is hovered over the individual slices. However, this will not appear when the cursor is moved over the data labels (except for a situation when long labels are automatically truncated with ellipses. In this situation, if the mouse cursor is hovered over a truncated label, the tooltip will appear with the full label). In case you want to set a short label and show the full label in tooltip, define the full label using this attribute within the `category` object. The tooltip with the full label will appear only when the mouse is hovered on the particular slice.\n      Type: String\n",
    "body": "\"toolText\": \"\""
  },
  "TooltipGrayoutColor": {
    "prefix": "tooltipGrayoutColor",
    "description": "Description: This attribute sets the color of the unfocused plot in the tooltip for multi-series chart. By default it is set as gray. \n\nDefault value: __#AAAAAA__\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"tooltipGrayoutColor\": \"\""
  },
  "ShowSecondaryLimits": {
    "prefix": "showSecondaryLimits",
    "description": "Description: Whether to show secondary axis chart limit values.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showSecondaryLimits\": \"${1|1,0|}\""
  },
  "ShowDivLineSecondaryValue": {
    "prefix": "showDivLineSecondaryValue",
    "description": "Description: Whether to show div line values for the secondary y-axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showDivLineSecondaryValue\": \"${1|1,0|}\""
  },
  "ShowCumulativeLine": {
    "prefix": "showCumulativeLine",
    "description": "Description: Whether to add the overlay line series over column plot. The values of line series is automatically calculated by chart as cumulative % values. It is plotted against the secondary y-axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCumulativeLine\": \"${1|1,0|}\""
  },
  "ShowLineValues": {
    "prefix": "showLineValues",
    "description": "Description: Whether to show values for the line series.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLineValues\": \"${1|1,0|}\""
  },
  "Use3DLineShift": {
    "prefix": "use3DLineShift",
    "description": "Description: By default, when a line dataset is rendered over a column 3D dataset, the line dataset shifts in the z-dimension to give a 3D perspective. But, if you do not wish to add the perspective to the line dataset, you may set this attribute as 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"use3DLineShift\": \"${1|1,0|}\""
  },
  "SYAxisName": {
    "prefix": "sYAxisName",
    "description": "Description: Secondary y-axis title\n      Type: String\n",
    "body": "\"sYAxisName\": \"\""
  },
  "PrimaryAxisOnLeft": {
    "prefix": "primaryAxisOnLeft",
    "description": "Description: Setting this attribute to 0 helps in reversing the position of primary axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"primaryAxisOnLeft\": \"${1|1,0|}\""
  },
  "PYAxisNameWidth": {
    "prefix": "pYAxisNameWidth",
    "description": "Description: If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to primary y-axis name.\n      Type: Number\n      Range: (In Pixels)",
    "body": "\"pYAxisNameWidth\": \"\""
  },
  "SYAxisNameWidth": {
    "prefix": "sYAxisNameWidth",
    "description": "Description: If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to secondary y-axis name.\n      Type: Number\n      Range: (In Pixels)",
    "body": "\"sYAxisNameWidth\": \"\""
  },
  "SYAxisValueDecimals": {
    "prefix": "sYAxisValueDecimals",
    "description": "Description: If you've opted to not adjust div lines, you can specify the div line values decimal precision using this attribute for the secondary axis.\n      Type: Number\n      Range: 0-10",
    "body": "\"sYAxisValueDecimals\": \"\""
  },
  "SYAxisNameFont": {
    "prefix": "sYAxisNameFont",
    "description": "Description: Sets the secondary y-axis font family for the text\n      Type: String\n      Range: Font Name",
    "body": "\"sYAxisNameFont\": \"\""
  },
  "SYAxisNameFontColor": {
    "prefix": "sYAxisNameFontColor",
    "description": "Description: Sets the secondary y-axis font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"sYAxisNameFontColor\": \"\""
  },
  "SYAxisNameFontSize": {
    "prefix": "sYAxisNameFontSize",
    "description": "Description: Specifies the secondary y-axis font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"sYAxisNameFontSize\": \"\""
  },
  "SYAxisNameFontBold": {
    "prefix": "sYAxisNameFontBold",
    "description": "Description: Whether the secondary y-axis font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sYAxisNameFontBold\": \"${1|1,0|}\""
  },
  "SYAxisNameFontItalic": {
    "prefix": "sYAxisNameFontItalic",
    "description": "Description: Whether secondary y-axis font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sYAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "SYAxisNameBgColor": {
    "prefix": "sYAxisNameBgColor",
    "description": "Description: Sets the background color for secondary y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"sYAxisNameBgColor\": \"\""
  },
  "SYAxisNameBorderColor": {
    "prefix": "sYAxisNameBorderColor",
    "description": "Description: Sets the border around the secondary y-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"sYAxisNameBorderColor\": \"\""
  },
  "SYAxisNameAlpha": {
    "prefix": "sYAxisNameAlpha",
    "description": "Description: Sets the secondary y-axis alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"sYAxisNameAlpha\": \"\""
  },
  "SYAxisNameFontAlpha": {
    "prefix": "sYAxisNameFontAlpha",
    "description": "Description: Sets the secondary y-axis font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"sYAxisNameFontAlpha\": \"\""
  },
  "SYAxisNameBgAlpha": {
    "prefix": "sYAxisNameBgAlpha",
    "description": "Description: Sets the secondary y-axis background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"sYAxisNameBgAlpha\": \"\""
  },
  "SYAxisNameBorderAlpha": {
    "prefix": "sYAxisNameBorderAlpha",
    "description": "Description: Sets the secondary y-axis border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"sYAxisNameBorderAlpha\": \"\""
  },
  "SYAxisNameBorderPadding": {
    "prefix": "sYAxisNameBorderPadding",
    "description": "Description: Sets the secondary y-axis border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"sYAxisNameBorderPadding\": \"\""
  },
  "SYAxisNameBorderRadius": {
    "prefix": "sYAxisNameBorderRadius",
    "description": "Description: Sets the secondary y-axis border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"sYAxisNameBorderRadius\": \"\""
  },
  "SYAxisNameBorderThickness": {
    "prefix": "sYAxisNameBorderThickness",
    "description": "Description: Sets the secondary y-axis border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"sYAxisNameBorderThickness\": \"\""
  },
  "SYAxisNameBorderDashed": {
    "prefix": "sYAxisNameBorderDashed",
    "description": "Description: Whether the border around the primary y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sYAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "SYAxisNameBorderDashLen": {
    "prefix": "sYAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the primary y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"sYAxisNameBorderDashLen\": \"\""
  },
  "SYAxisNameBorderDashGap": {
    "prefix": "sYAxisNameBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the primary y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"sYAxisNameBorderDashGap\": \"\""
  },
  "Sdecimals": {
    "prefix": "sdecimals",
    "description": "Description: Number of decimal places for the secondary axis to which all numbers on the cumulative line will be rounded to.\n      Type: Number\n      Range: 0-10",
    "body": "\"sdecimals\": \"\""
  },
  "SforceDecimals": {
    "prefix": "sforceDecimals",
    "description": "Description: Whether to add 0 padding at the end of decimal numbers for the secondary axis. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all the numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sforceDecimals\": \"${1|1,0|}\""
  },
  "ParentYAxis": {
    "prefix": "parentYAxis",
    "description": "Description: Whether to plot against the primary axis or secondary axis. In case of Pareto chart, since secondary axis is 0 - 100%, you'll have to specify a value within this range.\n      Type: String\n      Range: P or S",
    "body": "\"parentYAxis\": \"\""
  },
  "PieYScale": {
    "prefix": "pieYScale",
    "description": "Description: This attribute alters the y-perspective of the pie in percentage figures. 100 percent means the full pie face is visible and 0 percent means only the side face is visible.\n      Type: Number\n      Range: 30-80",
    "body": "\"pieYScale\": \"\""
  },
  "PieSliceDepth": {
    "prefix": "pieSliceDepth",
    "description": "Description: This attribute controls the pie 3D Depth.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pieSliceDepth\": \"\""
  },
  "PyramidYScale": {
    "prefix": "pyramidYScale",
    "description": "Description: Lets you set the 3D perspective of the pyramid. You'll need to restrict your values to a value between 0 and 40 (depending on your pyramid chart dimensions) to get a proper drawing.\n      Type: Number\n      Range: 0-40",
    "body": "\"pyramidYScale\": \"\""
  },
  "Use3dlighting": {
    "prefix": "use3dlighting",
    "description": "Description: This attribute when set to __1__ shows a 3D effect to the pyramid chart only when _is2d_ attribute is set to __1__ . When we set this attribute to __0__, it displays a simple pyramid chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"use3dlighting\": \"${1|1,0|}\""
  },
  "RadarRadius": {
    "prefix": "radarRadius",
    "description": "Description: If you want to explicitly specify a radius for the radar chart, use this attribute. Otherwise, the chart will automatically calculate the best-fit radius.\n      Type: Number\n      Range: In Pixels",
    "body": "\"radarRadius\": \"\""
  },
  "ShowRadarBorder": {
    "prefix": "showRadarBorder",
    "description": "Description: Whether a border should be rendered around the radar chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showRadarBorder\": \"${1|1,0|}\""
  },
  "RadarBorderColor": {
    "prefix": "radarBorderColor",
    "description": "Description: Border color of radar outline.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"radarBorderColor\": \"\""
  },
  "RadarBorderThickness": {
    "prefix": "radarBorderThickness",
    "description": "Description: Border thickness of radar outline.\n      Type: Number\n      Range: In Pixels",
    "body": "\"radarBorderThickness\": \"\""
  },
  "RadarBorderAlpha": {
    "prefix": "radarBorderAlpha",
    "description": "Description: Border alpha of radar outline.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"radarBorderAlpha\": \"\""
  },
  "RadarFillColor": {
    "prefix": "radarFillColor",
    "description": "Description: Fill color for the radar.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"radarFillColor\": \"\""
  },
  "RadarFillAlpha": {
    "prefix": "radarFillAlpha",
    "description": "Description: Fill alpha for the radar.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"radarFillAlpha\": \"\""
  },
  "RadarSpikeColor": {
    "prefix": "radarSpikeColor",
    "description": "Description: Color for radar spikes. Radar spikes are the lines that emanate from the center to the vertex of radar.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"radarSpikeColor\": \"\""
  },
  "RadarSpikeThickness": {
    "prefix": "radarSpikeThickness",
    "description": "Description: Thickness for radar spikes. Radar spikes are the lines that emanate from the center to the vertex of radar.\n      Type: Number\n      Range: In Pixels",
    "body": "\"radarSpikeThickness\": \"\""
  },
  "RadarSpikeAlpha": {
    "prefix": "radarSpikeAlpha",
    "description": "Description: Alpha for radar spikes. Radar spikes are the lines that emanate from the center to the vertex of radar.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"radarSpikeAlpha\": \"\""
  },
  "AnchorBorderColor": {
    "prefix": "anchorBorderColor",
    "description": "Description: Lets you set the border color of anchors.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"anchorBorderColor\": \"\""
  },
  "AnchorBorderThickness": {
    "prefix": "anchorBorderThickness",
    "description": "Description: Helps you set border thickness of anchors.\n      Type: Number\n      Range: In Pixels",
    "body": "\"anchorBorderThickness\": \"\""
  },
  "AnchorBgColor": {
    "prefix": "anchorBgColor",
    "description": "Description: Helps you set the background color of anchors.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"anchorBgColor\": \"\""
  },
  "AnchorBgAlpha": {
    "prefix": "anchorBgAlpha",
    "description": "Description: Helps you set the alpha of anchor background.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorBgAlpha\": \"\""
  },
  "SeriesNameInToolTip": {
    "prefix": "seriesNameInToolTip",
    "description": "Description: For Multi-series charts, PowerCharts XT shows the following information in tool tip (unless tool text is explicitly defined): &quot;Series Name, Category Name, Data Value&quot;. This attribute lets you control whether series name would show up in tool tip or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"seriesNameInToolTip\": \"${1|1,0|}\""
  },
  "AnchorHoverEffect": {
    "prefix": "anchorHoverEffect",
    "description": "Description: Sets whether to enable the hover effect on charts for anchors.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"anchorHoverEffect\": \"${1|1,0|}\""
  },
  "AnchorHoverAlpha": {
    "prefix": "anchorHoverAlpha",
    "description": "Description: This attribute specifies the transparency for the anchors when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorHoverAlpha\": \"\""
  },
  "AnchorHoverSides": {
    "prefix": "anchorHoverSides",
    "description": "Description: This attribute sets the number of sides of the anchor when hovered.\n      Type: Number\n      Range: In Pixels",
    "body": "\"anchorHoverSides\": \"\""
  },
  "AnchorHoverRadius": {
    "prefix": "anchorHoverRadius",
    "description": "Description: This attribute sets the radius of the anchor when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"anchorHoverRadius\": \"\""
  },
  "AnchorBgHoverColor": {
    "prefix": "anchorBgHoverColor",
    "description": "Description: This attribute sets the background color of anchor when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"anchorBgHoverColor\": \"\""
  },
  "AnchorBgHoverAlpha": {
    "prefix": "anchorBgHoverAlpha",
    "description": "Description: This attribute sets the transparency of anchor’s background when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorBgHoverAlpha\": \"\""
  },
  "AnchorBorderHoverColor": {
    "prefix": "anchorBorderHoverColor",
    "description": "Description: Sets the border color of anchors when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"anchorBorderHoverColor\": \"\""
  },
  "AnchorBorderHoverAlpha": {
    "prefix": "anchorBorderHoverAlpha",
    "description": "Description: Sets the border's transparency of anchors when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorBorderHoverAlpha\": \"\""
  },
  "AnchorBorderHoverThickness": {
    "prefix": "anchorBorderHoverThickness",
    "description": "Description: This attribute sets the border thickness of the anchors when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"anchorBorderHoverThickness\": \"\""
  },
  "AnchorHoverStartAngle": {
    "prefix": "anchorHoverStartAngle",
    "description": "Description: This attribute sets the starting angle of the anchors when hovered.\n      Type: Number\n      Range: In pixels",
    "body": "\"anchorHoverStartAngle\": \"\""
  },
  "AnchorHoverDip": {
    "prefix": "anchorHoverDip",
    "description": "Description: This attribute adds a dip effect (different shapes) to the anchors on hover. When hovered a star shaped anchor is created. Using `anchorSides` attribute, you can specify the no. of sides for anchors. \n`Note : If the anchors are of circular shape, this attribute won't be applied on it.`\n      Type: Number\n      Range: 0 - 1",
    "body": "\"anchorHoverDip\": \"\""
  },
  "AnchorHoverAnimation": {
    "prefix": "anchorHoverAnimation",
    "description": "Description: Anchors get animated when the normal radius and the hover radius are different. To disable this effect you can set anchorHoverAnimation = `0`. \n\nDefault value: `1`\n      Type: Boolean\n      Range: 0/1",
    "body": "\"anchorHoverAnimation\": \"${1|1,0|}\""
  },
  "Font": {
    "prefix": "font",
    "description": "Description: Lets you specify font face for the x-axis data labels.\n      Type: String\n      Range: Valid font face",
    "body": "\"font\": \"\""
  },
  "FontSize": {
    "prefix": "fontSize",
    "description": "Description: Lets you specify font size for the x-axis data labels.\n      Type: Number\n",
    "body": "\"fontSize\": \"\""
  },
  "FontBold": {
    "prefix": "fontBold",
    "description": "Description: Flag indicating whether x-axis label font should be bold or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"fontBold\": \"${1|1,0|}\""
  },
  "FontItalic": {
    "prefix": "fontItalic",
    "description": "Description: Flag indicating whether x-axis label font should be italicized or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"fontItalic\": \"${1|1,0|}\""
  },
  "BorderPadding": {
    "prefix": "borderPadding",
    "description": "Description: Sets the x-axis label border padding.\n      Type: Number\n      Range: In Pixels",
    "body": "\"borderPadding\": \"\""
  },
  "BorderRadius": {
    "prefix": "borderRadius",
    "description": "Description: Sets the x-axis label border radius.\n      Type: Number\n      Range: In Pixels",
    "body": "\"borderRadius\": \"\""
  },
  "BorderDashed": {
    "prefix": "borderDashed",
    "description": "Description: Whether the border around x-axis label should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"borderDashed\": \"${1|1,0|}\""
  },
  "BorderDashLen": {
    "prefix": "borderDashLen",
    "description": "Description: Sets the length of each dash when the border around the x-axis label is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderDashLen\": \"\""
  },
  "BorderDashGap": {
    "prefix": "borderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around x-axis label is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderDashGap\": \"\""
  },
  "SeriesName": {
    "prefix": "seriesName",
    "description": "Description: Lets you specify the series name for a particular data-set. For example, if you are plotting a chart to indicate monthly sales analysis for 2005 and 2006, the `seriesName` for the first dataset would be 2005 and that of the second would be 2006. The `seriesName` of a data-set is shown in legend.\n      Type: String\n",
    "body": "\"seriesName\": \"\""
  },
  "IncludeInLegend": {
    "prefix": "includeInLegend",
    "description": "Description: Whether to include the `seriesName` of this data-set in legend. This can be particularly useful when you are using combination charts and you have used the area or line chart to plot a trend, and you do not want the seriesName of that trend to appear in legend.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"includeInLegend\": \"${1|1,0|}\""
  },
  "AnchorHoverColor": {
    "prefix": "anchorHoverColor",
    "description": "Description: This attribute can set the hover color for anchors of a particular dataset.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"anchorHoverColor\": \"\""
  },
  "VariableIndex": {
    "prefix": "variableIndex",
    "description": "Description: Determines how the data index will be assigned to data plots in real-time charts. For `“variableIndex”: “1”`, a variable index is assigned to each of the chart container slots, and is updated every time a new data plot comes into the container. Therefore, a data plot retains the index assigned to it at the time of creation throughout its lifetime. When `“variableIndex”: “0”`, a fixed index is assigned to each of the chart container slots. Therefore, the index of a data plot changes every time the data plot changes its position. \n\nDefault value for this attribute is __1__.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"variableIndex\": \"${1|1,0|}\""
  },
  "ClearChartInterval": {
    "prefix": "clearChartInterval",
    "description": "Description: The time after which the chart will keep clearing its contents.\n      Type: Number\n",
    "body": "\"clearChartInterval\": \"\""
  },
  "UpdateInterval": {
    "prefix": "updateInterval",
    "description": "Description: If you want the chart to keep polling for new data every x seconds and queue it, you can specify that x seconds as `updateInterval`. This helps you poll at different intervals and then draw at another interval (specified as `refreshInterval`).\n      Type: Number\n",
    "body": "\"updateInterval\": \"\""
  },
  "NumDisplaySets": {
    "prefix": "numDisplaySets",
    "description": "Description: This value helps you specify the number of data items that you want as history on the chart. For example, when you set it as 50, only 50 data items (per dataset) will be displayed on the chart. As soon as the 51st data comes in, the first data will be deleted and the rest of the data will be shifted by 1 position left - the new data will come and take the last position.\n      Type: Number\n",
    "body": "\"numDisplaySets\": \"\""
  },
  "ShowRealTimeValue": {
    "prefix": "showRealTimeValue",
    "description": "Description: This parameter lets you set whether you want the latest value (received from server) to be displayed on the chart or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showRealTimeValue\": \"${1|1,0|}\""
  },
  "RealTimeValueSep": {
    "prefix": "realTimeValueSep",
    "description": "Description: If you are showing real time values for multiple datasets on the chart, this attribute lets you define the separator character to separate each value's display.\n      Type: String\n",
    "body": "\"realTimeValueSep\": \"\""
  },
  "RealTimeValueFont": {
    "prefix": "realTimeValueFont",
    "description": "Description: If real time value is to be displayed on the chart, this attribute lets you set the font face of the same.\n      Type: String\n      Range: Font Name",
    "body": "\"realTimeValueFont\": \"\""
  },
  "RealTimeValueFontSize": {
    "prefix": "realTimeValueFontSize",
    "description": "Description: If real time value is to be displayed on the chart, this attribute lets you set the font size of the same.\n      Type: Number\n",
    "body": "\"realTimeValueFontSize\": \"\""
  },
  "RealTimeValueFontColor": {
    "prefix": "realTimeValueFontColor",
    "description": "Description: If real time value is to be displayed on the chart, this attribute lets you set the font color of the same.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"realTimeValueFontColor\": \"\""
  },
  "RealTimeValueFontBold": {
    "prefix": "realTimeValueFontBold",
    "description": "Description: Sets whether the real time display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"realTimeValueFontBold\": \"${1|1,0|}\""
  },
  "RealTimeValuePadding": {
    "prefix": "realTimeValuePadding",
    "description": "Description: Vertical distance between the real-time value and x-axis labels.\n      Type: Number\n      Range: In pixels",
    "body": "\"realTimeValuePadding\": \"\""
  },
  "Tooltext": {
    "prefix": "tooltext",
    "description": "Description: The tooltip defined in the `category` object appears only when the mouse cursor is hovered over the data plots. However, this will not appear when the cursor is moved over the data labels (except for a situation when long labels are automatically truncated with ellipses. In this situation, if the mouse cursor is hovered over a truncated label, the tooltip will appear with the full label). In case you want to set a short label and show the full label in tooltip, define the full label using this attribute within the `category` object. The tooltip with the full label will appear only when the mouse is hovered on the dataplot.\n      Type: String\n",
    "body": "\"tooltext\": \"\""
  },
  "Showlabel": {
    "prefix": "showlabel",
    "description": "Description: Display label for the vLine.\n      Type: String\n",
    "body": "\"showlabel\": \"\""
  },
  "CheckForAlerts": {
    "prefix": "checkForAlerts",
    "description": "Description: Whether to run the values of this dataset through alert manager, each time an update is received?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"checkForAlerts\": \"${1|1,0|}\""
  },
  "NumVisiblePlot": {
    "prefix": "numVisiblePlot",
    "description": "Description: This attribute lets you control how the number of columns to show in the visible area of the scroll pane. For example, if you're plotting a chart with 10 columns each in 3 dataset, totaling to 30 columns, and you wish to show only 10 columns in the visible area, set this attribute as 10. You will now see only 10 columns in the chart - rest of the columns will be visible upon scrolling. If you want to show all the columns on the chart irrespective of the number of data points in your XML data document, set this attribute as 0.\n      Type: Number\n      Range: 2-number of data items present in XML",
    "body": "\"numVisiblePlot\": \"\""
  },
  "ScrollToEnd": {
    "prefix": "scrollToEnd",
    "description": "Description: When the chart renders, you can opt to scroll to the end of the chart (to show data at extreme right) by setting this attribute as 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"scrollToEnd\": \"${1|1,0|}\""
  },
  "Showaxislines": {
    "prefix": "showaxislines",
    "description": "Description: Sets whether to display the x-axis and y-axis lines.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showaxislines\": \"${1|1,0|}\""
  },
  "ScrollPadding": {
    "prefix": "scrollPadding",
    "description": "Description: Distance between the end of canvas (bottom part) and start of scroll bar. This feature is not available in JavaScript charts.\n      Type: Number\n      Range: In Pixels",
    "body": "\"scrollPadding\": \"\""
  },
  "SubmitDataAsXML": {
    "prefix": "submitDataAsXML",
    "description": "Description: Whether the chart should submit data to the given server side script as XML or as comma separated values.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"submitDataAsXML\": \"${1|1,0|}\""
  },
  "ReverseXaxis": {
    "prefix": "reverseXaxis",
    "description": "Description: You can reverse the x-axis by setting this attribute to `1`. The x-axis values will appear in decreasing order from left to right. \n\n Default value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"reverseXaxis\": \"${1|1,0|}\""
  },
  "Xnumberprefix": {
    "prefix": "xnumberprefix",
    "description": "Description: Using this attribute, you could add prefix to all the values of x-axis. For example, to represent all dollars figure on the x-axis, you could specify this attribute to \"$\" to show like $100, $500.\n      Type: String\n",
    "body": "\"xnumberprefix\": \"\""
  },
  "Ynumbersuffix": {
    "prefix": "ynumbersuffix",
    "description": "Description: Using this attribute, you could add prefix to all the values of y-axis. For example, to represent all dollars figure on the y-axis, you could specify this attribute to \"$\" to show like $100, $500.\n      Type: String\n",
    "body": "\"ynumbersuffix\": \"\""
  },
  "SelectBorderColor": {
    "prefix": "selectBorderColor",
    "description": "Description: Border color for the select (drag) rectangle.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"selectBorderColor\": \"\""
  },
  "SelectBorderAlpha": {
    "prefix": "selectBorderAlpha",
    "description": "Description: Border alpha for the select (drag) rectangle.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"selectBorderAlpha\": \"\""
  },
  "SelectFillColor": {
    "prefix": "selectFillColor",
    "description": "Description: Fill color for the select (drag) rectangle.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"selectFillColor\": \"\""
  },
  "SelectFillAlpha": {
    "prefix": "selectFillAlpha",
    "description": "Description: Fill alpha for the select (drag) rectangle.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"selectFillAlpha\": \"\""
  },
  "YScaleRecursively": {
    "prefix": "yScaleRecursively",
    "description": "Description: This attribute is used to specify the character that will be used to separate the scales that are generated after recursion for the numbers on the y-axis.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yScaleRecursively\": \"${1|1,0|}\""
  },
  "YMaxScaleRecursion": {
    "prefix": "yMaxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling for the numbers on the y-axis? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"yMaxScaleRecursion\": \"\""
  },
  "YScaleSeparator": {
    "prefix": "yScaleSeparator",
    "description": "Description: This attribute is used to specify the character that will be used to separate the scales that are generated after recursion for the numbers on the y-axis.\n      Type: String\n",
    "body": "\"yScaleSeparator\": \"\""
  },
  "MaxColWidth": {
    "prefix": "maxColWidth",
    "description": "Description: Maximum allowed column width\n      Type: Number\n      Range: In Pixels",
    "body": "\"maxColWidth\": \"\""
  },
  "HighColor": {
    "prefix": "highColor",
    "description": "Description: Color using which the column having highest value will be filled.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"highColor\": \"\""
  },
  "LowColor": {
    "prefix": "lowColor",
    "description": "Description: Color using which the column having lowest value will be filled.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lowColor\": \"\""
  },
  "CanvasBgColor": {
    "prefix": "canvasBgColor",
    "description": "Description: This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"canvasBgColor\": \"\""
  },
  "CanvasBgAlpha": {
    "prefix": "canvasBgAlpha",
    "description": "Description: This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"canvasBgAlpha\": \"\""
  },
  "CanvasBgRatio": {
    "prefix": "canvasBgRatio",
    "description": "Description: When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.\n      Type: Numbers separated by comma\n      Range: 0 - 100",
    "body": "\"canvasBgRatio\": \"\""
  },
  "CanvasBgAngle": {
    "prefix": "canvasBgAngle",
    "description": "Description: Helps you specify canvas background angle in case of gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"canvasBgAngle\": \"\""
  },
  "CanvasBorderColor": {
    "prefix": "canvasBorderColor",
    "description": "Description: Lets you specify canvas border color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"canvasBorderColor\": \"\""
  },
  "CanvasBorderThickness": {
    "prefix": "canvasBorderThickness",
    "description": "Description: Lets you specify canvas border thickness.\n      Type: Number\n      Range: In pixels",
    "body": "\"canvasBorderThickness\": \"\""
  },
  "CanvasBorderAlpha": {
    "prefix": "canvasBorderAlpha",
    "description": "Description: Lets you control transparency of canvas border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"canvasBorderAlpha\": \"\""
  },
  "HighHoverColor": {
    "prefix": "highHoverColor",
    "description": "Description: This attribute sets the hover color for high value anchor.\n      Type: Color\n      Range: Hex color code",
    "body": "\"highHoverColor\": \"\""
  },
  "LowHoverColor": {
    "prefix": "lowHoverColor",
    "description": "Description: This attribute sets the hover color for low value anchor.\n      Type: Color\n      Range: Hex color code",
    "body": "\"lowHoverColor\": \"\""
  },
  "ColumnHoverColor": {
    "prefix": "columnHoverColor",
    "description": "Description: This attribute specifies the hover color for the columns.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"columnHoverColor\": \"\""
  },
  "ColumnHoverAlpha": {
    "prefix": "columnHoverAlpha",
    "description": "Description: This attribute specifies the transparency of the column when you hover.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"columnHoverAlpha\": \"\""
  },
  "Dashed": {
    "prefix": "dashed",
    "description": "Description: Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"dashed\": \"${1|1,0|}\""
  },
  "DashLen": {
    "prefix": "dashLen",
    "description": "Description: Sets the length of each dash when trendline is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"dashLen\": \"\""
  },
  "DashGap": {
    "prefix": "dashGap",
    "description": "Description: Sets the gap between consecutive dashes when trendline is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"dashGap\": \"\""
  },
  "EndValue": {
    "prefix": "endValue",
    "description": "Description: The ending y-axis value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `endValue` will be 109. If you do not specify a value for `endValue`, it will automatically assume the same value as `startValue`.\n      Type: Number\n",
    "body": "\"endValue\": \"\""
  },
  "IsTrendZone": {
    "prefix": "isTrendZone",
    "description": "Description: Whether the trend will be displayed as a line or a zone (fill-colored rectangle).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isTrendZone\": \"${1|1,0|}\""
  },
  "ShowOnTop": {
    "prefix": "showOnTop",
    "description": "Description: By default, the trendline/trendzone appears below the dataplots. This attribute allows you to display the trendline/trendzone on top of the dataplots.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showOnTop\": \"${1|1,0|}\""
  },
  "StartValue": {
    "prefix": "startValue",
    "description": "Description: The starting value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `startValue` will be 102.\n      Type: Number\n",
    "body": "\"startValue\": \"\""
  },
  "Thickness": {
    "prefix": "thickness",
    "description": "Description: If you've opted to show the trend as a line, this attribute lets you define the thickness of trend line.\n      Type: Number\n      Range: In pixels",
    "body": "\"thickness\": \"\""
  },
  "TrendlineColor": {
    "prefix": "trendlineColor",
    "description": "Description: Sets color of all the trend lines and its associated text in the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendlineColor\": \"\""
  },
  "TrendlineThickness": {
    "prefix": "trendlineThickness",
    "description": "Description: If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"trendlineThickness\": \"\""
  },
  "TrendlineAlpha": {
    "prefix": "trendlineAlpha",
    "description": "Description: Sets transparency for all the trend lines in your charts.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendlineAlpha\": \"\""
  },
  "TrendLineToolText": {
    "prefix": "trendLineToolText",
    "description": "Description: Sets the tooltip text of the trend-line. It accepts macros, plain text, and HTML tags, as string.\n      Type: String\n",
    "body": "\"trendLineToolText\": \"\""
  },
  "ShowTrendlinesOnTop": {
    "prefix": "showTrendlinesOnTop",
    "description": "Description: Whether all the trend line/zone will be displayed over data plots or under them.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTrendlinesOnTop\": \"${1|1,0|}\""
  },
  "ConnectNullData": {
    "prefix": "connectNullData",
    "description": "Description: This attributes lets you control whether empty datasets in your data will be connected to each other OR will they appear as broken datasets?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"connectNullData\": \"${1|1,0|}\""
  },
  "LineColor": {
    "prefix": "lineColor",
    "description": "Description: Color using which the lines on the chart will be drawn.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lineColor\": \"\""
  },
  "LineThickness": {
    "prefix": "lineThickness",
    "description": "Description: Thickness of the lines on the chart.\n      Type: Number\n      Range: In pixels",
    "body": "\"lineThickness\": \"\""
  },
  "LineAlpha": {
    "prefix": "lineAlpha",
    "description": "Description: Alpha of the lines on the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"lineAlpha\": \"\""
  },
  "DrawAnchors": {
    "prefix": "drawAnchors",
    "description": "Description: Whether to draw anchors on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawAnchors\": \"${1|1,0|}\""
  },
  "AnchorSides": {
    "prefix": "anchorSides",
    "description": "Description: This attribute sets the number of sides the anchor will have. For e.g., an anchor with 3 sides will represent a triangle, with 4 it will be a square and so on.\n      Type: Number\n",
    "body": "\"anchorSides\": \"\""
  },
  "AnchorStartAngle": {
    "prefix": "anchorStartAngle",
    "description": "Description: This attribute sets the starting angle of anchors.  \n\nDefault value: 90\n      Type: Number\n      Range: 0 - 360",
    "body": "\"anchorStartAngle\": \"\""
  },
  "AnchorRadius": {
    "prefix": "anchorRadius",
    "description": "Description: This attribute sets the radius (in pixels) of the anchor.\n      Type: Number\n      Range: In pixels",
    "body": "\"anchorRadius\": \"\""
  },
  "AnchorColor": {
    "prefix": "anchorColor",
    "description": "Description: Lets you set the color of anchors.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"anchorColor\": \"\""
  },
  "AnchorAlpha": {
    "prefix": "anchorAlpha",
    "description": "Description: Lets you set the alpha of anchors.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorAlpha\": \"\""
  },
  "AnchorImageUrl": {
    "prefix": "anchorImageUrl",
    "description": "Description: If you want to use an external image (JPG/PNG) as an anchor,  this attribute lets you specify the URL. \n\n__Note__: Due to cross domain security restrictions it is advised to use an image from the same domain name as your charts.\n      Type: FusionCharts link format\n      Range: URL",
    "body": "\"anchorImageUrl\": \"\""
  },
  "AnchorImageAlpha": {
    "prefix": "anchorImageAlpha",
    "description": "Description: This attribute allows to set a transparency for images displayed as anchors in charts. \n\n__Default value__: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorImageAlpha\": \"\""
  },
  "AnchorImageScale": {
    "prefix": "anchorImageScale",
    "description": "Description: This attribute allows to set a scale for magnifying images displayed as anchors. \n\n __Default value__: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"anchorImageScale\": \"\""
  },
  "AnchorImagePadding": {
    "prefix": "anchorImagePadding",
    "description": "Description: This attribute sets the padding between the anchor image and the border of the anchor. For the anchor image, instead of decreasing the size of the image this attribute crops the image.  \n\nDefault value: 1\n      Type: Number\n      Range: In Pixels",
    "body": "\"anchorImagePadding\": \"\""
  },
  "OpenColor": {
    "prefix": "openColor",
    "description": "Description: Color for opening value anchor.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"openColor\": \"\""
  },
  "CloseColor": {
    "prefix": "closeColor",
    "description": "Description: Color for closing value anchor.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"closeColor\": \"\""
  },
  "ShowOpenAnchor": {
    "prefix": "showOpenAnchor",
    "description": "Description: Whether to show anchor for opening value? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showOpenAnchor\": \"${1|1,0|}\""
  },
  "ShowCloseAnchor": {
    "prefix": "showCloseAnchor",
    "description": "Description: Whether to show anchor for closing value? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCloseAnchor\": \"${1|1,0|}\""
  },
  "ShowHighAnchor": {
    "prefix": "showHighAnchor",
    "description": "Description: Whether to show anchor for high value? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHighAnchor\": \"${1|1,0|}\""
  },
  "ShowLowAnchor": {
    "prefix": "showLowAnchor",
    "description": "Description: Whether to show anchor for low value? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLowAnchor\": \"${1|1,0|}\""
  },
  "ShowOpenValue": {
    "prefix": "showOpenValue",
    "description": "Description: Whether to show the opening value beside the chart? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showOpenValue\": \"${1|1,0|}\""
  },
  "ShowCloseValue": {
    "prefix": "showCloseValue",
    "description": "Description: Whether to show the closing value beside the chart? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showCloseValue\": \"${1|1,0|}\""
  },
  "ShowHighLowValue": {
    "prefix": "showHighLowValue",
    "description": "Description: Whether to show the high/low value beside the chart? By default this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHighLowValue\": \"${1|1,0|}\""
  },
  "OpenHoverColor": {
    "prefix": "openHoverColor",
    "description": "Description: This attribute sets the hover color for opening value anchor.\n      Type: Color\n      Range: Hex color code",
    "body": "\"openHoverColor\": \"\""
  },
  "CloseHoverColor": {
    "prefix": "closeHoverColor",
    "description": "Description: This attribute sets the hover color for closing value anchor.\n      Type: Color\n      Range: Hex color code",
    "body": "\"closeHoverColor\": \"\""
  },
  "DisplayValue": {
    "prefix": "displayValue",
    "description": "Description: If instead of the numerical value of this data, you wish to display a custom string value, you can specify the same here. Examples are annotation for a data item etc.\n      Type: String\n      Range:  ",
    "body": "\"displayValue\": \"\""
  },
  "Animation": {
    "prefix": "animation",
    "description": "Description: This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"animation\": \"${1|1,0|}\""
  },
  "AnimationDuration": {
    "prefix": "animationDuration",
    "description": "Description: This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec\n      Type: Number\n      Range: In seconds",
    "body": "\"animationDuration\": \"\""
  },
  "ClickURL": {
    "prefix": "clickURL",
    "description": "Description: The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.\n      Type: URL in FusionCharts format\n",
    "body": "\"clickURL\": \"\""
  },
  "ClickURLOverridesPlotLinks": {
    "prefix": "clickURLOverridesPlotLinks",
    "description": "Description: Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"clickURLOverridesPlotLinks\": \"${1|1,0|}\""
  },
  "Palette": {
    "prefix": "palette",
    "description": "Description: Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. \n      Type: Number\n      Range: 1-5",
    "body": "\"palette\": \"\""
  },
  "PaletteThemeColor": {
    "prefix": "paletteThemeColor",
    "description": "Description: If you want your own palette derived from a particular hex color, you can specify the same here. All other colors on the chart will automatically derive from that palette.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"paletteThemeColor\": \"\""
  },
  "ShowValue": {
    "prefix": "showValue",
    "description": "Description: Whether to show the value of chart?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showValue\": \"${1|1,0|}\""
  },
  "ShowPrintMenuItem": {
    "prefix": "showPrintMenuItem",
    "description": "Description: Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPrintMenuItem\": \"${1|1,0|}\""
  },
  "UseRoundEdges": {
    "prefix": "useRoundEdges",
    "description": "Description: If you wish to plot columns with round edges and fill them with a glass effect gradient, set this attribute to 1. `showShadow` attribute doesn't work anymore when this attribute is set to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useRoundEdges\": \"${1|1,0|}\""
  },
  "ShowShadow": {
    "prefix": "showShadow",
    "description": "Description: Whether to show win/loss column shadows.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showShadow\": \"${1|1,0|}\""
  },
  "ManageResize": {
    "prefix": "manageResize",
    "description": "Description: Setting this attribute to 1, you can allow the chart to automatically resize itself when the parent container of the chart is resized.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"manageResize\": \"${1|1,0|}\""
  },
  "UseEllipsesWhenOverflow": {
    "prefix": "useEllipsesWhenOverflow",
    "description": "Description: When enabled in auto mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useEllipsesWhenOverflow\": \"${1|1,0|}\""
  },
  "HasRTLText": {
    "prefix": "hasRTLText",
    "description": "Description: This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. \n      Type: Number\n",
    "body": "\"hasRTLText\": \"\""
  },
  "Theme": {
    "prefix": "theme",
    "description": "Description: This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.\n      Type: String\n      Range: ‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
    "body": "\"theme\": \"\""
  },
  "ShowHoverEffect": {
    "prefix": "showHoverEffect",
    "description": "Description: Whether to enable hover effect on charts for all elements\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHoverEffect\": \"${1|1,0|}\""
  },
  "BaseChartMessageFont": {
    "prefix": "baseChartMessageFont",
    "description": "Description: This attribute allows to set a custom font for all chart messages.\n      Type: String\n",
    "body": "\"baseChartMessageFont\": \"\""
  },
  "BaseChartMessageFontSize": {
    "prefix": "baseChartMessageFontSize",
    "description": "Description: This attribute allows to set a custom font size for all chart messages.\n      Type: Number\n      Range: In pixels",
    "body": "\"baseChartMessageFontSize\": \"\""
  },
  "BaseChartMessageColor": {
    "prefix": "baseChartMessageColor",
    "description": "Description: This attribute allows to set a custom font color for all chart messages.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"baseChartMessageColor\": \"\""
  },
  "BaseChartMessageImageHAlign": {
    "prefix": "baseChartMessageImageHAlign",
    "description": "Description: This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle\n      Type: String\n      Range: left, middle, right",
    "body": "\"baseChartMessageImageHAlign\": \"\""
  },
  "BaseChartMessageImageVAlign": {
    "prefix": "baseChartMessageImageVAlign",
    "description": "Description: This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"baseChartMessageImageVAlign\": \"\""
  },
  "BaseChartMessageImageAlpha": {
    "prefix": "baseChartMessageImageAlpha",
    "description": "Description: This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"baseChartMessageImageAlpha\": \"\""
  },
  "BaseChartMessageImageScale": {
    "prefix": "baseChartMessageImageScale",
    "description": "Description: This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"baseChartMessageImageScale\": \"\""
  },
  "LoadMessage": {
    "prefix": "loadMessage",
    "description": "Description: This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"loadMessage\": \"\""
  },
  "LoadMessageFont": {
    "prefix": "loadMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed when a chart begins to load.\n      Type: String\n      Range: Font Name",
    "body": "\"loadMessageFont\": \"\""
  },
  "LoadMessageFontSize": {
    "prefix": "loadMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when a chart begins to load.\n      Type: Number\n      Range: In pixels",
    "body": "\"loadMessageFontSize\": \"\""
  },
  "LoadMessageColor": {
    "prefix": "loadMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when a chart begins to load.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"loadMessageColor\": \"\""
  },
  "LoadMessageImageHAlign": {
    "prefix": "loadMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"loadMessageImageHAlign\": \"\""
  },
  "LoadMessageImageVAlign": {
    "prefix": "loadMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"loadMessageImageVAlign\": \"\""
  },
  "LoadMessageImageAlpha": {
    "prefix": "loadMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"loadMessageImageAlpha\": \"\""
  },
  "LoadMessageImageScale": {
    "prefix": "loadMessageImageScale",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"loadMessageImageScale\": \"\""
  },
  "TypeNotSupportedMessage": {
    "prefix": "typeNotSupportedMessage",
    "description": "Description: This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"typeNotSupportedMessage\": \"\""
  },
  "TypeNotSupportedMessageFont": {
    "prefix": "typeNotSupportedMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed when the specified chart type is not supported.\n      Type: String\n      Range: Font Name",
    "body": "\"typeNotSupportedMessageFont\": \"\""
  },
  "TypeNotSupportedMessageFontSize": {
    "prefix": "typeNotSupportedMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when the specified chart type is not supported.\n      Type: Number\n      Range: In pixels",
    "body": "\"typeNotSupportedMessageFontSize\": \"\""
  },
  "TypeNotSupportedMessageColor": {
    "prefix": "typeNotSupportedMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when the specified chart type is not supported.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"typeNotSupportedMessageColor\": \"\""
  },
  "TypeNotSupportedMessageImageHAlign": {
    "prefix": "typeNotSupportedMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"typeNotSupportedMessageImageHAlign\": \"\""
  },
  "TypeNotSupportedMessageImageVAlign": {
    "prefix": "typeNotSupportedMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"typeNotSupportedMessageImageVAlign\": \"\""
  },
  "TypeNotSupportedMessageImageAlpha": {
    "prefix": "typeNotSupportedMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"typeNotSupportedMessageImageAlpha\": \"\""
  },
  "TypeNotSupportedMessageImageScale": {
    "prefix": "typeNotSupportedMessageImageScale",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"typeNotSupportedMessageImageScale\": \"\""
  },
  "RenderErrorMessage": {
    "prefix": "renderErrorMessage",
    "description": "Description: This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"renderErrorMessage\": \"\""
  },
  "RenderErrorMessageFont": {
    "prefix": "renderErrorMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.\n      Type: String\n      Range: Font Name",
    "body": "\"renderErrorMessageFont\": \"\""
  },
  "RenderErrorMessageFontSize": {
    "prefix": "renderErrorMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.\n      Type: Number\n      Range: In pixels",
    "body": "\"renderErrorMessageFontSize\": \"\""
  },
  "RenderErrorMessageColor": {
    "prefix": "renderErrorMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"renderErrorMessageColor\": \"\""
  },
  "RenderErrorMessageImageHAlign": {
    "prefix": "renderErrorMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"renderErrorMessageImageHAlign\": \"\""
  },
  "RenderErrorMessageImageVAlign": {
    "prefix": "renderErrorMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"renderErrorMessageImageVAlign\": \"\""
  },
  "RenderErrorMessageImageAlpha": {
    "prefix": "renderErrorMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"renderErrorMessageImageAlpha\": \"\""
  },
  "RenderErrorMessageImageScale": {
    "prefix": "renderErrorMessageImageScale",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"renderErrorMessageImageScale\": \"\""
  },
  "DataLoadStartMessage": {
    "prefix": "dataLoadStartMessage",
    "description": "Description: This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataLoadStartMessage\": \"\""
  },
  "DataLoadStartMessageFont": {
    "prefix": "dataLoadStartMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed when chart data begins loading.\n      Type: String\n      Range: Font Name",
    "body": "\"dataLoadStartMessageFont\": \"\""
  },
  "DataLoadStartMessageFontSize": {
    "prefix": "dataLoadStartMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when chart data begins loading.\n      Type: String\n      Range: In pixels",
    "body": "\"dataLoadStartMessageFontSize\": \"\""
  },
  "DataLoadStartMessageColor": {
    "prefix": "dataLoadStartMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when chart data begins loading.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataLoadStartMessageColor\": \"\""
  },
  "DataLoadStartMessageImageHAlign": {
    "prefix": "dataLoadStartMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataLoadStartMessageImageHAlign\": \"\""
  },
  "DataLoadStartMessageImageVAlign": {
    "prefix": "dataLoadStartMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataLoadStartMessageImageVAlign\": \"\""
  },
  "DataLoadStartMessageImageAlpha": {
    "prefix": "dataLoadStartMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataLoadStartMessageImageAlpha\": \"\""
  },
  "DataLoadStartMessageImageScale": {
    "prefix": "dataLoadStartMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataLoadStartMessageImageScale\": \"\""
  },
  "DataEmptyMessage": {
    "prefix": "dataEmptyMessage",
    "description": "Description: This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataEmptyMessage\": \"\""
  },
  "DataEmptyMessageFont": {
    "prefix": "dataEmptyMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed if the data loaded for a chart is empty\n      Type: String\n      Range: Font Name",
    "body": "\"dataEmptyMessageFont\": \"\""
  },
  "DataEmptyMessageFontSize": {
    "prefix": "dataEmptyMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataEmptyMessageFontSize\": \"\""
  },
  "DataEmptyMessageColor": {
    "prefix": "dataEmptyMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataEmptyMessageColor\": \"\""
  },
  "DataEmptyMessageImageHAlign": {
    "prefix": "dataEmptyMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataEmptyMessageImageHAlign\": \"\""
  },
  "DataEmptyMessageImageVAlign": {
    "prefix": "dataEmptyMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataEmptyMessageImageVAlign\": \"\""
  },
  "DataEmptyMessageImageAlpha": {
    "prefix": "dataEmptyMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataEmptyMessageImageAlpha\": \"\""
  },
  "DataEmptyMessageImageScale": {
    "prefix": "dataEmptyMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataEmptyMessageImageScale\": \"\""
  },
  "DataLoadErrorMessage": {
    "prefix": "dataLoadErrorMessage",
    "description": "Description: This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataLoadErrorMessage\": \"\""
  },
  "DataLoadErrorMessageFont": {
    "prefix": "dataLoadErrorMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.\n      Type: String\n      Range: Font Name",
    "body": "\"dataLoadErrorMessageFont\": \"\""
  },
  "DataLoadErrorMessageFontSize": {
    "prefix": "dataLoadErrorMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataLoadErrorMessageFontSize\": \"\""
  },
  "DataLoadErrorMessageColor": {
    "prefix": "dataLoadErrorMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataLoadErrorMessageColor\": \"\""
  },
  "DataLoadErrorMessageImageHAlign": {
    "prefix": "dataLoadErrorMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataLoadErrorMessageImageHAlign\": \"\""
  },
  "DataLoadErrorMessageImageVAlign": {
    "prefix": "dataLoadErrorMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataLoadErrorMessageImageVAlign\": \"\""
  },
  "DataLoadErrorMessageImageAlpha": {
    "prefix": "dataLoadErrorMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataLoadErrorMessageImageAlpha\": \"\""
  },
  "DataLoadErrorMessageImageScale": {
    "prefix": "dataLoadErrorMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataLoadErrorMessageImageScale\": \"\""
  },
  "DataInvalidMessage": {
    "prefix": "dataInvalidMessage",
    "description": "Description: This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataInvalidMessage\": \"\""
  },
  "DataInvalidMessageFont": {
    "prefix": "dataInvalidMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed if the specified chart data is invalid.\n      Type: String\n      Range: Font Name",
    "body": "\"dataInvalidMessageFont\": \"\""
  },
  "DataInvalidMessageFontSize": {
    "prefix": "dataInvalidMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if the specified chart data is invalid.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataInvalidMessageFontSize\": \"\""
  },
  "DataInvalidMessageColor": {
    "prefix": "dataInvalidMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if the specified chart data is invalid.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataInvalidMessageColor\": \"\""
  },
  "DataInvalidMessageImageHAlign": {
    "prefix": "dataInvalidMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataInvalidMessageImageHAlign\": \"\""
  },
  "DataInvalidMessageImageVAlign": {
    "prefix": "dataInvalidMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataInvalidMessageImageVAlign\": \"\""
  },
  "DataInvalidMessageImageAlpha": {
    "prefix": "dataInvalidMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataInvalidMessageImageAlpha\": \"\""
  },
  "DataInvalidMessageImageScale": {
    "prefix": "dataInvalidMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataInvalidMessageImageScale\": \"\""
  },
  "Caption": {
    "prefix": "caption",
    "description": "Description: Caption of the chart.\n      Type: String\n",
    "body": "\"caption\": \"\""
  },
  "SubCaption": {
    "prefix": "subCaption",
    "description": "Description: Sub-caption of the chart.\n      Type: String\n",
    "body": "\"subCaption\": \"\""
  },
  "CaptionPosition": {
    "prefix": "captionPosition",
    "description": "Description: Sets the position of the caption according to the canvas.\n      Type: String\n      Range: \"top\", \"middle\", \"bottom\"",
    "body": "\"captionPosition\": \"\""
  },
  "CaptionOnRight": {
    "prefix": "captionOnRight",
    "description": "Description: Whether caption should be on right of the canvas. \n\nDefault Value: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"captionOnRight\": \"${1|1,0|}\""
  },
  "CaptionFontSize": {
    "prefix": "captionFontSize",
    "description": "Description: Sets the caption font size in pixels\n      Type: Number\n      Range: 6 - 72",
    "body": "\"captionFontSize\": \"\""
  },
  "SubCaptionFontSize": {
    "prefix": "subCaptionFontSize",
    "description": "Description: Sets the sub-caption font size (in pixels)\n      Type: Number\n      Range: 6 - 72",
    "body": "\"subCaptionFontSize\": \"\""
  },
  "CaptionFont": {
    "prefix": "captionFont",
    "description": "Description: Sets the caption font family\n      Type: String\n      Range: Font Name",
    "body": "\"captionFont\": \"\""
  },
  "SubCaptionFont": {
    "prefix": "subCaptionFont",
    "description": "Description: Sets the sub-caption font family\n      Type: String\n      Range: Font Name",
    "body": "\"subCaptionFont\": \"\""
  },
  "CaptionFontColor": {
    "prefix": "captionFontColor",
    "description": "Description: Sets the caption font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"captionFontColor\": \"\""
  },
  "SubCaptionFontColor": {
    "prefix": "subCaptionFontColor",
    "description": "Description: Sets the sub-caption font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"subCaptionFontColor\": \"\""
  },
  "CaptionFontBold": {
    "prefix": "captionFontBold",
    "description": "Description: Whether the caption font should be displayed in bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"captionFontBold\": \"${1|1,0|}\""
  },
  "SubCaptionFontBold": {
    "prefix": "subCaptionFontBold",
    "description": "Description: Whether the sub caption font should be displayed in bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"subCaptionFontBold\": \"${1|1,0|}\""
  },
  "AlignCaptionWithCanvas": {
    "prefix": "alignCaptionWithCanvas",
    "description": "Description: Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area\n      Type: Boolean\n      Range: 0/1",
    "body": "\"alignCaptionWithCanvas\": \"${1|1,0|}\""
  },
  "CaptionHorizontalPadding": {
    "prefix": "captionHorizontalPadding",
    "description": "Description: If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.\n      Type: Number\n      Range: In Pixels",
    "body": "\"captionHorizontalPadding\": \"\""
  },
  "WinColor": {
    "prefix": "winColor",
    "description": "Description: Fill colors for bar indicating win\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"winColor\": \"\""
  },
  "LossColor": {
    "prefix": "lossColor",
    "description": "Description: Fill colors for bar indicating loss\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lossColor\": \"\""
  },
  "DrawColor": {
    "prefix": "drawColor",
    "description": "Description: Fill colors for bar indicating draw\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"drawColor\": \"\""
  },
  "ScoreLessColor": {
    "prefix": "scoreLessColor",
    "description": "Description: Fill colors for bar indicating scoreless matches\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"scoreLessColor\": \"\""
  },
  "ToolbarPosition": {
    "prefix": "toolbarPosition",
    "description": "Description: Where to position the toolbar on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen\n      Type: String\n      Range: TL, TR, BL, BR, CC",
    "body": "\"toolbarPosition\": \"\""
  },
  "ToolbarX": {
    "prefix": "toolbarX",
    "description": "Description: Sets the toolbox position on the chart with respect to x-axis.\n      Type: Number\n",
    "body": "\"toolbarX\": \"\""
  },
  "ToolbarY": {
    "prefix": "toolbarY",
    "description": "Description: Sets the toolbox position on the chart with respect to y-axis.\n      Type: Number\n",
    "body": "\"toolbarY\": \"\""
  },
  "ToolbarHAlign": {
    "prefix": "toolbarHAlign",
    "description": "Description: Sets the horizontal alignment of the toolbar on the chart.\n      Type: String\n      Range: Left, Right",
    "body": "\"toolbarHAlign\": \"\""
  },
  "ToolbarVAlign": {
    "prefix": "toolbarVAlign",
    "description": "Description: Sets the vertical alignment of the toolbar on the chart\n      Type: String\n      Range: Top, Bottom",
    "body": "\"toolbarVAlign\": \"\""
  },
  "ToolbarButtonColor": {
    "prefix": "toolbarButtonColor",
    "description": "Description: Sets the color of the toolbar buttons.\n      Type: Color\n      Range: Any (color code without the # prefix)",
    "body": "\"toolbarButtonColor\": \"\""
  },
  "ShowToolBarButtonTooltext": {
    "prefix": "showToolBarButtonTooltext",
    "description": "Description: Enables/disables display of tooltips for toolbar buttons.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolBarButtonTooltext\": \"${1|1,0|}\""
  },
  "ToolbarButtonScale": {
    "prefix": "toolbarButtonScale",
    "description": "Description: You can change the scale of the toolbar by specifying a value for this attribute.\n      Type: Number\n",
    "body": "\"toolbarButtonScale\": \"\""
  },
  "ExportEnabled": {
    "prefix": "exportEnabled",
    "description": "Description: Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportEnabled\": \"${1|1,0|}\""
  },
  "ExportAction": {
    "prefix": "exportAction",
    "description": "Description: In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download\n      Type: String\n      Range: 'save' or 'download'",
    "body": "\"exportAction\": \"\""
  },
  "ExportHandler": {
    "prefix": "exportHandler",
    "description": "Description: In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).\n      Type: String\n",
    "body": "\"exportHandler\": \"\""
  },
  "ExportFormats": {
    "prefix": "exportFormats",
    "description": "Description: Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`\n      Type: String\n",
    "body": "\"exportFormats\": \"\""
  },
  "ExportAtClientSide": {
    "prefix": "exportAtClientSide",
    "description": "Description: This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportAtClientSide\": \"${1|1,0|}\""
  },
  "ExportShowMenuItem": {
    "prefix": "exportShowMenuItem",
    "description": "Description: Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportShowMenuItem\": \"${1|1,0|}\""
  },
  "ExportTargetWindow": {
    "prefix": "exportTargetWindow",
    "description": "Description: In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self\n      Type: String\n      Range: '_self' or '_blank'",
    "body": "\"exportTargetWindow\": \"\""
  },
  "ExportFileName": {
    "prefix": "exportFileName",
    "description": "Description: Using this attribute you can specify the name (excluding the extension) of the output (export) file.\n      Type: String\n",
    "body": "\"exportFileName\": \"\""
  },
  "PlotHoverEffect": {
    "prefix": "plotHoverEffect",
    "description": "Description: Whether to enable hover effect on charts for data plots (e.g., column, pie) only\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotHoverEffect\": \"${1|1,0|}\""
  },
  "PlotFillHoverColor": {
    "prefix": "plotFillHoverColor",
    "description": "Description: Specifies the hover color for the data plots\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotFillHoverColor\": \"\""
  },
  "PlotFillHoverAlpha": {
    "prefix": "plotFillHoverAlpha",
    "description": "Description: Specifies the hover alpha for data plots\n      Type: Number\n      Range: 1 - 100",
    "body": "\"plotFillHoverAlpha\": \"\""
  },
  "WinHoverColor": {
    "prefix": "winHoverColor",
    "description": "Description: This attribute sets the color on hover for bars indicating win.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"winHoverColor\": \"\""
  },
  "LossHoverColor": {
    "prefix": "lossHoverColor",
    "description": "Description: This attribute sets the color on hover for bars indicating loss.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"lossHoverColor\": \"\""
  },
  "DrawHoverColor": {
    "prefix": "drawHoverColor",
    "description": "Description: This attribute sets the color on hover for bars indicating draw.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"drawHoverColor\": \"\""
  },
  "ScoreLessHoverColor": {
    "prefix": "scoreLessHoverColor",
    "description": "Description: This attribute sets the color on hover for bars indicating scoreLess.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"scoreLessHoverColor\": \"\""
  },
  "PeriodLength": {
    "prefix": "periodLength",
    "description": "Description: How many data points will each period block encapsulate?\n      Type: Number\n",
    "body": "\"periodLength\": \"\""
  },
  "PeriodColor": {
    "prefix": "periodColor",
    "description": "Description: Color for the period block.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"periodColor\": \"\""
  },
  "PeriodAlpha": {
    "prefix": "periodAlpha",
    "description": "Description: Alpha for the period block.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"periodAlpha\": \"\""
  },
  "BgColor": {
    "prefix": "bgColor",
    "description": "Description: This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bgColor\": \"\""
  },
  "BgAlpha": {
    "prefix": "bgAlpha",
    "description": "Description: Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bgAlpha\": \"\""
  },
  "BgRatio": {
    "prefix": "bgRatio",
    "description": "Description: If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.\n      Type: Numbers separated by comma\n",
    "body": "\"bgRatio\": \"\""
  },
  "BgAngle": {
    "prefix": "bgAngle",
    "description": "Description: Angle of the background color, in case of a gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"bgAngle\": \"\""
  },
  "ShowBorder": {
    "prefix": "showBorder",
    "description": "Description: Whether to show a border around the chart or not?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showBorder\": \"${1|1,0|}\""
  },
  "BorderColor": {
    "prefix": "borderColor",
    "description": "Description: Border color of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"borderColor\": \"\""
  },
  "BorderThickness": {
    "prefix": "borderThickness",
    "description": "Description: Border thickness of the chart.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderThickness\": \"\""
  },
  "BorderAlpha": {
    "prefix": "borderAlpha",
    "description": "Description: Border alpha of the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"borderAlpha\": \"\""
  },
  "BgImage": {
    "prefix": "bgImage",
    "description": "Description: To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.\n      Type: String\n",
    "body": "\"bgImage\": \"\""
  },
  "BgImageAlpha": {
    "prefix": "bgImageAlpha",
    "description": "Description: This attribute specifies the opacity for the loaded background image.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bgImageAlpha\": \"\""
  },
  "BgImageDisplayMode": {
    "prefix": "bgImageDisplayMode",
    "description": "Description: Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.\n      Type: String\n      Range: 'stretch', 'tile', 'fit', 'fill', 'center', 'none'",
    "body": "\"bgImageDisplayMode\": \"\""
  },
  "BgImageVAlign": {
    "prefix": "bgImageVAlign",
    "description": "Description: Helps you to vertically align the background image.\n      Type: String\n      Range: 'top', 'middle', 'bottom'",
    "body": "\"bgImageVAlign\": \"\""
  },
  "BgImageHAlign": {
    "prefix": "bgImageHAlign",
    "description": "Description: Helps you to horizontally align the background image.\n      Type: String\n      Range: 'left', 'middle', 'right'",
    "body": "\"bgImageHAlign\": \"\""
  },
  "BgImageScale": {
    "prefix": "bgImageScale",
    "description": "Description: Helps you magnify the background image. This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.\n      Type: Number\n      Range: 0-300",
    "body": "\"bgImageScale\": \"\""
  },
  "LogoURL": {
    "prefix": "logoURL",
    "description": "Description: You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.\n      Type: String\n",
    "body": "\"logoURL\": \"\""
  },
  "LogoLeftMargin": {
    "prefix": "logoLeftMargin",
    "description": "Description: This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"logoLeftMargin\": \"\""
  },
  "LogoTopMargin": {
    "prefix": "logoTopMargin",
    "description": "Description: This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"logoTopMargin\": \"\""
  },
  "LogoPosition": {
    "prefix": "logoPosition",
    "description": "Description: Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen\n      Type: String\n      Range: 'TL', 'TR', 'BL', \n'BR', 'CC'",
    "body": "\"logoPosition\": \"\""
  },
  "LogoAlpha": {
    "prefix": "logoAlpha",
    "description": "Description: Once the logo has loaded on the chart, you can configure its opacity using this attribute.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"logoAlpha\": \"\""
  },
  "LogoScale": {
    "prefix": "logoScale",
    "description": "Description: You can also change the size of externally loaded logo at run-time by specifying a value for this parameter.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"logoScale\": \"\""
  },
  "LogoLink": {
    "prefix": "logoLink",
    "description": "Description: If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts link format, allowing you to link to new windows, pop-ups, frames etc.\n      Type: String\n",
    "body": "\"logoLink\": \"\""
  },
  "ValueFont": {
    "prefix": "valueFont",
    "description": "Description: Sets the font of the values in the chart\n      Type: String\n      Range: Font Name",
    "body": "\"valueFont\": \"\""
  },
  "ValueFontColor": {
    "prefix": "valueFontColor",
    "description": "Description: Specifies the value font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueFontColor\": \"\""
  },
  "ValueFontSize": {
    "prefix": "valueFontSize",
    "description": "Description: Specifies the value font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"valueFontSize\": \"\""
  },
  "ValueFontBold": {
    "prefix": "valueFontBold",
    "description": "Description: Whether value font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueFontBold\": \"${1|1,0|}\""
  },
  "ValueFontItalic": {
    "prefix": "valueFontItalic",
    "description": "Description: Whether value font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueFontItalic\": \"${1|1,0|}\""
  },
  "ValueBgColor": {
    "prefix": "valueBgColor",
    "description": "Description: Sets the background color for value text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueBgColor\": \"\""
  },
  "ValueBorderColor": {
    "prefix": "valueBorderColor",
    "description": "Description: Sets the border color around the value text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueBorderColor\": \"\""
  },
  "ValueAlpha": {
    "prefix": "valueAlpha",
    "description": "Description: Sets the value alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueAlpha\": \"\""
  },
  "ValueFontAlpha": {
    "prefix": "valueFontAlpha",
    "description": "Description: Sets the value font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueFontAlpha\": \"\""
  },
  "ValueBgAlpha": {
    "prefix": "valueBgAlpha",
    "description": "Description: Sets the value background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueBgAlpha\": \"\""
  },
  "ValueBorderAlpha": {
    "prefix": "valueBorderAlpha",
    "description": "Description: Sets the value border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueBorderAlpha\": \"\""
  },
  "ValueBorderThickness": {
    "prefix": "valueBorderThickness",
    "description": "Description: Sets the value border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderThickness\": \"\""
  },
  "ValueBorderPadding": {
    "prefix": "valueBorderPadding",
    "description": "Description: Sets the padding between the value and its surrounding border\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderPadding\": \"\""
  },
  "ValueBorderRadius": {
    "prefix": "valueBorderRadius",
    "description": "Description: Sets the value border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderRadius\": \"\""
  },
  "ValueBorderDashed": {
    "prefix": "valueBorderDashed",
    "description": "Description: Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueBorderDashed\": \"${1|1,0|}\""
  },
  "ValueBorderDashLen": {
    "prefix": "valueBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the data values is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"valueBorderDashLen\": \"\""
  },
  "ValueBorderDashGap": {
    "prefix": "valueBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"valueBorderDashGap\": \"\""
  },
  "BaseFont": {
    "prefix": "baseFont",
    "description": "Description: This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify outCnvBaseFont attribute also, then this attribute controls only the font face of text within the chart canvas bounds.\n      Type: String\n      Range: Font Name",
    "body": "\"baseFont\": \"\""
  },
  "BaseFontSize": {
    "prefix": "baseFontSize",
    "description": "Description: This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.\n      Type: Number\n",
    "body": "\"baseFontSize\": \"\""
  },
  "BaseFontColor": {
    "prefix": "baseFontColor",
    "description": "Description: This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"baseFontColor\": \"\""
  },
  "CaptionPadding": {
    "prefix": "captionPadding",
    "description": "Description: This attribute lets you control the horizontal space (in pixels) between the caption and left side of chart canvas.\n      Type: Number\n      Range: In pixels",
    "body": "\"captionPadding\": \"\""
  },
  "ValuePadding": {
    "prefix": "valuePadding",
    "description": "Description: Horizontal distance between the chart and value\n      Type: Number\n      Range: In pixels",
    "body": "\"valuePadding\": \"\""
  },
  "PlotSpacePercent": {
    "prefix": "plotSpacePercent",
    "description": "Description: This attribute defines the space between two columns. If you intend to increase or decrease the spacing between columns, you can do so using this attribute. For example, if you wanted all columns to stick to each other without any space in between, you can set plotSpacePercent to 0. Similarly, if you want very thin columns, you can set plotSpacePercent to its max value of 80.\n      Type: Number\n      Range: In percent",
    "body": "\"plotSpacePercent\": \"\""
  },
  "ChartLeftMargin": {
    "prefix": "chartLeftMargin",
    "description": "Description: Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In pixels",
    "body": "\"chartLeftMargin\": \"\""
  },
  "ChartRightMargin": {
    "prefix": "chartRightMargin",
    "description": "Description: Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In pixels",
    "body": "\"chartRightMargin\": \"\""
  },
  "ChartTopMargin": {
    "prefix": "chartTopMargin",
    "description": "Description: Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In pixels",
    "body": "\"chartTopMargin\": \"\""
  },
  "ChartBottomMargin": {
    "prefix": "chartBottomMargin",
    "description": "Description: Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In pixels",
    "body": "\"chartBottomMargin\": \"\""
  },
  "CanvasLeftMargin": {
    "prefix": "canvasLeftMargin",
    "description": "Description: Left margin of canvas. Canvas will start from that position.\n      Type: Number\n      Range: In pixels",
    "body": "\"canvasLeftMargin\": \"\""
  },
  "CanvasRightMargin": {
    "prefix": "canvasRightMargin",
    "description": "Description: Right margin of canvas. Canvas will end at that position.\n      Type: Number\n      Range: In pixels",
    "body": "\"canvasRightMargin\": \"\""
  },
  "Value": {
    "prefix": "value",
    "description": "Description: Value for the column. W indicates win, L indicates loss and D indicates draw.\n      Type: String\n      Range: 'W', 'L', or 'D'",
    "body": "\"value\": \"\""
  },
  "Scoreless": {
    "prefix": "scoreless",
    "description": "Description: Whether the match was scoreless? The column can then be colored using a different color.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"scoreless\": \"${1|1,0|}\""
  },
  "ShowZeroPlane": {
    "prefix": "showZeroPlane",
    "description": "Description: Whether to show the zero plane on chart (if negative values are present).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showZeroPlane\": \"${1|1,0|}\""
  },
  "ValuePosition": {
    "prefix": "valuePosition",
    "description": "Description: If you've opted to show data values on the chart, this attribute lets you adjust the vertical alignment of data values with respect to dataplots. By default, this attribute is set to AUTO mode in which the alignment of each data value is determined automatically based on the position of each plot point. In ABOVE mode, data values are displayed above the plot points unless a plot point is too close to the upper edge of the canvas while in BELOW mode, data values are displayed below the plot points unless a plot point is too close to the lower edge of the canvas.\n      Type: String\n      Range: &quot;ABOVE&quot;, &quot;BELOW&quot;, &quot;AUTO&quot;",
    "body": "\"valuePosition\": \"\""
  },
  "MinimizeTendency": {
    "prefix": "minimizeTendency",
    "description": "Description: This attribute, when set to __1__, draws splines with a low tendency factor. This is required when splines are used to connect multiple data points having the same value. While the traditional spline is perfect mathematically and by definition, the low tendency factor spline is not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"minimizeTendency\": \"${1|1,0|}\""
  },
  "DrawFullAreaBorder": {
    "prefix": "drawFullAreaBorder",
    "description": "Description: When set to `0`, instead of drawing a border for the entire chart canvas, this attribute will draw line on the canvas only to connect the data-points. \n\nDefault Value: __1__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawFullAreaBorder\": \"${1|1,0|}\""
  },
  "NumVDivLines": {
    "prefix": "numVDivLines",
    "description": "Description: Number of vertical axis division lines.\n      Type: Number\n      Range: Numeric value > 0",
    "body": "\"numVDivLines\": \"\""
  },
  "VDivLineColor": {
    "prefix": "vDivLineColor",
    "description": "Description: Color of vertical axis division lines.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vDivLineColor\": \"\""
  },
  "VDivLineThickness": {
    "prefix": "vDivLineThickness",
    "description": "Description: Thickness of vertical axis division lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"vDivLineThickness\": \"\""
  },
  "VDivLineAlpha": {
    "prefix": "vDivLineAlpha",
    "description": "Description: Alpha of vertical axis division lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vDivLineAlpha\": \"\""
  },
  "VDivLineDashed": {
    "prefix": "vDivLineDashed",
    "description": "Description: Whether the vertical divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (vertical divisional lines using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"vDivLineDashed\": \"${1|1,0|}\""
  },
  "VDivLineDashLen": {
    "prefix": "vDivLineDashLen",
    "description": "Description: Sets the width of each dash when vertical divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"vDivLineDashLen\": \"\""
  },
  "VDivLineDashGap": {
    "prefix": "vDivLineDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when vertical divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"vDivLineDashGap\": \"\""
  },
  "Stack100Percent": {
    "prefix": "stack100Percent",
    "description": "Description: Setting this attribute to 1 helps in depicting the values in percentage figures.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"stack100Percent\": \"${1|1,0|}\""
  },
  "ThmBulbRadius": {
    "prefix": "thmBulbRadius",
    "description": "Description: If you want to explicitly specify a radius for thermometer bulb, you can use this attribute. Else, FusionWidgets XT automatically calculates the best possible value.\n      Type: Number\n      Range: In pixels",
    "body": "\"thmBulbRadius\": \"\""
  },
  "ThmHeight": {
    "prefix": "thmHeight",
    "description": "Description: This attribute sets the height of the scale for the thermometer.\n      Type: Number\n      Range: In pixels",
    "body": "\"thmHeight\": \"\""
  },
  "Thmfillcolor": {
    "prefix": "thmfillcolor",
    "description": "Description: Sets the color of thermometer.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"thmfillcolor\": \"\""
  },
  "ThmGlassColor": {
    "prefix": "thmGlassColor",
    "description": "Description: Sets the color of thermometer’s glass.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"thmGlassColor\": \"\""
  },
  "ThmFillHoverColor": {
    "prefix": "thmFillHoverColor",
    "description": "Description: This attribute sets the thermometer fill color when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"thmFillHoverColor\": \"\""
  },
  "ThmFillHoverAlpha": {
    "prefix": "thmFillHoverAlpha",
    "description": "Description: This attribute sets the thermometer fill transparency  when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"thmFillHoverAlpha\": \"\""
  },
  "Algorithm": {
    "prefix": "algorithm",
    "description": "Description: Using this attribute, you can set the tiling algorithm for the treemap chart. \n\n__Default value__: squarified\n      Type: Enum\n      Range: `sliceanddice`, `squarified`",
    "body": "\"algorithm\": \"\""
  },
  "SlicingMode": {
    "prefix": "slicingMode",
    "description": "Description: If you opt to choose `sliceanddice` algorithm, using `slidingMode` you can set different views for your chart. \n\nDefault value : alternate\n      Type: String\n      Range: alternate, horizontal, vertical",
    "body": "\"slicingMode\": \"\""
  },
  "ShowParent": {
    "prefix": "showParent",
    "description": "Description: When this attribute is set to __0__, it hides the parent node and the available space is used up by the leaf nodes. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showParent\": \"${1|1,0|}\""
  },
  "ShowNavigationBar": {
    "prefix": "showNavigationBar",
    "description": "Description: Using this attribute you can set the navigation bar which will either show the traversed path and will provide an ability to switch to any parent node in a click or a basic navigation bar which will only display the parent node.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showNavigationBar\": \"${1|1,0|}\""
  },
  "ShowChildLabels": {
    "prefix": "showChildLabels",
    "description": "Description: This attribute sets whether the child node label will be shown or hidden. \n\n__Default value__: 0 (hidden)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showChildLabels\": \"${1|1,0|}\""
  },
  "MaxDepth": {
    "prefix": "maxDepth",
    "description": "Description: This attributes sets the level of the depth for the chart which will be displayed at any given point of time. \n\nDefault value : Maximum depth\n      Type: Integer\n      Range: 0 - nth level",
    "body": "\"maxDepth\": \"\""
  },
  "PlotHighlightEffect": {
    "prefix": "plotHighlightEffect",
    "description": "Description: This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`\n      Type: String\n",
    "body": "\"plotHighlightEffect\": \"\""
  },
  "CaptionAlignment": {
    "prefix": "captionAlignment",
    "description": "Description: Sets horizontal alignment of caption\n      Type: String\n      Range: \"left\", \"center\", \"right\"",
    "body": "\"captionAlignment\": \"\""
  },
  "CaptionOnTop": {
    "prefix": "captionOnTop",
    "description": "Description: Sets whether caption should be on top of the data plot area\n      Type: Boolean\n      Range: 0/1",
    "body": "\"captionOnTop\": \"${1|1,0|}\""
  },
  "BgImageValign": {
    "prefix": "bgImageValign",
    "description": "Description: Sets the vertical alignment of the background image.\n      Type: String\n      Range: left, center, right",
    "body": "\"bgImageValign\": \"\""
  },
  "BgImageHalign": {
    "prefix": "bgImageHalign",
    "description": "Description: Sets the horizontal alignment of the background image.\n      Type: String\n      Range: left, center, right",
    "body": "\"bgImageHalign\": \"\""
  },
  "DefaultParentBgColor": {
    "prefix": "defaultParentBgColor",
    "description": "Description: Sets the background color only for those nodes which are not leaf nodes. \n\n__Default value__: #E5E5E5\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"defaultParentBgColor\": \"\""
  },
  "HighlightParentsOnHover": {
    "prefix": "highlightParentsOnHover",
    "description": "Description: Groups all leaf nodes belonging to a parent node and visualizes them as masked units when hovered upon. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"highlightParentsOnHover\": \"${1|1,0|}\""
  },
  "BtnResetChartTooltext": {
    "prefix": "btnResetChartTooltext",
    "description": "Description: Sets the tooltip text rendered when the mouse pointer is hovered over the __Back to Top__ button, in the top-right corner of the chart. \n\n__Default value__: Back to Top\n      Type: String\n",
    "body": "\"btnResetChartTooltext\": \"\""
  },
  "BtnBackChartTooltext": {
    "prefix": "btnBackChartTooltext",
    "description": "Description: Sets the tooltip text rendered when the mouse pointer is hovered over the __Back to Parent__ button, in the top-right corner of the chart. \n\n__Default value__: Back to Parent\n      Type: String\n",
    "body": "\"btnBackChartTooltext\": \"\""
  },
  "FillColor": {
    "prefix": "fillColor",
    "description": "Description: Sets the fill color for individual rectangles\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"fillColor\": \"\""
  },
  "Fontcolor": {
    "prefix": "fontcolor",
    "description": "Description: Lets you specify font color for the texts of the rectangles in set label.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"fontcolor\": \"\""
  },
  "PlotBorderColor": {
    "prefix": "plotBorderColor",
    "description": "Description: Sets the border color for the node.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotBorderColor\": \"\""
  },
  "PlotBorderThickness": {
    "prefix": "plotBorderThickness",
    "description": "Description: Sets the border thickness for the node.\n      Type: Number\n      Range: 0-5",
    "body": "\"plotBorderThickness\": \"\""
  },
  "ParentLabelLineHeight": {
    "prefix": "parentLabelLineHeight",
    "description": "Description: Sets the line height, in pixels, for the parent node label. \n\n__Default value__: 12 \n      Type: Number\n      Range: 0 - 100",
    "body": "\"parentLabelLineHeight\": \"\""
  },
  "LabelGlow": {
    "prefix": "labelGlow",
    "description": "Description: Sets whether the glow effect will enabled for the node labels. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelGlow\": \"${1|1,0|}\""
  },
  "LabelGlowIntensity": {
    "prefix": "labelGlowIntensity",
    "description": "Description: Sets the intensity of the glow effect for the node labels. \n\n__Default value__: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelGlowIntensity\": \"\""
  },
  "LabelGlowColor": {
    "prefix": "labelGlowColor",
    "description": "Description: Sets the color of the glow effect for the node labels. \n\n__Default value__: #FFFFFF\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelGlowColor\": \"\""
  },
  "LabelGlowRadius": {
    "prefix": "labelGlowRadius",
    "description": "Description: Sets radius of the glow effect for the node labels. \n\n__Default value__: 2\n      Type: Number\n      Range: 0-10",
    "body": "\"labelGlowRadius\": \"\""
  },
  "LabelFontSize": {
    "prefix": "labelFontSize",
    "description": "Description: Sets the font size for the node labels.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"labelFontSize\": \"\""
  },
  "LabelFont": {
    "prefix": "labelFont",
    "description": "Description: Sets the font family for the node labels.\n      Type: String\n      Range: Font Names",
    "body": "\"labelFont\": \"\""
  },
  "LabelFontColor": {
    "prefix": "labelFontColor",
    "description": "Description: Sets the font color for all the node labels.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelFontColor\": \"\""
  },
  "LabelFontBold": {
    "prefix": "labelFontBold",
    "description": "Description: Sets whether the node labels will be bold formatted. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelFontBold\": \"${1|1,0|}\""
  },
  "LabelFontItalic": {
    "prefix": "labelFontItalic",
    "description": "Description: Sets whether the node labels will be formatted in italics. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelFontItalic\": \"${1|1,0|}\""
  },
  "LegendPadding": {
    "prefix": "legendPadding",
    "description": "Description: Padding of legend from right or bottom side of canvas\n      Type: Number\n      Range: In Pixels",
    "body": "\"legendPadding\": \"\""
  },
  "CanvasTopMargin": {
    "prefix": "canvasTopMargin",
    "description": "Description: Like `canvasLeftMargin`, lets you set the space between top of canvas and top of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasTopMargin\": \"\""
  },
  "CanvasBottomMargin": {
    "prefix": "canvasBottomMargin",
    "description": "Description: Like `canvasLeftMargin`, this attribute lets you set the space between bottom of canvas and bottom of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasBottomMargin\": \"\""
  },
  "HorizontalPadding": {
    "prefix": "horizontalPadding",
    "description": "Description: Lets you configure the horizontal padding (space) between the parent rectangle and the logical container where children get plotted. \n\n__Default value__: 5\n      Type: Number\n      Range: In Pixels",
    "body": "\"horizontalPadding\": \"\""
  },
  "VerticalPadding": {
    "prefix": "verticalPadding",
    "description": "Description: Lets you configure the vertical padding (space) between the parent rectangle and the logical container where children get plotted. \n\n__Default value__: 5\n      Type: Number\n      Range: In Pixels",
    "body": "\"verticalPadding\": \"\""
  },
  "ShowToolTip": {
    "prefix": "showToolTip",
    "description": "Description: Whether to show tool tip on chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolTip\": \"${1|1,0|}\""
  },
  "ToolTipBgColor": {
    "prefix": "toolTipBgColor",
    "description": "Description: Background color for the tool tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipBgColor\": \"\""
  },
  "ToolTipColor": {
    "prefix": "toolTipColor",
    "description": "Description: Font color for the tool-tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipColor\": \"\""
  },
  "ToolTipBorderColor": {
    "prefix": "toolTipBorderColor",
    "description": "Description: Border color for tool tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipBorderColor\": \"\""
  },
  "TooltipBorderAlpha": {
    "prefix": "tooltipBorderAlpha",
    "description": "Description: Sets the border transparency for tool tip.\n      Type: NUmber\n      Range: 0 - 100",
    "body": "\"tooltipBorderAlpha\": \"\""
  },
  "ToolTipSepChar": {
    "prefix": "toolTipSepChar",
    "description": "Description: The character specified as the value of this attribute separates the data label and data value displayed in the tool tip.\n      Type: String\n",
    "body": "\"toolTipSepChar\": \"\""
  },
  "Plottooltext": {
    "prefix": "plottooltext",
    "description": "Description: Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.\n      Type: String\n",
    "body": "\"plottooltext\": \"\""
  },
  "ReverseToolbarIcons": {
    "prefix": "reverseToolbarIcons",
    "description": "Description: You can reverse the order in which the toolbar icons are rendered using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"reverseToolbarIcons\": \"${1|1,0|}\""
  },
  "ShowLegend": {
    "prefix": "showLegend",
    "description": "Description: Sets whether to show legend on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLegend\": \"${1|1,0|}\""
  },
  "LegendItemFontBold": {
    "prefix": "legendItemFontBold",
    "description": "Description: Sets whether legend keys should be bold formatted.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"legendItemFontBold\": \"${1|1,0|}\""
  },
  "LegendItemFont": {
    "prefix": "legendItemFont",
    "description": "Description: Sets the legend item font\n      Type: String\n      Range: Font Name",
    "body": "\"legendItemFont\": \"\""
  },
  "LegendItemFontSize": {
    "prefix": "legendItemFontSize",
    "description": "Description: Sets the legend item font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"legendItemFontSize\": \"\""
  },
  "LegendItemFontColor": {
    "prefix": "legendItemFontColor",
    "description": "Description: Sets the legend item font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendItemFontColor\": \"\""
  },
  "LegendCaption": {
    "prefix": "legendCaption",
    "description": "Description: Enables to set a caption for the entire legend\n      Type: String\n      Range:  ",
    "body": "\"legendCaption\": \"\""
  },
  "LegendCaptionAlignment": {
    "prefix": "legendCaptionAlignment",
    "description": "Description: Sets the legend caption horizontal alignment .\n      Type: String\n      Range: \"left\", \"center\", \"right\"",
    "body": "\"legendCaptionAlignment\": \"\""
  },
  "LegendCaptionFontBold": {
    "prefix": "legendCaptionFontBold",
    "description": "Description: Sets whether legend caption should be bold formatted\n      Type: Boolean\n      Range: 0/1",
    "body": "\"legendCaptionFontBold\": \"${1|1,0|}\""
  },
  "LegendCaptionFont": {
    "prefix": "legendCaptionFont",
    "description": "Description: Sets the legend caption font\n      Type: String\n      Range: Font Name",
    "body": "\"legendCaptionFont\": \"\""
  },
  "LegendCaptionFontSize": {
    "prefix": "legendCaptionFontSize",
    "description": "Description: Sets the legend caption font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"legendCaptionFontSize\": \"\""
  },
  "LegendCaptionFontColor": {
    "prefix": "legendCaptionFontColor",
    "description": "Description: Sets the legend caption font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendCaptionFontColor\": \"\""
  },
  "LegendPosition": {
    "prefix": "legendPosition",
    "description": "Description: Sets the legend position on the chart. The legend can be plotted at two positions on the chart - below (__BOTTOM__) the chart and to the right (__RIGHT__) of the chart.\n      Type: String\n      Range: BOTTOM or RIGHT",
    "body": "\"legendPosition\": \"\""
  },
  "LegendBgColor": {
    "prefix": "legendBgColor",
    "description": "Description: Sets the legend background color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendBgColor\": \"\""
  },
  "LegendBgAlpha": {
    "prefix": "legendBgAlpha",
    "description": "Description: Sets the legend background transparency.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendBgAlpha\": \"\""
  },
  "LegendBorderColor": {
    "prefix": "legendBorderColor",
    "description": "Description: Sets the legend border color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendBorderColor\": \"\""
  },
  "LegendBorderThickness": {
    "prefix": "legendBorderThickness",
    "description": "Description: Sets the legend border thickness.\n      Type: Number\n      Range: In Pixels",
    "body": "\"legendBorderThickness\": \"\""
  },
  "LegendBorderAlpha": {
    "prefix": "legendBorderAlpha",
    "description": "Description: Sets the legend border's transparency.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendBorderAlpha\": \"\""
  },
  "LegendShadow": {
    "prefix": "legendShadow",
    "description": "Description: Sets whether to show a shadow for legend.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"legendShadow\": \"${1|1,0|}\""
  },
  "LegendAllowDrag": {
    "prefix": "legendAllowDrag",
    "description": "Description: Sets whether the legend will be drag-able. If set to __1__, end viewers of the chart can drag the legend around on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"legendAllowDrag\": \"${1|1,0|}\""
  },
  "LegendScaleLineColor": {
    "prefix": "legendScaleLineColor",
    "description": "Description: Sets the color of the gradient legend scale.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendScaleLineColor\": \"\""
  },
  "LegendScaleLineAlpha": {
    "prefix": "legendScaleLineAlpha",
    "description": "Description: Sets the transparency of the gradient legend scale.\n      Type: NUmber\n      Range: 0 - 100",
    "body": "\"legendScaleLineAlpha\": \"\""
  },
  "LegendScaleLineThickness": {
    "prefix": "legendScaleLineThickness",
    "description": "Description: Sets the thickness of the gradient legend scale.\n      Type: Number\n      Range: 0-5",
    "body": "\"legendScaleLineThickness\": \"\""
  },
  "Legendaxisbordercolor": {
    "prefix": "legendaxisbordercolor",
    "description": "Description: Sets color for the gradient legend's axis border.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"legendaxisbordercolor\": \"\""
  },
  "Legendaxisborderalpha": {
    "prefix": "legendaxisborderalpha",
    "description": "Description: Sets transparency for the gradient legend's axis border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"legendaxisborderalpha\": \"\""
  },
  "OutCnvBaseFont": {
    "prefix": "outCnvBaseFont",
    "description": "Description: Sets the base font family for all the text that lies outside the chart canvas.\n      Type: String\n      Range: Font Name",
    "body": "\"outCnvBaseFont\": \"\""
  },
  "OutCnvBaseFontSize": {
    "prefix": "outCnvBaseFontSize",
    "description": "Description: Sets the base font size for all the text that lies outside the chart canvas.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"outCnvBaseFontSize\": \"\""
  },
  "OutCnvBaseFontColor": {
    "prefix": "outCnvBaseFontColor",
    "description": "Description: Sets the base font color for all the text that lies outside the chart canvas..\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"outCnvBaseFontColor\": \"\""
  },
  "Label": {
    "prefix": "label",
    "description": "Description: Sets the label for a node. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.\n      Type: String\n",
    "body": "\"label\": \"\""
  },
  "SValue": {
    "prefix": "sValue",
    "description": "Description: Sets the secondary value and maps the color of the rectangle (node).\n      Type: Number\n",
    "body": "\"sValue\": \"\""
  },
  "Fillcolor": {
    "prefix": "fillcolor",
    "description": "Description: Sets the fill color for a node\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"fillcolor\": \"\""
  },
  "FontColor": {
    "prefix": "fontColor",
    "description": "Description: Sets the font color for a node label\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"fontColor\": \"\""
  },
  "StartLabel": {
    "prefix": "startLabel",
    "description": "Description: Sets the lower limit label for the gradient scale.\n      Type: String\n",
    "body": "\"startLabel\": \"\""
  },
  "EndLabel": {
    "prefix": "endLabel",
    "description": "Description: Sets the upper limit label for the gradient scale.\n      Type: String\n",
    "body": "\"endLabel\": \"\""
  },
  "Gradient": {
    "prefix": "gradient",
    "description": "Description: Sets whether the gradient legend will be displayed.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"gradient\": \"${1|1,0|}\""
  },
  "MapByPercent": {
    "prefix": "mapByPercent",
    "description": "Description: Sets whether the data values will be rendered in percentage.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"mapByPercent\": \"${1|1,0|}\""
  },
  "MinValue": {
    "prefix": "minValue",
    "description": "Description: Sets the minimum value or the lower limit of the numeric range and the gradient scale.\n      Type: Number\n",
    "body": "\"minValue\": \"\""
  },
  "Code": {
    "prefix": "code",
    "description": "Description: Sets the color for a numeric range.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"code\": \"\""
  },
  "MaxValue": {
    "prefix": "maxValue",
    "description": "Description: Sets the upper limit of a numeric range.\n      Type: Number\n",
    "body": "\"maxValue\": \"\""
  },
  "Showhovereffect": {
    "prefix": "showhovereffect",
    "description": "Description: Using this attribute you can set the hover effect of the bullet. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showhovereffect\": \"${1|1,0|}\""
  },
  "ShowSumAtEnd": {
    "prefix": "showSumAtEnd",
    "description": "Description: Whether to add a summation column as the last column in chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showSumAtEnd\": \"${1|1,0|}\""
  },
  "SumLabel": {
    "prefix": "sumLabel",
    "description": "Description: If you have opted to add a summation column as the last column of chart, this attribute lets you set the label for the same.\n      Type: String\n      Range:  ",
    "body": "\"sumLabel\": \"\""
  },
  "PositiveColor": {
    "prefix": "positiveColor",
    "description": "Description: If you want all the positive columns (including in-data sum columns) on the chart to show in a single color, specify the same here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"positiveColor\": \"\""
  },
  "NegativeColor": {
    "prefix": "negativeColor",
    "description": "Description: If you want all the negative columns (including in-data sum columns) on the chart to show in a single color, specify the same here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"negativeColor\": \"\""
  },
  "ShowConnectors": {
    "prefix": "showConnectors",
    "description": "Description: Whether to show the connector lines which connect two subsequent columns.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showConnectors\": \"${1|1,0|}\""
  },
  "ConnectorColor": {
    "prefix": "connectorColor",
    "description": "Description: Color of the connector line.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"connectorColor\": \"\""
  },
  "ConnectorAlpha": {
    "prefix": "connectorAlpha",
    "description": "Description: Alpha of the connector line.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"connectorAlpha\": \"\""
  },
  "ConnectorThickness": {
    "prefix": "connectorThickness",
    "description": "Description: Thickness of the connector line.\n      Type: Number\n      Range: In pixels",
    "body": "\"connectorThickness\": \"\""
  },
  "ConnectorDashed": {
    "prefix": "connectorDashed",
    "description": "Description: Whether the connector line should be rendered as dashed lines. \n\n__Default value__: 0 (connector line rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"connectorDashed\": \"${1|1,0|}\""
  },
  "ConnectorDashLen": {
    "prefix": "connectorDashLen",
    "description": "Description: Sets the length of each dash when connector line is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"connectorDashLen\": \"\""
  },
  "ConnectorDashGap": {
    "prefix": "connectorDashGap",
    "description": "Description: Sets the gap between consecutive dashes when connector line is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"connectorDashGap\": \"\""
  },
  "PositiveHoverColor": {
    "prefix": "positiveHoverColor",
    "description": "Description: Sets color for the positive value plots when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"positiveHoverColor\": \"\""
  },
  "NegativeHoverColor": {
    "prefix": "negativeHoverColor",
    "description": "Description: Sets color for the negative value plots when hovered.\n      Type: Color\n      Range: Hex color code",
    "body": "\"negativeHoverColor\": \"\""
  },
  "IsSum": {
    "prefix": "isSum",
    "description": "Description: Whether the set value should represent the sum of previous set values in the water fall chart. You can put a sum column at any position in the chart (barring the first position, as you need at least one data point to calculate sum).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isSum\": \"${1|1,0|}\""
  },
  "Cumulative": {
    "prefix": "cumulative",
    "description": "Description: Whether the sum represents the cumulative sum (of all the columns to the left of this sum column) or non-cumulative sum (of all the columns to the left of this column, but after the last sum column).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"cumulative\": \"${1|1,0|}\""
  },
  "ShowTerminalValidData": {
    "prefix": "showTerminalValidData",
    "description": "Description: In Zoomline charts, to display the data at the initial level, data are compressed. Initial level fails to display the first and last data from the data set provided. This attribute if set to `1`, displays the first and last valid data even if the value arises between the broken data set.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTerminalValidData\": \"${1|1,0|}\""
  },
  "Pixelsperlabel": {
    "prefix": "pixelsperlabel",
    "description": "Description: Sets the distance between the labels of the x-axis.\n      Type: Number\n      Range: In Pixels",
    "body": "\"pixelsperlabel\": \"\""
  },
  "CompactDataMode": {
    "prefix": "compactDataMode",
    "description": "Description: Indicates whether the XML is in compact form or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"compactDataMode\": \"${1|1,0|}\""
  },
  "DataSeparator": {
    "prefix": "dataSeparator",
    "description": "Description: Specifies the separation character used in compact XML.\n      Type: Character\n      Range: Any character",
    "body": "\"dataSeparator\": \"\""
  },
  "AllowPinMode": {
    "prefix": "allowPinMode",
    "description": "Description: Used for enabling/disabling the pin mode feature, which is active by default.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"allowPinMode\": \"${1|1,0|}\""
  },
  "NumVisibleLabels": {
    "prefix": "numVisibleLabels",
    "description": "Description: Specifies the number of data labels that are to be visible in one screen. As this attribute imposes the equispace constraint, values greater than 5 and less than 10 (if total data plots __=__ 10) will not be applicable due to violation of this constraint.\n      Type: Number\n      Range: Any number",
    "body": "\"numVisibleLabels\": \"\""
  },
  "DisplayStartIndex": {
    "prefix": "displayStartIndex",
    "description": "Description: Indicates the index of the data label that will appear to the extreme left of the chart.\n      Type: Number\n      Range: Any number > 1",
    "body": "\"displayStartIndex\": \"\""
  },
  "DisplayEndIndex": {
    "prefix": "displayEndIndex",
    "description": "Description: Indicates the index of the data label that is to appear at the extreme right of the chart. Using `displayStartIndex` and `displayEndIndex` attributes you can set the range of data labels that'll be visible when the chart first renders.\n      Type: Number\n      Range: Any Number > 1",
    "body": "\"displayEndIndex\": \"\""
  },
  "PixelsPerPoint": {
    "prefix": "pixelsPerPoint",
    "description": "Description: Specifies the number of pixels to be used for producing a data point. A greater number will result in high quality display.\n      Type: Number\n      Range: Any number",
    "body": "\"pixelsPerPoint\": \"\""
  },
  "ShowXAxisLine": {
    "prefix": "showXAxisLine",
    "description": "Description: This attribute if set to _0_, hides the x-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showXAxisLine\": \"${1|1,0|}\""
  },
  "Xaxislinethickness": {
    "prefix": "xaxislinethickness",
    "description": "Description: Sets the thickness of the x-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"xaxislinethickness\": \"\""
  },
  "ShowYAxisLine": {
    "prefix": "showYAxisLine",
    "description": "Description: This attribute if set to _0_, hides the y-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYAxisLine\": \"${1|1,0|}\""
  },
  "YAxisLineColor": {
    "prefix": "yAxisLineColor",
    "description": "Description: Sets color of the y-axis of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisLineColor\": \"\""
  },
  "YAxisLineThickness": {
    "prefix": "yAxisLineThickness",
    "description": "Description: Sets the thickness of the y-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisLineThickness\": \"\""
  },
  "Showcanvasborder": {
    "prefix": "showcanvasborder",
    "description": "Description: This attribute if set to _1_, shows a border around the canvas of the chart. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showcanvasborder\": \"${1|1,0|}\""
  },
  "ZoomPaneBorderColor": {
    "prefix": "zoomPaneBorderColor",
    "description": "Description: Sets the color of the zoom pane border.\n      Type: Color\n      Range: Any (color code without the # prefix)",
    "body": "\"zoomPaneBorderColor\": \"\""
  },
  "ZoomPaneBgColor": {
    "prefix": "zoomPaneBgColor",
    "description": "Description: Sets the background color of the zoom pane.\n      Type: Color\n      Range: Any (color code without the # prefix)",
    "body": "\"zoomPaneBgColor\": \"\""
  },
  "ZoomPaneBgAlpha": {
    "prefix": "zoomPaneBgAlpha",
    "description": "Description: Sets the alpha of the zoom pane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"zoomPaneBgAlpha\": \"\""
  },
  "PinLineThicknessDelta": {
    "prefix": "pinLineThicknessDelta",
    "description": "Description: Sets the thickness of the pinned line when the chart is put to pin line mode.\n      Type: Number\n      Range: Any number",
    "body": "\"pinLineThicknessDelta\": \"\""
  },
  "PinPaneBgColor": {
    "prefix": "pinPaneBgColor",
    "description": "Description: Sets the background color of the pin pane.\n      Type: Color\n      Range: Any (color code without the # prefix)",
    "body": "\"pinPaneBgColor\": \"\""
  },
  "PinPaneBgAlpha": {
    "prefix": "pinPaneBgAlpha",
    "description": "Description: Sets the alpha of the pin pane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"pinPaneBgAlpha\": \"\""
  },
  "BtnSwitchToPinModeTooltext": {
    "prefix": "btnSwitchToPinModeTooltext",
    "description": "Description: Replaces the default tooltext of 'Switch to Pin Mode' button with provided string.\n      Type: String\n      Range: Any string.",
    "body": "\"btnSwitchToPinModeTooltext\": \"\""
  },
  "ShowPeakData": {
    "prefix": "showPeakData",
    "description": "Description: Specifies whether peak data will be shown. \n\nDefault value: 0 (disabled)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPeakData\": \"${1|1,0|}\""
  },
  "MaxPeakDataLimit": {
    "prefix": "maxPeakDataLimit",
    "description": "Description: Defines the upper limit for peak data. Any value greater than this value will be considered peak data. If the value of `minPeakDataLimit` attribute is set more than `maxPeakDataLimit` attribute, the values between the range will be considered as peak data.\n      Type: Number\n",
    "body": "\"maxPeakDataLimit\": \"\""
  },
  "MinPeakDataLimit": {
    "prefix": "minPeakDataLimit",
    "description": "Description: Defines the lower limit for peak data. Any value lower than this value will be considered peak data. If the value of `maxPeakDataLimit` attribute is set less than `minPeakDataLimit` attribute, the values between the range will be considered as peak data.\n      Type: Number\n",
    "body": "\"minPeakDataLimit\": \"\""
  },
  "ScrollColor": {
    "prefix": "scrollColor",
    "description": "Description: Color for scroll bar.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"scrollColor\": \"\""
  },
  "Flatscrollbars": {
    "prefix": "flatscrollbars",
    "description": "Description: This attribute can be used to set the scroll bar to flat or the basic one. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"flatscrollbars\": \"${1|1,0|}\""
  },
  "ScrollHeight": {
    "prefix": "scrollHeight",
    "description": "Description: Required height for scroll bar.\n      Type: Number\n      Range: In Pixels",
    "body": "\"scrollHeight\": \"\""
  },
  "Scrollshowbuttons": {
    "prefix": "scrollshowbuttons",
    "description": "Description: Sets whether to show the left and right scroll button.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"scrollshowbuttons\": \"${1|1,0|}\""
  },
  "AnchorMinRenderDistance": {
    "prefix": "anchorMinRenderDistance",
    "description": "Description: This attribute is used for specifying the minimum distance (between dataplots) for the anchors to become visible.\n      Type: Number\n      Range:  ",
    "body": "\"anchorMinRenderDistance\": \"\""
  },
  "ShowAlternateHGridColor": {
    "prefix": "showAlternateHGridColor",
    "description": "Description: Whether to show alternate colored horizontal grid bands.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAlternateHGridColor\": \"${1|1,0|}\""
  },
  "AlternateHGridColor": {
    "prefix": "alternateHGridColor",
    "description": "Description: Color of the alternate horizontal grid bands.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"alternateHGridColor\": \"\""
  },
  "AlternateHGridAlpha": {
    "prefix": "alternateHGridAlpha",
    "description": "Description: Alpha (transparency) of the alternate horizontal grid bands.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"alternateHGridAlpha\": \"\""
  },
  "UseCrossLine": {
    "prefix": "useCrossLine",
    "description": "Description: There are two ways of displaying tool-tips in a zoomline chart. One is to use a cross-line, which is a vertical line that displays data values for all series on that data point. The other way is to use traditional tool-tips that display values on a data point when hovered upon. Default value is 1 which uses cross-line. Set this attribute value to 0 to use traditional tool-tips.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useCrossLine\": \"${1|1,0|}\""
  },
  "CrossLineThickness": {
    "prefix": "crossLineThickness",
    "description": "Description: If you've opted to show the tool-tips using cross-line, this attribute lets you define the thickness of cross-line.\n      Type: Number\n      Range: In Pixels",
    "body": "\"crossLineThickness\": \"\""
  },
  "CrossLineColor": {
    "prefix": "crossLineColor",
    "description": "Description: If you've opted to show the tool-tips using cross-line, this attribute lets you define the color of cross-line.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"crossLineColor\": \"\""
  },
  "CrossLineAlpha": {
    "prefix": "crossLineAlpha",
    "description": "Description: If you've opted to show the tool-tips using cross-line, this attribute lets you define the transparency of cross-line.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"crossLineAlpha\": \"\""
  },
  "CrossLineLabelSize": {
    "prefix": "crossLineLabelSize",
    "description": "Description: This attribute lets you define the label font size of cross-line.\n      Type: Number\n      Range: In Pixels",
    "body": "\"crossLineLabelSize\": \"\""
  },
  "CrossLineLabelFont": {
    "prefix": "crossLineLabelFont",
    "description": "Description: This attribute lets you define the label font of cross-line.\n      Type: String\n      Range: Font Name",
    "body": "\"crossLineLabelFont\": \"\""
  },
  "CrossLineValueSize": {
    "prefix": "crossLineValueSize",
    "description": "Description: This attribute lets you define the font size of values getting displayed using cross-line.\n      Type: Number\n      Range: In Pixels",
    "body": "\"crossLineValueSize\": \"\""
  },
  "CrossLineValueFont": {
    "prefix": "crossLineValueFont",
    "description": "Description: This attribute lets you define the font of values getting displayed using cross-line.\n      Type: String\n      Range: Font Name",
    "body": "\"crossLineValueFont\": \"\""
  },
  "CanvasPadding": {
    "prefix": "canvasPadding",
    "description": "Description: Lets you set the space between the canvas border and first & last data points\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasPadding\": \"\""
  },
  "SetAdaptiveSYMin": {
    "prefix": "setAdaptiveSYMin",
    "description": "Description: This attribute lets you set whether the secondary y-axis lower limit will be 0 (in case of all positive values on chart) or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"setAdaptiveSYMin\": \"${1|1,0|}\""
  },
  "SYAxisMinValue": {
    "prefix": "sYAxisMinValue",
    "description": "Description: This attribute helps you explicitly set the lower limit of the secondary y-axis. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.\n      Type: Number\n",
    "body": "\"sYAxisMinValue\": \"\""
  },
  "SYAxisMaxValue": {
    "prefix": "sYAxisMaxValue",
    "description": "Description: This attribute helps you explicitly set the upper limit of the secondary y-axis. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.\n      Type: Number\n",
    "body": "\"sYAxisMaxValue\": \"\""
  },
  "ForceSYAxisValueDecimals": {
    "prefix": "forceSYAxisValueDecimals",
    "description": "Description: Whether to force decimal places for y-axis values on secondary y-axis?\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceSYAxisValueDecimals\": \"${1|1,0|}\""
  },
  "SFormatNumber": {
    "prefix": "sFormatNumber",
    "description": "Description: This configuration determines whether the numbers belonging to secondary axis will be formatted using commas, e.g., 40,000 if 'sFormatNumber': '1'; and 40000 if 'sFormatNumber': '0';\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sFormatNumber\": \"${1|1,0|}\""
  },
  "SFormatNumberScale": {
    "prefix": "sFormatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number belonging to secondary axis after truncating and rounding it - e.g., if `sFormatNumberScale` is set to 1, 10434 will become 1.04K (with decimalPrecision set to 2 places). Same with numbers in millions - an M will be added at the end.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sFormatNumberScale\": \"${1|1,0|}\""
  },
  "SDefaultNumberScale": {
    "prefix": "sDefaultNumberScale",
    "description": "Description: The default unit of the numbers belonging to secondary axis.\n      Type: String\n",
    "body": "\"sDefaultNumberScale\": \"\""
  },
  "SNumberScaleUnit": {
    "prefix": "sNumberScaleUnit",
    "description": "Description: Unit of each block of the scale of secondary y-axis.\n      Type: String\n",
    "body": "\"sNumberScaleUnit\": \"\""
  },
  "SNumberScaleValue": {
    "prefix": "sNumberScaleValue",
    "description": "Description: Range of the various blocks that constitute the scale for secondary y-axis.\n      Type: String\n",
    "body": "\"sNumberScaleValue\": \"\""
  },
  "SForceNumberScale": {
    "prefix": "sForceNumberScale",
    "description": "Description: If a data value, to be plotted on the secondary y-axis, is less than the lowest given number is the number scale, this attribute forces the lower value of the  `sNumberScaleUnit` to be applied to that data value.  This attribute works only when `“sFormatNumberScale”: “1”` and the `sDefaultNumberScale` attribute is not defined. \n\nFor example, if `“sNumberScaleUnit”: “K, M”`, `“sNumberScaleValue”: “1000, 1000”`, and `“sForceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sForceNumberScale\": \"${1|1,0|}\""
  },
  "SScaleRecursively": {
    "prefix": "sScaleRecursively",
    "description": "Description: To scale the numbers recursively only for the secondary y-axis you need to set this attribute to '1'.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"sScaleRecursively\": \"${1|1,0|}\""
  },
  "SMaxScaleRecursion": {
    "prefix": "sMaxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling for the numbers of the secondary y-axis? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"sMaxScaleRecursion\": \"\""
  },
  "SScaleSeparator": {
    "prefix": "sScaleSeparator",
    "description": "Description: What character to use to separate the scales that are generated after recursion of the secondary y-axis?\n      Type: String\n",
    "body": "\"sScaleSeparator\": \"\""
  },
  "SNumberPrefix": {
    "prefix": "sNumberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers belonging to secondary axis.\n      Type: String\n      Range: Character",
    "body": "\"sNumberPrefix\": \"\""
  },
  "SNumberSuffix": {
    "prefix": "sNumberSuffix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers belonging to secondary axis.\n      Type: String\n      Range: Character",
    "body": "\"sNumberSuffix\": \"\""
  },
  "SDecimals": {
    "prefix": "sDecimals",
    "description": "Description: Number of decimal places to which all numbers belonging to secondary axis will be rounded to.\n      Type: Number\n      Range: 0-10",
    "body": "\"sDecimals\": \"\""
  },
  "Category": {
    "prefix": "category",
    "description": "Description: Lets you set the data labels that will be rendered along the x-axis\n      Type: String\n",
    "body": "\"category\": \"\""
  },
  "Data": {
    "prefix": "data",
    "description": "Description: Sets the data values for a dataset. Data values are separated using the character specified in the `dataSeparator` attribute.\n      Type: Number\n",
    "body": "\"data\": \"\""
  },
  "ShowVLimits": {
    "prefix": "showVLimits",
    "description": "Description: Whether to show chart limit values of the x-axis. If not specified `showXAxisValues` attribute overrides this value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVLimits\": \"${1|1,0|}\""
  },
  "ShowVDivLineValues": {
    "prefix": "showVDivLineValues",
    "description": "Description: Whether to show vertical div line values. If not specified `showXAxisValues` attribute overrides this value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVDivLineValues\": \"${1|1,0|}\""
  },
  "AdjustVDiv": {
    "prefix": "adjustVDiv",
    "description": "Description: FusionCharts XT automatically tries to adjust divisional lines and limit values of the x-axis based on the data provided. However, if you want to set your explicit lower and upper limit values and number of divisional lines for the x-axis, first set this attribute to false. That will disable automatic adjustment of divisional lines.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"adjustVDiv\": \"${1|1,0|}\""
  },
  "SetAdaptiveXMin": {
    "prefix": "setAdaptiveXMin",
    "description": "Description: This attribute lets you set whether the x-axis lower limit will be 0 (in case of all positive values on chart) or should the x-axis lower limit adapt itself to a different figure based on values provided to the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"setAdaptiveXMin\": \"${1|1,0|}\""
  },
  "ShowRegressionLine": {
    "prefix": "showRegressionLine",
    "description": "Description: This attribute when set to '1' draws regression lines for all the datasets in the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showRegressionLine\": \"${1|1,0|}\""
  },
  "ShowYOnX": {
    "prefix": "showYOnX",
    "description": "Description: When it is set to '1' the regression lines are drawn using Y On X mode and when the attribute is set to '0' the regression lines are drawn using X On Y mode. By default, this attribute is set to '1'.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYOnX\": \"${1|1,0|}\""
  },
  "RegressionLineColor": {
    "prefix": "regressionLineColor",
    "description": "Description: This attribute allows you to set the color of all the regression lines in a chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"regressionLineColor\": \"\""
  },
  "RegressionLineThickness": {
    "prefix": "regressionLineThickness",
    "description": "Description: This attribute allows you to set the thickness of all the regression lines in a chart.\n      Type: Number\n      Range:  ",
    "body": "\"regressionLineThickness\": \"\""
  },
  "RegressionLineAlpha": {
    "prefix": "regressionLineAlpha",
    "description": "Description: This attribute allows you to set the transparency of all the regression lines in a chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"regressionLineAlpha\": \"\""
  },
  "DrawLines": {
    "prefix": "drawLines",
    "description": "Description: You can opt to connect the scatter points using lines. This attribute helps you configure that.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawLines\": \"${1|1,0|}\""
  },
  "MaxZoomLimit": {
    "prefix": "maxZoomLimit",
    "description": "Description: Sets the maximum zoom limit. For example, you set this attribute to __50__, the user can zoom only up to 100 times of the original view. \n\n__Default value__: 1000\n      Type: Number\n      Range: 1-1000",
    "body": "\"maxZoomLimit\": \"\""
  },
  "StaticRadius": {
    "prefix": "staticRadius",
    "description": "Description: Sets the radius of the plots to static over any zoom level. i.e. if we set `staticRadius` = `0`, then even if we zoom the chart for number of times the radius of the data plot remains the same. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"staticRadius\": \"${1|1,0|}\""
  },
  "ShowXAxisValues": {
    "prefix": "showXAxisValues",
    "description": "Description: FusionCharts XT x-axis is divided into horizontal sections using div (divisional) lines. Each div line assumes a value based on its position. Using this attribute you can set whether to show those div line (x-axis) values or not. This attribute shows or hides the x-axis divisional lines and limits. When specified the values of `showVLimits` and `showVDivLineValues` overrides the value of this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showXAxisValues\": \"${1|1,0|}\""
  },
  "XAxisValuesStep": {
    "prefix": "xAxisValuesStep",
    "description": "Description: By default, all div lines show their values. However, you can opt to display every x(th) div line value using this attribute.\n      Type: Number\n      Range: 1 or above",
    "body": "\"xAxisValuesStep\": \"\""
  },
  "XAxisLabelMode": {
    "prefix": "xAxisLabelMode",
    "description": "Description: This attribute is used to render the x-axis labels in three different modes. The modes are as following: AUTO - Allows the x-axis labels to inherit the properties of y-axis (numeric calculations), ignoring the properties of the `categories` object if present in the data. CATEGORIES - This mode is the default mode of `xAxisLabelMode`. It allows the chart to show the properties of the `categories` object on the x-axis labels. MIXED - Allows the chart to show both the properties of y-axis (numeric calculations) and `categories` object on the x-axis simultaneously.\n      Type: String\n      Range: AUTO \nCATEGORIES\nMIXED",
    "body": "\"xAxisLabelMode\": \"\""
  },
  "Showyaxisline": {
    "prefix": "showyaxisline",
    "description": "Description: This attribute if set to _0_, hides the y-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showyaxisline\": \"${1|1,0|}\""
  },
  "Yaxislinecolor": {
    "prefix": "yaxislinecolor",
    "description": "Description: Sets color of the y-axis of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yaxislinecolor\": \"\""
  },
  "Yaxislinethickness": {
    "prefix": "yaxislinethickness",
    "description": "Description: Sets the thickness of the y-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yaxislinethickness\": \"\""
  },
  "ForceXAxisValueDecimals": {
    "prefix": "forceXAxisValueDecimals",
    "description": "Description: Whether to forcefully attach decimal places to all x-axis values. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all x-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all x-axis numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceXAxisValueDecimals\": \"${1|1,0|}\""
  },
  "XAxisValueDecimals": {
    "prefix": "xAxisValueDecimals",
    "description": "Description: If you've opted not to adjust vertical div lines, you can specify the decimal precision of the div line values using this attribute.\n      Type: Number\n      Range: 0-10",
    "body": "\"xAxisValueDecimals\": \"\""
  },
  "DrawQuadrant": {
    "prefix": "drawQuadrant",
    "description": "Description: Whether to draw quadrants on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawQuadrant\": \"${1|1,0|}\""
  },
  "QuadrantXVal": {
    "prefix": "quadrantXVal",
    "description": "Description: This attribute lets you set the position of the vertical quadrant line.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"quadrantXVal\": \"\""
  },
  "QuadrantYVal": {
    "prefix": "quadrantYVal",
    "description": "Description: This attribute lets you set the position of the horizontal quadrant line.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"quadrantYVal\": \"\""
  },
  "QuadrantLineColor": {
    "prefix": "quadrantLineColor",
    "description": "Description: Lets you set the color of the quadrant lines.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"quadrantLineColor\": \"\""
  },
  "QuadrantLineThickness": {
    "prefix": "quadrantLineThickness",
    "description": "Description: Lets you set the thickness of the quadrant lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"quadrantLineThickness\": \"\""
  },
  "QuadrantLineAlpha": {
    "prefix": "quadrantLineAlpha",
    "description": "Description: Lets you control the transparency of the quadrant lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLineAlpha\": \"\""
  },
  "QuadrantLineDashed": {
    "prefix": "quadrantLineDashed",
    "description": "Description: Whether the quadrant line should be rendered as dashed lines. \n\n__Default value__: 0 (quadrant line rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLineDashed\": \"${1|1,0|}\""
  },
  "QuadrantLineDashLen": {
    "prefix": "quadrantLineDashLen",
    "description": "Description: Sets the length of each dash when quadrant line is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLineDashLen\": \"\""
  },
  "QuadrantLineDashGap": {
    "prefix": "quadrantLineDashGap",
    "description": "Description: Sets the gap between consecutive dashes when quadrant line is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLineDashGap\": \"\""
  },
  "QuadrantLabelTL": {
    "prefix": "quadrantLabelTL",
    "description": "Description: This attribute lets you specify the label text of the top-left quadrant.\n      Type: String\n",
    "body": "\"quadrantLabelTL\": \"\""
  },
  "QuadrantLabelTR": {
    "prefix": "quadrantLabelTR",
    "description": "Description: This attribute lets you specify the label text of the top-right quadrant.\n      Type: String\n",
    "body": "\"quadrantLabelTR\": \"\""
  },
  "QuadrantLabelBL": {
    "prefix": "quadrantLabelBL",
    "description": "Description: This attribute lets you specify the label text of the bottom-left quadrant.\n      Type: String\n",
    "body": "\"quadrantLabelBL\": \"\""
  },
  "QuadrantLabelBR": {
    "prefix": "quadrantLabelBR",
    "description": "Description: This attribute lets you specify the label text of the bottom-right quadrant.\n      Type: String\n",
    "body": "\"quadrantLabelBR\": \"\""
  },
  "QuadrantLabelFont": {
    "prefix": "quadrantLabelFont",
    "description": "Description: This attribute lets you set the font for all quadrant labels. \n\nDefault value: Base font\n      Type: String\n      Range: Font Name",
    "body": "\"quadrantLabelFont\": \"\""
  },
  "QuadrantLabelTLFont": {
    "prefix": "quadrantLabelTLFont",
    "description": "Description: This attribute lets you set the font for the top-left quadrant label. \n\nDefault value: Base font\n      Type: String\n      Range: Font Name",
    "body": "\"quadrantLabelTLFont\": \"\""
  },
  "QuadrantLabelTRFont": {
    "prefix": "quadrantLabelTRFont",
    "description": "Description: This attribute lets you set the font for the top-right quadrant label. \n\nDefault value: Base font\n      Type: String\n      Range: Font Name",
    "body": "\"quadrantLabelTRFont\": \"\""
  },
  "QuadrantLabelBLFont": {
    "prefix": "quadrantLabelBLFont",
    "description": "Description: This attribute lets you set the font for the bottom-left quadrant label. \n\nDefault value: Base font\n      Type: String\n      Range: Font Name",
    "body": "\"quadrantLabelBLFont\": \"\""
  },
  "QuadrantLabelBRFont": {
    "prefix": "quadrantLabelBRFont",
    "description": "Description: This attribute lets you set the font for the bottom-right quadrant label. \n\nDefault value: Base font\n      Type: String\n      Range: Font Name",
    "body": "\"quadrantLabelBRFont\": \"\""
  },
  "QuadrantLabelFontColor": {
    "prefix": "quadrantLabelFontColor",
    "description": "Description: This attribute lets you set the font color for all quadrant labels. \n\nDefault value: Base font color\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelFontColor\": \"\""
  },
  "QuadrantLabelTLFontColor": {
    "prefix": "quadrantLabelTLFontColor",
    "description": "Description: This attribute lets you set the font color for the top-left quadrant label. \n\nDefault value: Base font color\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTLFontColor\": \"\""
  },
  "QuadrantLabelTRFontColor": {
    "prefix": "quadrantLabelTRFontColor",
    "description": "Description: This attribute lets you set the font color for the top-right quadrant label. \n\nDefault value: Base font color\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTRFontColor\": \"\""
  },
  "QuadrantLabelBLFontColor": {
    "prefix": "quadrantLabelBLFontColor",
    "description": "Description: This attribute lets you set the font color for the bottom-left quadrant label. \n\nDefault value: Base font color\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBLFontColor\": \"\""
  },
  "QuadrantLabelBRFontColor": {
    "prefix": "quadrantLabelBRFontColor",
    "description": "Description: This attribute lets you set the font color for the bottom-right quadrant label. \n\nDefault value: Base font color\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBRFontColor\": \"\""
  },
  "QuadrantLabelFontAlpha": {
    "prefix": "quadrantLabelFontAlpha",
    "description": "Description: This attribute lets you set the font transparency of all quadrant labels. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelFontAlpha\": \"\""
  },
  "QuadrantLabelTLFontAlpha": {
    "prefix": "quadrantLabelTLFontAlpha",
    "description": "Description: This attribute lets you set the font transparency of the top-left quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTLFontAlpha\": \"\""
  },
  "QuadrantLabelTRFontAlpha": {
    "prefix": "quadrantLabelTRFontAlpha",
    "description": "Description: This attribute lets you set the font transparency of the top-right quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTRFontAlpha\": \"\""
  },
  "QuadrantLabelBLFontAlpha": {
    "prefix": "quadrantLabelBLFontAlpha",
    "description": "Description: This attribute lets you set the font transparency of the bottom-left quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBLFontAlpha\": \"\""
  },
  "QuadrantLabelBRFontAlpha": {
    "prefix": "quadrantLabelBRFontAlpha",
    "description": "Description: This attribute lets you set the font transparency of the bottom-right quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBRFontAlpha\": \"\""
  },
  "QuadrantLabelFontSize": {
    "prefix": "quadrantLabelFontSize",
    "description": "Description: This attribute lets you set the font size for all quadrant labels. \n\nDefault value: Base font size\n      Type: Number\n",
    "body": "\"quadrantLabelFontSize\": \"\""
  },
  "QuadrantLabelTLFontSize": {
    "prefix": "quadrantLabelTLFontSize",
    "description": "Description: This attribute lets you set the font size for the top-left quadrant label. \n\nDefault value: Base font size\n      Type: Number\n",
    "body": "\"quadrantLabelTLFontSize\": \"\""
  },
  "QuadrantLabelTRFontSize": {
    "prefix": "quadrantLabelTRFontSize",
    "description": "Description: This attribute lets you set the font size for the top-right quadrant label. \n\nDefault value: Base font size\n      Type: Number\n",
    "body": "\"quadrantLabelTRFontSize\": \"\""
  },
  "QuadrantLabelBLFontSize": {
    "prefix": "quadrantLabelBLFontSize",
    "description": "Description: This attribute lets you set the font size for the bottom-left quadrant label. \n\nDefault value: Base font size\n      Type: Number\n",
    "body": "\"quadrantLabelBLFontSize\": \"\""
  },
  "QuadrantLabelBRFontSize": {
    "prefix": "quadrantLabelBRFontSize",
    "description": "Description: This attribute lets you set the font size for the bottom-right quadrant label. \n\nDefault value: Base font size\n      Type: Number\n",
    "body": "\"quadrantLabelBRFontSize\": \"\""
  },
  "QuadrantLabelFontBold": {
    "prefix": "quadrantLabelFontBold",
    "description": "Description: This attribute lets you specify whether the label text for all quadrants will be bold formatted.  \n\nDefault value: 0 (not formatted in bold)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelFontBold\": \"${1|1,0|}\""
  },
  "QuadrantLabelTLFontBold": {
    "prefix": "quadrantLabelTLFontBold",
    "description": "Description: This attribute lets you specify whether the top-left quadrant label text will be bold formatted.  \n\nDefault value: 0 (not formatted in bold)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTLFontBold\": \"${1|1,0|}\""
  },
  "QuadrantLabelTRFontBold": {
    "prefix": "quadrantLabelTRFontBold",
    "description": "Description: This attribute lets you specify whether the top-right quadrant label text will be bold formatted.  \n\nDefault value: 0 (not formatted in bold)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTRFontBold\": \"${1|1,0|}\""
  },
  "QuadrantLabelBLFontBold": {
    "prefix": "quadrantLabelBLFontBold",
    "description": "Description: This attribute lets you specify whether the bottom-left quadrant label text will be bold formatted.  \n\nDefault value: 0 (not formatted in bold)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBLFontBold\": \"${1|1,0|}\""
  },
  "QuadrantLabelBRFontBold": {
    "prefix": "quadrantLabelBRFontBold",
    "description": "Description: This attribute lets you specify whether the bottom-right quadrant label text will be bold formatted.  \n\nDefault value: 0 (not formatted in bold)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBRFontBold\": \"${1|1,0|}\""
  },
  "QuadrantLabelFontItalic": {
    "prefix": "quadrantLabelFontItalic",
    "description": "Description: This attribute lets you specify whether the label text for all quadrants will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelFontItalic\": \"${1|1,0|}\""
  },
  "QuadrantLabelTLFontItalic": {
    "prefix": "quadrantLabelTLFontItalic",
    "description": "Description: This attribute lets you specify whether the top-left quadrant label text will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTLFontItalic\": \"${1|1,0|}\""
  },
  "QuadrantLabelTRFontItalic": {
    "prefix": "quadrantLabelTRFontItalic",
    "description": "Description: This attribute lets you specify whether the top-right quadrant label text will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTRFontItalic\": \"${1|1,0|}\""
  },
  "QuadrantLabelBLFontItalic": {
    "prefix": "quadrantLabelBLFontItalic",
    "description": "Description: This attribute lets you specify whether the bottom-left quadrant label text will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBLFontItalic\": \"${1|1,0|}\""
  },
  "QuadrantLabelBRFontItalic": {
    "prefix": "quadrantLabelBRFontItalic",
    "description": "Description: This attribute lets you specify whether the bottom-right quadrant label text will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBRFontItalic\": \"${1|1,0|}\""
  },
  "QuadrantLabelBorderColor": {
    "prefix": "quadrantLabelBorderColor",
    "description": "Description: This attribute lets you set the border color for all quadrant labels. \n\nDefault value: none\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBorderColor\": \"\""
  },
  "QuadrantLabelTLBorderColor": {
    "prefix": "quadrantLabelTLBorderColor",
    "description": "Description: This attribute lets you set the color of the top-left quadrant label border. \n\nDefault value: none\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTLBorderColor\": \"\""
  },
  "QuadrantLabelTRBorderColor": {
    "prefix": "quadrantLabelTRBorderColor",
    "description": "Description: This attribute lets you set the color of the top-right quadrant label border. \n\nDefault value: none\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTRBorderColor\": \"\""
  },
  "QuadrantLabelBLBorderColor": {
    "prefix": "quadrantLabelBLBorderColor",
    "description": "Description: This attribute lets you set the color of the bottom-left quadrant label border. \n\nDefault value: none\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBLBorderColor\": \"\""
  },
  "QuadrantLabelBRBorderColor": {
    "prefix": "quadrantLabelBRBorderColor",
    "description": "Description: This attribute lets you set the color of the bottom-right quadrant label border. \n\nDefault value: none\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBRBorderColor\": \"\""
  },
  "QuadrantLabelBorderAlpha": {
    "prefix": "quadrantLabelBorderAlpha",
    "description": "Description: This attribute lets you set the border transpareny for all quadrant labels. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBorderAlpha\": \"\""
  },
  "QuadrantLabelTLBorderAlpha": {
    "prefix": "quadrantLabelTLBorderAlpha",
    "description": "Description: This attribute lets you set the transpareny of the top-left quadrant label border. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTLBorderAlpha\": \"\""
  },
  "QuadrantLabelTRBorderAlpha": {
    "prefix": "quadrantLabelTRBorderAlpha",
    "description": "Description: This attribute lets you set the transpareny of the top-right quadrant label border. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTRBorderAlpha\": \"\""
  },
  "QuadrantLabelBLBorderAlpha": {
    "prefix": "quadrantLabelBLBorderAlpha",
    "description": "Description: This attribute lets you set the transpareny of the bottom-left quadrant label border. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBLBorderAlpha\": \"\""
  },
  "QuadrantLabelBRBorderAlpha": {
    "prefix": "quadrantLabelBRBorderAlpha",
    "description": "Description: This attribute lets you set the transpareny of the bottom-right quadrant label border. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBRBorderAlpha\": \"\""
  },
  "QuadrantLabelBorderThickness": {
    "prefix": "quadrantLabelBorderThickness",
    "description": "Description: This attribute lets you set the border thickness for all quadrant labels. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"quadrantLabelBorderThickness\": \"\""
  },
  "QuadrantLabelTLBorderThickness": {
    "prefix": "quadrantLabelTLBorderThickness",
    "description": "Description: This attribute lets you set the thickness of the top-left quadrant label border. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"quadrantLabelTLBorderThickness\": \"\""
  },
  "QuadrantLabelTRBorderThickness": {
    "prefix": "quadrantLabelTRBorderThickness",
    "description": "Description: This attribute lets you set the thickness of the top-right quadrant label border. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"quadrantLabelTRBorderThickness\": \"\""
  },
  "QuadrantLabelBLBorderThickness": {
    "prefix": "quadrantLabelBLBorderThickness",
    "description": "Description: This attribute lets you set the thickness of the bottom-left quadrant label border. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"quadrantLabelBLBorderThickness\": \"\""
  },
  "QuadrantLabelBRBorderThickness": {
    "prefix": "quadrantLabelBRBorderThickness",
    "description": "Description: This attribute lets you set the thickness of the bottom-right quadrant label border. \n\nDefault value: 1\n      Type: Number\n      Range: 1-5",
    "body": "\"quadrantLabelBRBorderThickness\": \"\""
  },
  "QuadrantLabelBorderPadding": {
    "prefix": "quadrantLabelBorderPadding",
    "description": "Description: This attribute lets you set the border padding for all quadrant labels. \n\nDefault value: 2\n      Type: Number\n",
    "body": "\"quadrantLabelBorderPadding\": \"\""
  },
  "QuadrantLabelTLBorderPadding": {
    "prefix": "quadrantLabelTLBorderPadding",
    "description": "Description: This attribute lets you set the padding for the top-left quadrant label border. \n\nDefault value: 2\n      Type: Number\n",
    "body": "\"quadrantLabelTLBorderPadding\": \"\""
  },
  "QuadrantLabelTRBorderPadding": {
    "prefix": "quadrantLabelTRBorderPadding",
    "description": "Description: This attribute lets you set the padding for the top-right quadrant label border. \n\nDefault value: 2\n      Type: Number\n",
    "body": "\"quadrantLabelTRBorderPadding\": \"\""
  },
  "QuadrantLabelBLBorderPadding": {
    "prefix": "quadrantLabelBLBorderPadding",
    "description": "Description: This attribute lets you set the padding for the bottom-left quadrant label border. \n\nDefault value: 2\n      Type: Number\n",
    "body": "\"quadrantLabelBLBorderPadding\": \"\""
  },
  "QuadrantLabelBRBorderPadding": {
    "prefix": "quadrantLabelBRBorderPadding",
    "description": "Description: This attribute lets you set the padding for the bottom-right quadrant label border. \n\nDefault value: 2\n      Type: Number\n",
    "body": "\"quadrantLabelBRBorderPadding\": \"\""
  },
  "QuadrantLabelBorderRadius": {
    "prefix": "quadrantLabelBorderRadius",
    "description": "Description: This attribute lets you set the border radius for all quadrant labels. \n\nDefault value: 0\n      Type: Number\n",
    "body": "\"quadrantLabelBorderRadius\": \"\""
  },
  "QuadrantLabelTLBorderRadius": {
    "prefix": "quadrantLabelTLBorderRadius",
    "description": "Description: This attribute lets you set the radius of the top-left quadrant label border. \n\nDefault value: 0\n      Type: Number\n",
    "body": "\"quadrantLabelTLBorderRadius\": \"\""
  },
  "QuadrantLabelTRBorderRadius": {
    "prefix": "quadrantLabelTRBorderRadius",
    "description": "Description: This attribute lets you set the radius of the top-right quadrant label border. \n\nDefault value: 0\n      Type: Number\n",
    "body": "\"quadrantLabelTRBorderRadius\": \"\""
  },
  "QuadrantLabelBLBorderRadius": {
    "prefix": "quadrantLabelBLBorderRadius",
    "description": "Description: This attribute lets you set the radius of the bottom-left quadrant label border. \n\nDefault value: 0\n      Type: Number\n",
    "body": "\"quadrantLabelBLBorderRadius\": \"\""
  },
  "QuadrantLabelBRBorderRadius": {
    "prefix": "quadrantLabelBRBorderRadius",
    "description": "Description: This attribute lets you set the radius of the bottom-right quadrant label border. \n\nDefault value: 0\n      Type: Number\n",
    "body": "\"quadrantLabelBRBorderRadius\": \"\""
  },
  "QuadrantLabelBorderDashed": {
    "prefix": "quadrantLabelBorderDashed",
    "description": "Description: This attribute lets you specify whether all quadrant label borders will be drawn as dashed lines. \n\nDefault value: 0 (drawn as a straight line)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBorderDashed\": \"${1|1,0|}\""
  },
  "QuadrantLabelTLBorderDashed": {
    "prefix": "quadrantLabelTLBorderDashed",
    "description": "Description: This attribute lets you specify whether the top-left quadrant label border will be drawn as a dashed-line. \n\nDefault value: 0 (drawn as a straight line)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTLBorderDashed\": \"${1|1,0|}\""
  },
  "QuadrantLabelTRBorderDashed": {
    "prefix": "quadrantLabelTRBorderDashed",
    "description": "Description: This attribute lets you specify whether the top-right quadrant label border will be drawn as a dashed-line. \n\nDefault value: 0 (drawn as a straight line)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelTRBorderDashed\": \"${1|1,0|}\""
  },
  "QuadrantLabelBLBorderDashed": {
    "prefix": "quadrantLabelBLBorderDashed",
    "description": "Description: This attribute lets you specify whether the bottom-left quadrant label border will be drawn as a dashed-line. \n\nDefault value: 0 (drawn as a straight line)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBLBorderDashed\": \"${1|1,0|}\""
  },
  "QuadrantLabelBRBorderDashed": {
    "prefix": "quadrantLabelBRBorderDashed",
    "description": "Description: This attribute lets you specify whether the bottom-right quadrant label border will be drawn as a dashed-line. \n\nDefault value: 0 (drawn as a straight line)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"quadrantLabelBRBorderDashed\": \"${1|1,0|}\""
  },
  "QuadrantLabelBorderDashlen": {
    "prefix": "quadrantLabelBorderDashlen",
    "description": "Description: This attribute lets you set the length of each dash for all quadrant label borders, if the borders are drawn as a dashed line. \n\nDefault value: 4\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBorderDashlen\": \"\""
  },
  "QuadrantLabelTLBorderDashlen": {
    "prefix": "quadrantLabelTLBorderDashlen",
    "description": "Description: This attribute lets you set the length of each dash, if the top-left quadrant label border is drawn as a dashed line. \n\nDefault value: 4\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelTLBorderDashlen\": \"\""
  },
  "QuadrantLabelTRBorderDashlen": {
    "prefix": "quadrantLabelTRBorderDashlen",
    "description": "Description: This attribute lets you set the length of each dash, if the top-right quadrant label border is drawn as a dashed line. \n\nDefault value: 4\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelTRBorderDashlen\": \"\""
  },
  "QuadrantLabelBLBorderDashlen": {
    "prefix": "quadrantLabelBLBorderDashlen",
    "description": "Description: This attribute lets you set the length of each dash, if the bottom-left quadrant label border is drawn as a dashed line. \n\nDefault value: 4\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBLBorderDashlen\": \"\""
  },
  "QuadrantLabelBRBorderDashlen": {
    "prefix": "quadrantLabelBRBorderDashlen",
    "description": "Description: This attribute lets you set the length of each dash, if the bottom-right quadrant label border is drawn as a dashed line. \n\nDefault value: 4\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBRBorderDashlen\": \"\""
  },
  "QuadrantLabelBorderDashgap": {
    "prefix": "quadrantLabelBorderDashgap",
    "description": "Description: This attribute lets you set the distance between each dash for all quadrant label borders, if the borders are drawn as a dashed line. \n\nDefault value: 2\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBorderDashgap\": \"\""
  },
  "QuadrantLabelTLBorderDashgap": {
    "prefix": "quadrantLabelTLBorderDashgap",
    "description": "Description: This attribute lets you set the distance between each dash, if the top-left quadrant label border is drawn as a dashed line. \n\nDefault value: 2\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelTLBorderDashgap\": \"\""
  },
  "QuadrantLabelTRBorderDashgap": {
    "prefix": "quadrantLabelTRBorderDashgap",
    "description": "Description: This attribute lets you set the distance between each dash, if the top-right quadrant label border is drawn as a dashed line. \n\nDefault value: 2\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelTRBorderDashgap\": \"\""
  },
  "QuadrantLabelBLBorderDashgap": {
    "prefix": "quadrantLabelBLBorderDashgap",
    "description": "Description: This attribute lets you set the distance between each dash, if the bottom-left quadrant label border is drawn as a dashed line. \n\nDefault value: 2\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBLBorderDashgap\": \"\""
  },
  "QuadrantLabelBRBorderDashgap": {
    "prefix": "quadrantLabelBRBorderDashgap",
    "description": "Description: This attribute lets you set the distance between each dash, if the bottom-right quadrant label border is drawn as a dashed line. \n\nDefault value: 2\n      Type: Number\n      Range: In pixels",
    "body": "\"quadrantLabelBRBorderDashgap\": \"\""
  },
  "QuadrantLabelBgColor": {
    "prefix": "quadrantLabelBgColor",
    "description": "Description: This attribute lets you set the background color for all quadrant labels. \n\nDefault value: None\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBgColor\": \"\""
  },
  "QuadrantLabelTLBgColor": {
    "prefix": "quadrantLabelTLBgColor",
    "description": "Description: This attribute lets you set the background color for the top-left quadrant label. \n\nDefault value: None\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTLBgColor\": \"\""
  },
  "QuadrantLabelTRBgColor": {
    "prefix": "quadrantLabelTRBgColor",
    "description": "Description: This attribute lets you set the background color for the top-right quadrant label. \n\nDefault value: None\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelTRBgColor\": \"\""
  },
  "QuadrantLabelBLBgColor": {
    "prefix": "quadrantLabelBLBgColor",
    "description": "Description: This attribute lets you set the background color for the bottom-left quadrant label. \n\nDefault value: None\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBLBgColor\": \"\""
  },
  "QuadrantLabelBRBgColor": {
    "prefix": "quadrantLabelBRBgColor",
    "description": "Description: This attribute lets you set the background color for the bottom-right quadrant label. \n\nDefault value: None\n      Type: Hex Color Code\n",
    "body": "\"quadrantLabelBRBgColor\": \"\""
  },
  "QuadrantLabelBgAlpha": {
    "prefix": "quadrantLabelBgAlpha",
    "description": "Description: This attribute lets you set the background transparency for all quadrant labels. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBgAlpha\": \"\""
  },
  "QuadrantLabelTLBgAlpha": {
    "prefix": "quadrantLabelTLBgAlpha",
    "description": "Description: This attribute lets you set the background transparency for the top-left quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTLBgAlpha\": \"\""
  },
  "QuadrantLabelTRBgAlpha": {
    "prefix": "quadrantLabelTRBgAlpha",
    "description": "Description: This attribute lets you set the background transparency for the top-right quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelTRBgAlpha\": \"\""
  },
  "QuadrantLabelBLBgAlpha": {
    "prefix": "quadrantLabelBLBgAlpha",
    "description": "Description: This attribute lets you set the background transparency for the bottom-left quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBLBgAlpha\": \"\""
  },
  "QuadrantLabelBRBgAlpha": {
    "prefix": "quadrantLabelBRBgAlpha",
    "description": "Description: This attribute lets you set the background transparency for the bottom-right quadrant label. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"quadrantLabelBRBgAlpha\": \"\""
  },
  "QuadrantLabelPadding": {
    "prefix": "quadrantLabelPadding",
    "description": "Description: This attribute lets you control the space between quadrant labels and the associated quadrant lines.\n      Type: Number\n      Range: In Pixels",
    "body": "\"quadrantLabelPadding\": \"\""
  },
  "VDivlineAlpha": {
    "prefix": "vDivlineAlpha",
    "description": "Description: Transparency of the vertical divisional lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vDivlineAlpha\": \"\""
  },
  "ShowVZeroPlane": {
    "prefix": "showVZeroPlane",
    "description": "Description: Whether to show vertical zero plane. Zero Plane is the line/plane that appears at 0 x-position on canvas, when negative data is being shown on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVZeroPlane\": \"${1|1,0|}\""
  },
  "VZeroPlaneColor": {
    "prefix": "vZeroPlaneColor",
    "description": "Description: Color of the vertical zero plane.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"vZeroPlaneColor\": \"\""
  },
  "VZeroPlaneThickness": {
    "prefix": "vZeroPlaneThickness",
    "description": "Description: Thickness of the vertical zero plane.\n      Type: Number\n      Range: In Pixels",
    "body": "\"vZeroPlaneThickness\": \"\""
  },
  "VZeroPlaneAlpha": {
    "prefix": "vZeroPlaneAlpha",
    "description": "Description: Transparency of the vertical zero plane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"vZeroPlaneAlpha\": \"\""
  },
  "YFormatNumber": {
    "prefix": "yFormatNumber",
    "description": "Description: This configuration determines whether the numbers displayed on the y-axis of the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';. If this attribute is not specifically mentioned, the chart inherits the default value from `formatNumber` attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yFormatNumber\": \"${1|1,0|}\""
  },
  "XFormatNumber": {
    "prefix": "xFormatNumber",
    "description": "Description: This configuration determines whether the numbers displayed on the x-axis of the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';. If this attribute is not specifically mentioned, the chart inherits the default value from `formatNumber` attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xFormatNumber\": \"${1|1,0|}\""
  },
  "YFormatNumberScale": {
    "prefix": "yFormatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it on the y-axis - e.g., if `yFormatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end. If this attribute is not specifically mentioned, the chart inherits the default value from `formatNumberScale` attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yFormatNumberScale\": \"${1|1,0|}\""
  },
  "XFormatNumberScale": {
    "prefix": "xFormatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it on the x-axis - e.g., if `xFormatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end. If this attribute is not specifically mentioned, the chart inherits the default value from `formatNumberScale` attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xFormatNumberScale\": \"${1|1,0|}\""
  },
  "YDefaultNumberScale": {
    "prefix": "yDefaultNumberScale",
    "description": "Description: The default unit of the numbers of the y-axis that you're providing to the chart. If this attribute is not specifically mentioned, the chart inherits the default value from `defaultNumberScale` attribute.\n      Type: String\n",
    "body": "\"yDefaultNumberScale\": \"\""
  },
  "XDefaultNumberScale": {
    "prefix": "xDefaultNumberScale",
    "description": "Description: The default unit of the numbers of the x-axis that you're providing to the chart. If this attribute is not specifically mentioned, the chart inherits the default value from `defaultNumberScale` attribute.\n      Type: String\n",
    "body": "\"xDefaultNumberScale\": \"\""
  },
  "YNumberScaleUnit": {
    "prefix": "yNumberScaleUnit",
    "description": "Description: Unit of each block of the scale of the y-axis. If this attribute is not specifically mentioned, the chart inherits the default value from `numberScaleUnit` attribute.\n      Type: String\n",
    "body": "\"yNumberScaleUnit\": \"\""
  },
  "XNumberScaleUnit": {
    "prefix": "xNumberScaleUnit",
    "description": "Description: Unit of each block of the scale of the x-axis. If this attribute is not specifically mentioned, the chart inherits the default value from `numberScaleUnit` attribute.\n      Type: String\n",
    "body": "\"xNumberScaleUnit\": \"\""
  },
  "XScaleRecursively": {
    "prefix": "xScaleRecursively",
    "description": "Description: Whether to scale the number recursively for the x-axis? This attribute will work only if the attribute `xAxisLabelMode` is set to '`AUTO`' or '`MIXED`'.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xScaleRecursively\": \"${1|1,0|}\""
  },
  "XMaxScaleRecursion": {
    "prefix": "xMaxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling for the numbers on the x-axis? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"xMaxScaleRecursion\": \"\""
  },
  "XScaleSeparator": {
    "prefix": "xScaleSeparator",
    "description": "Description: This attribute is used to specify the character that will be used to separate the scales that are generated after recursion for the numbers on the x-axis.\n      Type: String\n",
    "body": "\"xScaleSeparator\": \"\""
  },
  "YNumberScaleValue": {
    "prefix": "yNumberScaleValue",
    "description": "Description: Range of the various blocks that constitute the y-axis scale. If this attribute is not specifically mentioned, the chart inherits the default value from `numberScaleValue` attribute.\n      Type: String\n",
    "body": "\"yNumberScaleValue\": \"\""
  },
  "XNumberScaleValue": {
    "prefix": "xNumberScaleValue",
    "description": "Description: Range of the various blocks that constitute the x-axis scale. If this attribute is not specifically mentioned, the chart inherits the default value from `numberScaleValue` attribute.\n      Type: String\n",
    "body": "\"xNumberScaleValue\": \"\""
  },
  "YNumberPrefix": {
    "prefix": "yNumberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers visible on the y-axis. For example, to represent all dollars figure on the y-axis, you could specify this attribute to $ to show like $40000, $50000. If this attribute is not specifically mentioned, the chart inherits the default value from `numberPrefix` attribute.\n      Type: String\n      Range: Character",
    "body": "\"yNumberPrefix\": \"\""
  },
  "XNumberPrefix": {
    "prefix": "xNumberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers visible on the x-axis. For example, to represent all dollars figure on the x-axis, you could specify this attribute to $ to show like $40000, $50000. If this attribute is not specifically mentioned, the chart inherits the default value from `numberPrefix` attribute.\n      Type: String\n      Range: Character",
    "body": "\"xNumberPrefix\": \"\""
  },
  "YNumberSuffix": {
    "prefix": "yNumberSuffix",
    "description": "Description: Using this attribute, you could add a suffix to all the numbers visible on the y-axis. For example, to represent all figure quantified as per annum on the y-axis, you could specify this attribute to '/a' to show like 40000/a, 50000/a. If this attribute is not specifically mentioned, the chart inherits the default value from `numberSuffix` attribute.\n      Type: String\n      Range: Character",
    "body": "\"yNumberSuffix\": \"\""
  },
  "XNumberSuffix": {
    "prefix": "xNumberSuffix",
    "description": "Description: Using this attribute, you could add a suffix to all the numbers visible on the x-axis. For example, to represent all figure quantified as per annum on the x-axis, you could specify this attribute to '/a' to show like 40000/a, 50000/a.If this attribute is not specifically mentioned, the chart inherits the default value from `numberSuffix` attribute.\n      Type: String\n      Range: Character",
    "body": "\"xNumberSuffix\": \"\""
  },
  "BtnZoomInToolText": {
    "prefix": "btnZoomInToolText",
    "description": "Description: Sets the tooltext for the zoom in button. \n\n__Default value__: Zoom in Or double-click on plot to zoom-in\n      Type: String\n",
    "body": "\"btnZoomInToolText\": \"\""
  },
  "BtnSelectZoomToolText": {
    "prefix": "btnSelectZoomToolText",
    "description": "Description: Sets the tooltext for the selected zoom icon of the toggle button. \n\n__Default value__: Select a region to zoom-in. Click to enable pan mode.\n      Type: String\n",
    "body": "\"btnSelectZoomToolText\": \"\""
  },
  "BtnPanToolText": {
    "prefix": "btnPanToolText",
    "description": "Description: Sets the tooltext for the pan icon in the toggle button.  \n\n__Default value__: Drag to move across chart. Click to enable select-zoom mode.\n      Type: String\n",
    "body": "\"btnPanToolText\": \"\""
  },
  "DrawLine": {
    "prefix": "drawLine",
    "description": "Description: You can opt to connect the scatter points of any dataset using lines. This attribute helps you configure that.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawLine\": \"${1|1,0|}\""
  }
}
