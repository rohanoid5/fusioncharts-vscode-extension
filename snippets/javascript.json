{
  "Animation": {
    "prefix": "animation",
    "description": "Description: This attribute gives you the option to control animation in your charts. If you do not want to animate any part of the chart, set this as 0.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"animation\": \"${1|1,0|}\""
  },
  "AnimationDuration": {
    "prefix": "animationDuration",
    "description": "Description: This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec\n      Type: Number\n      Range: In seconds",
    "body": "\"animationDuration\": \"\""
  },
  "Palette": {
    "prefix": "palette",
    "description": "Description: FusionCharts XT uses the concept of Color Palettes. Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. \n      Type: Number\n      Range: 1-5",
    "body": "\"palette\": \"\""
  },
  "PaletteColors": {
    "prefix": "paletteColors",
    "description": "Description: While the `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of data items (i.e., column, line, pie etc.). Using `paletteColors` attribute, you can specify your custom list of hex colors for the data items. The list of colors have to be separated by comma e.g., `&quot;paletteColors&quot;: &quot;#FF0000, #0372AB, #FF5904...&quot;`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart JSON.\n      Type: String\n      Range: List of hex color codes separated by comma",
    "body": "\"paletteColors\": \"\""
  },
  "ShowLabels": {
    "prefix": "showLabels",
    "description": "Description: It sets the configuration whether the x-axis labels will be displayed or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabels\": \"${1|1,0|}\""
  },
  "MaxLabelHeight": {
    "prefix": "maxLabelHeight",
    "description": "Description: This attribute can be used to set the maximum height for the x-axis labels (data labels) excluding the x-axis title. If any label goes beyond this height, the label will be truncated. In stagger mode, the number of stagger lines will be reduced if they exceed this value.\n      Type: Number\n      Range: In Pixels",
    "body": "\"maxLabelHeight\": \"\""
  },
  "LabelDisplay": {
    "prefix": "labelDisplay",
    "description": "Description: Using this attribute, you can customize the alignment of data labels (x-axis labels). There are 5 options: AUTO, WRAP, STAGGER, ROTATE or NONE. By default, this attribute is set to AUTO mode which means that the alignment of the data labels is determined automatically depending on the size of the chart. WRAP wraps the label text if it is too long to fit in one line. ROTATE rotates the labels vertically. STAGGER divides the labels into multiple lines.\n      Type: String\n      Range: 'AUTO', 'WRAP', 'STAGGER', 'ROTATE', 'NONE'",
    "body": "\"labelDisplay\": \"\""
  },
  "UseEllipsesWhenOverflow": {
    "prefix": "useEllipsesWhenOverflow",
    "description": "Description: When enabled in auto mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useEllipsesWhenOverflow\": \"${1|1,0|}\""
  },
  "RotateLabels": {
    "prefix": "rotateLabels",
    "description": "Description: This attribute lets you set whether the data labels will show up as rotated labels on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateLabels\": \"${1|1,0|}\""
  },
  "SlantLabels": {
    "prefix": "slantLabels",
    "description": "Description: If you've opted to show rotated labels on chart, this attribute lets you set the configuration whether the labels will show as slanted labels or fully vertical ones.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"slantLabels\": \"${1|1,0|}\""
  },
  "LabelStep": {
    "prefix": "labelStep",
    "description": "Description: By default, all the labels are displayed on the chart. However, if you've a set of streaming data (like name of months or days of week), you can opt to show every n-th label for better clarity. This attribute just lets you do so. When a value greater than 1 (n) is set to this attribute, the first label from left and every label at the n-th position from left will be displayed. e.g., a chart showing data for 12 months and set with `labelStep: 3` will show labels for January, April, July, and October. The rest of the labels will be skipped.\n      Type: Number\n      Range: 1 or above",
    "body": "\"labelStep\": \"\""
  },
  "StaggerLines": {
    "prefix": "staggerLines",
    "description": "Description: If you've opted for STAGGER mode as `labelDisplay`, using this attribute you can control how many lines to stagger the label to. By default, all labels are displayed in a single line.\n      Type: Number\n      Range: 2 or above",
    "body": "\"staggerLines\": \"\""
  },
  "ShowValues": {
    "prefix": "showValues",
    "description": "Description: Sets the configuration whether data values will be displayed along with the data plot on chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showValues\": \"${1|1,0|}\""
  },
  "RotateValues": {
    "prefix": "rotateValues",
    "description": "Description: If you've opted to show data values, you can rotate them using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateValues\": \"${1|1,0|}\""
  },
  "PlaceValuesInside": {
    "prefix": "placeValuesInside",
    "description": "Description: If you've opted to show data values, you can show them inside the columns using this attribute. By default, the data values show outside the column.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"placeValuesInside\": \"${1|1,0|}\""
  },
  "ShowLimits": {
    "prefix": "showLimits",
    "description": "Description: Whether to show chart limit values. If not specified `showYAxisValues` attribute overrides this value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLimits\": \"${1|1,0|}\""
  },
  "ShowDivLineValues": {
    "prefix": "showDivLineValues",
    "description": "Description: Whether to show div line values. If not specified `showYAxisValues` attribute overrides this value.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showDivLineValues\": \"${1|1,0|}\""
  },
  "ShowShadow": {
    "prefix": "showShadow",
    "description": "Description: Whether to show column shadows.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showShadow\": \"${1|1,0|}\""
  },
  "AdjustDiv": {
    "prefix": "adjustDiv",
    "description": "Description: FusionCharts XT automatically tries to adjust divisional lines and limit values based on the data provided. However, if you want to set your explicit lower and upper limit values and number of divisional lines, first set this attribute to false. That will disable automatic adjustment of divisional lines.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"adjustDiv\": \"${1|1,0|}\""
  },
  "ClickURL": {
    "prefix": "clickURL",
    "description": "Description: The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link format.\n      Type: String\n",
    "body": "\"clickURL\": \"\""
  },
  "ClickURLOverridesPlotLinks": {
    "prefix": "clickURLOverridesPlotLinks",
    "description": "Description: Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"clickURLOverridesPlotLinks\": \"${1|1,0|}\""
  },
  "MaxColWidth": {
    "prefix": "maxColWidth",
    "description": "Description: Maximum allowed column width\n      Type: Number\n      Range: In Pixels",
    "body": "\"maxColWidth\": \"\""
  },
  "SetAdaptiveYMin": {
    "prefix": "setAdaptiveYMin",
    "description": "Description: This attribute lets you set whether the y-axis lower limit will be 0 (in case of all positive values on chart) or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"setAdaptiveYMin\": \"${1|1,0|}\""
  },
  "UseDataPlotColorForLabels": {
    "prefix": "useDataPlotColorForLabels",
    "description": "Description: Uses the same data plot color for data labels.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useDataPlotColorForLabels\": \"${1|1,0|}\""
  },
  "HasRTLText": {
    "prefix": "hasRTLText",
    "description": "Description: This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. \n      Type: Number\n",
    "body": "\"hasRTLText\": \"\""
  },
  "ShowPrintMenuItem": {
    "prefix": "showPrintMenuItem",
    "description": "Description: Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPrintMenuItem\": \"${1|1,0|}\""
  },
  "PlotBinSize": {
    "prefix": "plotBinSize",
    "description": "Description: This attribute is used to skip the data plot without any change in visualization. When set to `1`, minimum one data plot will be rendered within the width of one pixel. \n\n Example, if `plotBinSize: 1`, minimum one column plot will be rendered within the width of one pixel. For line and area charts, minimum of two anchors connecting one single line will be drawn. If `plotBinSize: 0.5`, minimum two column plot will be rendered within the width of one pixel. Data skipping can be disabled by setting this attribute to `0`. \n\n Default value: __0.5__\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotBinSize\": \"\""
  },
  "LabelBinSize": {
    "prefix": "labelBinSize",
    "description": "Description: This attribute is used to skip the labels of the data plots. When set to `1`, minimum one label will be displayed within the width of one pixel. To disable this label skipping, set this attribute to `0`. \n\nDefault value: __1__\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBinSize\": \"\""
  },
  "Theme": {
    "prefix": "theme",
    "description": "Description: This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.\n      Type: String\n      Range: ‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
    "body": "\"theme\": \"\""
  },
  "BaseChartMessageFont": {
    "prefix": "baseChartMessageFont",
    "description": "Description: This attribute allows to set a custom font for all chart messages.\n      Type: String\n",
    "body": "\"baseChartMessageFont\": \"\""
  },
  "BaseChartMessageFontSize": {
    "prefix": "baseChartMessageFontSize",
    "description": "Description: This attribute allows to set a custom font size for all chart messages.\n      Type: Number\n      Range: In pixels",
    "body": "\"baseChartMessageFontSize\": \"\""
  },
  "BaseChartMessageColor": {
    "prefix": "baseChartMessageColor",
    "description": "Description: This attribute allows to set a custom font color for all chart messages.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"baseChartMessageColor\": \"\""
  },
  "BaseChartMessageImageHAlign": {
    "prefix": "baseChartMessageImageHAlign",
    "description": "Description: This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle\n      Type: String\n      Range: left, middle, right",
    "body": "\"baseChartMessageImageHAlign\": \"\""
  },
  "BaseChartMessageImageVAlign": {
    "prefix": "baseChartMessageImageVAlign",
    "description": "Description: This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"baseChartMessageImageVAlign\": \"\""
  },
  "BaseChartMessageImageAlpha": {
    "prefix": "baseChartMessageImageAlpha",
    "description": "Description: This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"baseChartMessageImageAlpha\": \"\""
  },
  "BaseChartMessageImageScale": {
    "prefix": "baseChartMessageImageScale",
    "description": "Description: This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"baseChartMessageImageScale\": \"\""
  },
  "LoadMessage": {
    "prefix": "loadMessage",
    "description": "Description: This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"loadMessage\": \"\""
  },
  "LoadMessageFont": {
    "prefix": "loadMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed when a chart begins to load.\n      Type: String\n      Range: Font Name",
    "body": "\"loadMessageFont\": \"\""
  },
  "LoadMessageFontSize": {
    "prefix": "loadMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when a chart begins to load.\n      Type: Number\n      Range: In pixels",
    "body": "\"loadMessageFontSize\": \"\""
  },
  "LoadMessageColor": {
    "prefix": "loadMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when a chart begins to load.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"loadMessageColor\": \"\""
  },
  "LoadMessageImageHAlign": {
    "prefix": "loadMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"loadMessageImageHAlign\": \"\""
  },
  "LoadMessageImageVAlign": {
    "prefix": "loadMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"loadMessageImageVAlign\": \"\""
  },
  "LoadMessageImageAlpha": {
    "prefix": "loadMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"loadMessageImageAlpha\": \"\""
  },
  "LoadMessageImageScale": {
    "prefix": "loadMessageImageScale",
    "description": "Description: If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"loadMessageImageScale\": \"\""
  },
  "TypeNotSupportedMessage": {
    "prefix": "typeNotSupportedMessage",
    "description": "Description: This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"typeNotSupportedMessage\": \"\""
  },
  "TypeNotSupportedMessageFont": {
    "prefix": "typeNotSupportedMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed when the specified chart type is not supported.\n      Type: String\n      Range: Font Name",
    "body": "\"typeNotSupportedMessageFont\": \"\""
  },
  "TypeNotSupportedMessageFontSize": {
    "prefix": "typeNotSupportedMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when the specified chart type is not supported.\n      Type: Number\n      Range: In pixels",
    "body": "\"typeNotSupportedMessageFontSize\": \"\""
  },
  "TypeNotSupportedMessageColor": {
    "prefix": "typeNotSupportedMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when the specified chart type is not supported.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"typeNotSupportedMessageColor\": \"\""
  },
  "TypeNotSupportedMessageImageHAlign": {
    "prefix": "typeNotSupportedMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"typeNotSupportedMessageImageHAlign\": \"\""
  },
  "TypeNotSupportedMessageImageVAlign": {
    "prefix": "typeNotSupportedMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"typeNotSupportedMessageImageVAlign\": \"\""
  },
  "TypeNotSupportedMessageImageAlpha": {
    "prefix": "typeNotSupportedMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"typeNotSupportedMessageImageAlpha\": \"\""
  },
  "TypeNotSupportedMessageImageScale": {
    "prefix": "typeNotSupportedMessageImageScale",
    "description": "Description: If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"typeNotSupportedMessageImageScale\": \"\""
  },
  "RenderErrorMessage": {
    "prefix": "renderErrorMessage",
    "description": "Description: This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"renderErrorMessage\": \"\""
  },
  "RenderErrorMessageFont": {
    "prefix": "renderErrorMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.\n      Type: String\n      Range: Font Name",
    "body": "\"renderErrorMessageFont\": \"\""
  },
  "RenderErrorMessageFontSize": {
    "prefix": "renderErrorMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.\n      Type: Number\n      Range: In pixels",
    "body": "\"renderErrorMessageFontSize\": \"\""
  },
  "RenderErrorMessageColor": {
    "prefix": "renderErrorMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"renderErrorMessageColor\": \"\""
  },
  "RenderErrorMessageImageHAlign": {
    "prefix": "renderErrorMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"renderErrorMessageImageHAlign\": \"\""
  },
  "RenderErrorMessageImageVAlign": {
    "prefix": "renderErrorMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"renderErrorMessageImageVAlign\": \"\""
  },
  "RenderErrorMessageImageAlpha": {
    "prefix": "renderErrorMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"renderErrorMessageImageAlpha\": \"\""
  },
  "RenderErrorMessageImageScale": {
    "prefix": "renderErrorMessageImageScale",
    "description": "Description: If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"renderErrorMessageImageScale\": \"\""
  },
  "DataLoadStartMessage": {
    "prefix": "dataLoadStartMessage",
    "description": "Description: This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataLoadStartMessage\": \"\""
  },
  "DataLoadStartMessageFont": {
    "prefix": "dataLoadStartMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed when chart data begins loading.\n      Type: String\n      Range: Font Name",
    "body": "\"dataLoadStartMessageFont\": \"\""
  },
  "DataLoadStartMessageFontSize": {
    "prefix": "dataLoadStartMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed when chart data begins loading.\n      Type: String\n      Range: In pixels",
    "body": "\"dataLoadStartMessageFontSize\": \"\""
  },
  "DataLoadStartMessageColor": {
    "prefix": "dataLoadStartMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed when chart data begins loading.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataLoadStartMessageColor\": \"\""
  },
  "DataLoadStartMessageImageHAlign": {
    "prefix": "dataLoadStartMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataLoadStartMessageImageHAlign\": \"\""
  },
  "DataLoadStartMessageImageVAlign": {
    "prefix": "dataLoadStartMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataLoadStartMessageImageVAlign\": \"\""
  },
  "DataLoadStartMessageImageAlpha": {
    "prefix": "dataLoadStartMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataLoadStartMessageImageAlpha\": \"\""
  },
  "DataLoadStartMessageImageScale": {
    "prefix": "dataLoadStartMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataLoadStartMessageImageScale\": \"\""
  },
  "DataEmptyMessage": {
    "prefix": "dataEmptyMessage",
    "description": "Description: This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataEmptyMessage\": \"\""
  },
  "DataEmptyMessageFont": {
    "prefix": "dataEmptyMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed if the data loaded for a chart is empty\n      Type: String\n      Range: Font Name",
    "body": "\"dataEmptyMessageFont\": \"\""
  },
  "DataEmptyMessageFontSize": {
    "prefix": "dataEmptyMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataEmptyMessageFontSize\": \"\""
  },
  "DataEmptyMessageColor": {
    "prefix": "dataEmptyMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataEmptyMessageColor\": \"\""
  },
  "DataEmptyMessageImageHAlign": {
    "prefix": "dataEmptyMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataEmptyMessageImageHAlign\": \"\""
  },
  "DataEmptyMessageImageVAlign": {
    "prefix": "dataEmptyMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataEmptyMessageImageVAlign\": \"\""
  },
  "DataEmptyMessageImageAlpha": {
    "prefix": "dataEmptyMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataEmptyMessageImageAlpha\": \"\""
  },
  "DataEmptyMessageImageScale": {
    "prefix": "dataEmptyMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataEmptyMessageImageScale\": \"\""
  },
  "DataLoadErrorMessage": {
    "prefix": "dataLoadErrorMessage",
    "description": "Description: This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataLoadErrorMessage\": \"\""
  },
  "DataLoadErrorMessageFont": {
    "prefix": "dataLoadErrorMessageFont",
    "description": "Description: This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.\n      Type: String\n      Range: Font Name",
    "body": "\"dataLoadErrorMessageFont\": \"\""
  },
  "DataLoadErrorMessageFontSize": {
    "prefix": "dataLoadErrorMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataLoadErrorMessageFontSize\": \"\""
  },
  "DataLoadErrorMessageColor": {
    "prefix": "dataLoadErrorMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataLoadErrorMessageColor\": \"\""
  },
  "DataLoadErrorMessageImageHAlign": {
    "prefix": "dataLoadErrorMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataLoadErrorMessageImageHAlign\": \"\""
  },
  "DataLoadErrorMessageImageVAlign": {
    "prefix": "dataLoadErrorMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataLoadErrorMessageImageVAlign\": \"\""
  },
  "DataLoadErrorMessageImageAlpha": {
    "prefix": "dataLoadErrorMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataLoadErrorMessageImageAlpha\": \"\""
  },
  "DataLoadErrorMessageImageScale": {
    "prefix": "dataLoadErrorMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataLoadErrorMessageImageScale\": \"\""
  },
  "DataInvalidMessage": {
    "prefix": "dataInvalidMessage",
    "description": "Description: This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.\n      Type: String\n",
    "body": "\"dataInvalidMessage\": \"\""
  },
  "DataInvalidMessageFont": {
    "prefix": "dataInvalidMessageFont",
    "description": "Description: This attribute allows to set the font for the message displayed if the specified chart data is invalid.\n      Type: String\n      Range: Font Name",
    "body": "\"dataInvalidMessageFont\": \"\""
  },
  "DataInvalidMessageFontSize": {
    "prefix": "dataInvalidMessageFontSize",
    "description": "Description: This attribute allows to set the font size for the message displayed if the specified chart data is invalid.\n      Type: Number\n      Range: In pixels",
    "body": "\"dataInvalidMessageFontSize\": \"\""
  },
  "DataInvalidMessageColor": {
    "prefix": "dataInvalidMessageColor",
    "description": "Description: This attribute allows to set the font color for the message displayed if the specified chart data is invalid.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"dataInvalidMessageColor\": \"\""
  },
  "DataInvalidMessageImageHAlign": {
    "prefix": "dataInvalidMessageImageHAlign",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute\n      Type: String\n      Range: left, middle, right",
    "body": "\"dataInvalidMessageImageHAlign\": \"\""
  },
  "DataInvalidMessageImageVAlign": {
    "prefix": "dataInvalidMessageImageVAlign",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"dataInvalidMessageImageVAlign\": \"\""
  },
  "DataInvalidMessageImageAlpha": {
    "prefix": "dataInvalidMessageImageAlpha",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"dataInvalidMessageImageAlpha\": \"\""
  },
  "DataInvalidMessageImageScale": {
    "prefix": "dataInvalidMessageImageScale",
    "description": "Description: If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100\n      Type: Number\n      Range: 0-300",
    "body": "\"dataInvalidMessageImageScale\": \"\""
  },
  "Caption": {
    "prefix": "caption",
    "description": "Description: Caption of the chart.\n      Type: String\n",
    "body": "\"caption\": \"\""
  },
  "SubCaption": {
    "prefix": "subCaption",
    "description": "Description: Sub-caption of the chart.\n      Type: String\n",
    "body": "\"subCaption\": \"\""
  },
  "XAxisName": {
    "prefix": "xAxisName",
    "description": "Description: X-axis title of the chart.\n      Type: String\n",
    "body": "\"xAxisName\": \"\""
  },
  "YAxisName": {
    "prefix": "yAxisName",
    "description": "Description: Y-axis title of the chart.\n      Type: String\n",
    "body": "\"yAxisName\": \"\""
  },
  "CaptionAlignment": {
    "prefix": "captionAlignment",
    "description": "Description: Sets horizontal alignment of caption\n      Type: String\n      Range: \"left\", \"center\", \"right\"",
    "body": "\"captionAlignment\": \"\""
  },
  "CaptionOnTop": {
    "prefix": "captionOnTop",
    "description": "Description: Whether caption should be on top of the data plot area\n      Type: Boolean\n      Range: 0/1",
    "body": "\"captionOnTop\": \"${1|1,0|}\""
  },
  "CaptionFontSize": {
    "prefix": "captionFontSize",
    "description": "Description: Sets the caption font size in pixels\n      Type: Number\n      Range: 6 - 72",
    "body": "\"captionFontSize\": \"\""
  },
  "SubCaptionFontSize": {
    "prefix": "subCaptionFontSize",
    "description": "Description: Sets the sub-caption font size (in pixels)\n      Type: Number\n      Range: 6 - 72",
    "body": "\"subCaptionFontSize\": \"\""
  },
  "CaptionFont": {
    "prefix": "captionFont",
    "description": "Description: Sets the caption font family\n      Type: String\n      Range: Font Name",
    "body": "\"captionFont\": \"\""
  },
  "SubCaptionFont": {
    "prefix": "subCaptionFont",
    "description": "Description: Sets the sub-caption font family\n      Type: String\n      Range: Font Name",
    "body": "\"subCaptionFont\": \"\""
  },
  "CaptionFontColor": {
    "prefix": "captionFontColor",
    "description": "Description: Sets the caption font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"captionFontColor\": \"\""
  },
  "SubCaptionFontColor": {
    "prefix": "subCaptionFontColor",
    "description": "Description: Sets the sub-caption font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"subCaptionFontColor\": \"\""
  },
  "CaptionFontBold": {
    "prefix": "captionFontBold",
    "description": "Description: Whether the caption font should be displayed in bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"captionFontBold\": \"${1|1,0|}\""
  },
  "SubCaptionFontBold": {
    "prefix": "subCaptionFontBold",
    "description": "Description: Whether the sub caption font should be displayed in bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"subCaptionFontBold\": \"${1|1,0|}\""
  },
  "AlignCaptionWithCanvas": {
    "prefix": "alignCaptionWithCanvas",
    "description": "Description: Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area\n      Type: Boolean\n      Range: 0/1",
    "body": "\"alignCaptionWithCanvas\": \"${1|1,0|}\""
  },
  "CaptionHorizontalPadding": {
    "prefix": "captionHorizontalPadding",
    "description": "Description: If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.\n      Type: Number\n      Range: In Pixels",
    "body": "\"captionHorizontalPadding\": \"\""
  },
  "ShowXAxisLine": {
    "prefix": "showXAxisLine",
    "description": "Description: This attribute if set to _0_, hides the x-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showXAxisLine\": \"${1|1,0|}\""
  },
  "XAxisLineColor": {
    "prefix": "xAxisLineColor",
    "description": "Description: Sets color of the x-axis of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisLineColor\": \"\""
  },
  "XAxisLineThickness": {
    "prefix": "xAxisLineThickness",
    "description": "Description: Sets the thickness of the x-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisLineThickness\": \"\""
  },
  "ShowYAxisLine": {
    "prefix": "showYAxisLine",
    "description": "Description: This attribute if set to _0_, hides the y-axis of the chart. \n\n__Default value__: 1\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYAxisLine\": \"${1|1,0|}\""
  },
  "YAxisLineColor": {
    "prefix": "yAxisLineColor",
    "description": "Description: Sets color of the y-axis of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisLineColor\": \"\""
  },
  "YAxisLineThickness": {
    "prefix": "yAxisLineThickness",
    "description": "Description: Sets the thickness of the y-axis line of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisLineThickness\": \"\""
  },
  "ShowYAxisValues": {
    "prefix": "showYAxisValues",
    "description": "Description: FusionCharts XT y-axis is divided into vertical sections using div (divisional) lines. Each div line assumes a value based on its position. Using this attribute you can set whether to show those div line (y-axis) values or not. This attribute shows or hides the y-axis divisional lines and limits. The values of `showLimits` and `showDivLineValues`, if specified explicitly, overrides the value of this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showYAxisValues\": \"${1|1,0|}\""
  },
  "YAxisValuesStep": {
    "prefix": "yAxisValuesStep",
    "description": "Description: By default, all div lines show their values. However, you can opt to display every x(th) div line value using this attribute.\n      Type: Number\n      Range: 1 or above",
    "body": "\"yAxisValuesStep\": \"\""
  },
  "RotateYAxisName": {
    "prefix": "rotateYAxisName",
    "description": "Description: If you do not wish to rotate y-axis name, set this as 0. It specifically comes to use when you've the special characters (UTF-8) in your y-axis name that do not show up in rotated mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateYAxisName\": \"${1|1,0|}\""
  },
  "YAxisNameWidth": {
    "prefix": "yAxisNameWidth",
    "description": "Description: If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to y-axis name.\n      Type: Number\n      Range: (In Pixels)",
    "body": "\"yAxisNameWidth\": \"\""
  },
  "YAxisMinValue": {
    "prefix": "yAxisMinValue",
    "description": "Description: This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, it is automatically calculated by FusionCharts XT based on the data provided by you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"yAxisMinValue\": \"\""
  },
  "YAxisMaxValue": {
    "prefix": "yAxisMaxValue",
    "description": "Description: This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, it is automatically calculated by FusionCharts XT based on the data provided by you.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"yAxisMaxValue\": \"\""
  },
  "ForceYAxisValueDecimals": {
    "prefix": "forceYAxisValueDecimals",
    "description": "Description: Whether to forcefully attach decimal places to all y-axis values. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all y-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all y-axis numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceYAxisValueDecimals\": \"${1|1,0|}\""
  },
  "YAxisValueDecimals": {
    "prefix": "yAxisValueDecimals",
    "description": "Description: If you've opted to not adjust div lines, you can specify the div line values decimal precision using this attribute.\n      Type: Number\n      Range: 0-10",
    "body": "\"yAxisValueDecimals\": \"\""
  },
  "XAxisNameFontColor": {
    "prefix": "xAxisNameFontColor",
    "description": "Description: Sets the x-axis font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameFontColor\": \"\""
  },
  "XAxisNameFontSize": {
    "prefix": "xAxisNameFontSize",
    "description": "Description: Specifies the x-axis font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"xAxisNameFontSize\": \"\""
  },
  "XAxisNameFontBold": {
    "prefix": "xAxisNameFontBold",
    "description": "Description: Whether x-axis font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameFontBold\": \"${1|1,0|}\""
  },
  "XAxisNameFontItalic": {
    "prefix": "xAxisNameFontItalic",
    "description": "Description: Whether x-axis font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "XAxisNameBgColor": {
    "prefix": "xAxisNameBgColor",
    "description": "Description: Sets the background color for x-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameBgColor\": \"\""
  },
  "XAxisNameBorderColor": {
    "prefix": "xAxisNameBorderColor",
    "description": "Description: Sets the border around the x-axis text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"xAxisNameBorderColor\": \"\""
  },
  "XAxisNameAlpha": {
    "prefix": "xAxisNameAlpha",
    "description": "Description: Sets the x-axis alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameAlpha\": \"\""
  },
  "XAxisNameFontAlpha": {
    "prefix": "xAxisNameFontAlpha",
    "description": "Description: Sets the x-axis font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameFontAlpha\": \"\""
  },
  "XAxisNameBgAlpha": {
    "prefix": "xAxisNameBgAlpha",
    "description": "Description: Sets the x-axis background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameBgAlpha\": \"\""
  },
  "XAxisNameBorderAlpha": {
    "prefix": "xAxisNameBorderAlpha",
    "description": "Description: Sets the x-axis border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"xAxisNameBorderAlpha\": \"\""
  },
  "XAxisNameBorderPadding": {
    "prefix": "xAxisNameBorderPadding",
    "description": "Description: Sets the x-axis border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderPadding\": \"\""
  },
  "XAxisNameBorderRadius": {
    "prefix": "xAxisNameBorderRadius",
    "description": "Description: Sets the x-axis border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderRadius\": \"\""
  },
  "XAxisNameBorderThickness": {
    "prefix": "xAxisNameBorderThickness",
    "description": "Description: Sets the x-axis border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNameBorderThickness\": \"\""
  },
  "XAxisNameBorderDashed": {
    "prefix": "xAxisNameBorderDashed",
    "description": "Description: Whether the border around the x-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"xAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "XAxisNameBorderDashLen": {
    "prefix": "xAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the x-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"xAxisNameBorderDashLen\": \"\""
  },
  "XAxisNameBorderDashGap": {
    "prefix": "xAxisNameBorderDashGap",
    "description": "Description: Sets the gap between consecutive dashes when the border around the x-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"xAxisNameBorderDashGap\": \"\""
  },
  "YAxisNameFont": {
    "prefix": "yAxisNameFont",
    "description": "Description: Sets the y-axis (primary / secondary) font family for the text\n      Type: String\n      Range: Font Name",
    "body": "\"yAxisNameFont\": \"\""
  },
  "YAxisNameFontColor": {
    "prefix": "yAxisNameFontColor",
    "description": "Description: Sets the y-axis (primary / secondary) font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameFontColor\": \"\""
  },
  "YAxisNameFontSize": {
    "prefix": "yAxisNameFontSize",
    "description": "Description: Specifies the y-axis (primary / secondary) font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"yAxisNameFontSize\": \"\""
  },
  "YAxisNameFontBold": {
    "prefix": "yAxisNameFontBold",
    "description": "Description: Whether y-axis (primary / secondary) font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameFontBold\": \"${1|1,0|}\""
  },
  "YAxisNameFontItalic": {
    "prefix": "yAxisNameFontItalic",
    "description": "Description: Whether y-axis (primary / secondary) font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameFontItalic\": \"${1|1,0|}\""
  },
  "YAxisNameBgColor": {
    "prefix": "yAxisNameBgColor",
    "description": "Description: Sets the background color for y-axis (primary / secondary) text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameBgColor\": \"\""
  },
  "YAxisNameBorderColor": {
    "prefix": "yAxisNameBorderColor",
    "description": "Description: Sets the border around the y-axis (primary / secondary) text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"yAxisNameBorderColor\": \"\""
  },
  "YAxisNameAlpha": {
    "prefix": "yAxisNameAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameAlpha\": \"\""
  },
  "YAxisNameFontAlpha": {
    "prefix": "yAxisNameFontAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameFontAlpha\": \"\""
  },
  "YAxisNameBgAlpha": {
    "prefix": "yAxisNameBgAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameBgAlpha\": \"\""
  },
  "YAxisNameBorderAlpha": {
    "prefix": "yAxisNameBorderAlpha",
    "description": "Description: Sets the y-axis (primary / secondary) border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"yAxisNameBorderAlpha\": \"\""
  },
  "YAxisNameBorderPadding": {
    "prefix": "yAxisNameBorderPadding",
    "description": "Description: Sets the y-axis (primary / secondary) border padding\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderPadding\": \"\""
  },
  "YAxisNameBorderRadius": {
    "prefix": "yAxisNameBorderRadius",
    "description": "Description: Sets the y-axis (primary / secondary) border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderRadius\": \"\""
  },
  "YAxisNameBorderThickness": {
    "prefix": "yAxisNameBorderThickness",
    "description": "Description: Sets the y-axis (primary / secondary) border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNameBorderThickness\": \"\""
  },
  "YAxisNameBorderDashed": {
    "prefix": "yAxisNameBorderDashed",
    "description": "Description: Whether the border around the y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"yAxisNameBorderDashed\": \"${1|1,0|}\""
  },
  "YAxisNameBorderDashLen": {
    "prefix": "yAxisNameBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"yAxisNameBorderDashLen\": \"\""
  },
  "YAxisNameBorderDashGap": {
    "prefix": "yAxisNameBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the y-axis name is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"yAxisNameBorderDashGap\": \"\""
  },
  "BgColor": {
    "prefix": "bgColor",
    "description": "Description: This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"bgColor\": \"\""
  },
  "BgAlpha": {
    "prefix": "bgAlpha",
    "description": "Description: Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bgAlpha\": \"\""
  },
  "BgRatio": {
    "prefix": "bgRatio",
    "description": "Description: If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bgRatio\": \"\""
  },
  "BgAngle": {
    "prefix": "bgAngle",
    "description": "Description: Sets the angle of the background color, in case of a gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"bgAngle\": \"\""
  },
  "BgImage": {
    "prefix": "bgImage",
    "description": "Description: To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.\n      Type: String\n",
    "body": "\"bgImage\": \"\""
  },
  "BgImageAlpha": {
    "prefix": "bgImageAlpha",
    "description": "Description: This attribute specifies the opacity for the loaded background image.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"bgImageAlpha\": \"\""
  },
  "BgImageDisplayMode": {
    "prefix": "bgImageDisplayMode",
    "description": "Description: Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.\n      Type: String\n      Range: stretch, tile, fit, fill, center, none",
    "body": "\"bgImageDisplayMode\": \"\""
  },
  "BgImageVAlign": {
    "prefix": "bgImageVAlign",
    "description": "Description: Helps you to vertically align the background image.\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"bgImageVAlign\": \"\""
  },
  "BgImageHAlign": {
    "prefix": "bgImageHAlign",
    "description": "Description: Helps you to horizontally align the background image.\n      Type: String\n      Range: left, middle, right",
    "body": "\"bgImageHAlign\": \"\""
  },
  "BgImageScale": {
    "prefix": "bgImageScale",
    "description": "Description: Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.\n      Type: Number\n      Range: 0-300",
    "body": "\"bgImageScale\": \"\""
  },
  "CanvasBgColor": {
    "prefix": "canvasBgColor",
    "description": "Description: This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"canvasBgColor\": \"\""
  },
  "CanvasBgAlpha": {
    "prefix": "canvasBgAlpha",
    "description": "Description: This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"canvasBgAlpha\": \"\""
  },
  "CanvasBgRatio": {
    "prefix": "canvasBgRatio",
    "description": "Description: When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.\n      Type: Numbers separated by comma\n      Range: 0 - 100",
    "body": "\"canvasBgRatio\": \"\""
  },
  "CanvasBgAngle": {
    "prefix": "canvasBgAngle",
    "description": "Description: Helps you specify canvas background angle in case of gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"canvasBgAngle\": \"\""
  },
  "CanvasBorderColor": {
    "prefix": "canvasBorderColor",
    "description": "Description: Lets you specify canvas border color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"canvasBorderColor\": \"\""
  },
  "CanvasBorderThickness": {
    "prefix": "canvasBorderThickness",
    "description": "Description: Lets you specify canvas border thickness.\n      Type: Number\n      Range: 0-5",
    "body": "\"canvasBorderThickness\": \"\""
  },
  "CanvasBorderAlpha": {
    "prefix": "canvasBorderAlpha",
    "description": "Description: Lets you control transparency of canvas border.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"canvasBorderAlpha\": \"\""
  },
  "ShowBorder": {
    "prefix": "showBorder",
    "description": "Description: Whether to show a border around the chart or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showBorder\": \"${1|1,0|}\""
  },
  "BorderColor": {
    "prefix": "borderColor",
    "description": "Description: Border color of the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"borderColor\": \"\""
  },
  "BorderThickness": {
    "prefix": "borderThickness",
    "description": "Description: Border thickness of the chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"borderThickness\": \"\""
  },
  "BorderAlpha": {
    "prefix": "borderAlpha",
    "description": "Description: Border alpha of the chart.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"borderAlpha\": \"\""
  },
  "ShowVLineLabelBorder": {
    "prefix": "showVLineLabelBorder",
    "description": "Description: If you've opted to show a label for any of your vLines in the chart, you can collectively configure whether to show border for all such labels using this attribute. If you want to show label border for just a particular vLine, you can over-ride this value by specifying border configuration for that specific vLine.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showVLineLabelBorder\": \"${1|1,0|}\""
  },
  "RotateVLineLabels": {
    "prefix": "rotateVLineLabels",
    "description": "Description: This attribute lets you set whether the vline labels will show up as rotated labels on the chart. \n\nDefault value: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"rotateVLineLabels\": \"${1|1,0|}\""
  },
  "LogoURL": {
    "prefix": "logoURL",
    "description": "Description: You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.\n      Type: String\n      Range: URL",
    "body": "\"logoURL\": \"\""
  },
  "LogoLeftMargin": {
    "prefix": "logoLeftMargin",
    "description": "Description: This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"logoLeftMargin\": \"\""
  },
  "LogoTopMargin": {
    "prefix": "logoTopMargin",
    "description": "Description: This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"logoTopMargin\": \"\""
  },
  "LogoPosition": {
    "prefix": "logoPosition",
    "description": "Description: Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen\n      Type: String\n      Range: TL, TR, BL, BR, CC",
    "body": "\"logoPosition\": \"\""
  },
  "LogoAlpha": {
    "prefix": "logoAlpha",
    "description": "Description: Once the logo has loaded on the chart, you can configure its opacity using this attribute.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"logoAlpha\": \"\""
  },
  "LogoScale": {
    "prefix": "logoScale",
    "description": "Description: You can also change the scale of an externally loaded logo at run-time by specifying a value for this parameter.\n      Type: Number\n      Range: 0-300",
    "body": "\"logoScale\": \"\""
  },
  "LogoLink": {
    "prefix": "logoLink",
    "description": "Description: If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts Link format, allowing you to link to new windows, pop-ups, frames etc.\n      Type: String\n      Range: URL",
    "body": "\"logoLink\": \"\""
  },
  "UseRoundEdges": {
    "prefix": "useRoundEdges",
    "description": "Description: If you wish to plot columns with round edges and fill them with a glass effect gradient, set this attribute to 1. The following functionalities will not work when this attribute is set to 1: `showShadow` attribute doesn't work any more. If you want to remove shadow from columns, you'll have to over-ride the shadow with a new shadow style (applied to DATAPLOT) with alpha as 0. Plot fill properties like gradient color, angle etc. will not work any more, as the colors for gradient are now calculated by the chart itself. Plot border properties also do not work in this mode. Also, you cannot render the border as dashed in this mode.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"useRoundEdges\": \"${1|1,0|}\""
  },
  "ShowPlotBorder": {
    "prefix": "showPlotBorder",
    "description": "Description: Whether the column, area, pie etc. border will show up.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showPlotBorder\": \"${1|1,0|}\""
  },
  "PlotBorderColor": {
    "prefix": "plotBorderColor",
    "description": "Description: Color for column, area, pie border\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotBorderColor\": \"\""
  },
  "PlotBorderThickness": {
    "prefix": "plotBorderThickness",
    "description": "Description: Thickness for column, area, pie border\n      Type: Number\n      Range: 0-5",
    "body": "\"plotBorderThickness\": \"\""
  },
  "PlotBorderAlpha": {
    "prefix": "plotBorderAlpha",
    "description": "Description: Alpha for column, area, pie border\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotBorderAlpha\": \"\""
  },
  "PlotBorderDashed": {
    "prefix": "plotBorderDashed",
    "description": "Description: Whether the border around the data plots should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotBorderDashed\": \"${1|1,0|}\""
  },
  "PlotBorderDashLen": {
    "prefix": "plotBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderDashLen\": \"\""
  },
  "PlotBorderDashGap": {
    "prefix": "plotBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderDashGap\": \"\""
  },
  "PlotFillAngle": {
    "prefix": "plotFillAngle",
    "description": "Description: If you've opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill angle for gradient.\n      Type: Number\n      Range: 0-360",
    "body": "\"plotFillAngle\": \"\""
  },
  "PlotFillRatio": {
    "prefix": "plotFillRatio",
    "description": "Description: If you've opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the ratio for gradient.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotFillRatio\": \"\""
  },
  "PlotFillAlpha": {
    "prefix": "plotFillAlpha",
    "description": "Description: If you've opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill alpha for gradient.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"plotFillAlpha\": \"\""
  },
  "PlotGradientColor": {
    "prefix": "plotGradientColor",
    "description": "Description: You can globally add a gradient color to the entire plot of chart by specifying the second color as this attribute. For example, if you've specified individual colors for your columns and now you want a gradient that ends in white. You need to specify FFFFFF (white) as this color and the chart will now draw plots as gradient.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotGradientColor\": \"\""
  },
  "UsePlotGradientColor": {
    "prefix": "usePlotGradientColor",
    "description": "Description: Gradient color is a color added globally to the entire plot of chart by specifying the second color in an attribute. This attribute sets the gradient color to _true_. \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"usePlotGradientColor\": \"${1|1,0|}\""
  },
  "ValueFont": {
    "prefix": "valueFont",
    "description": "Description: Sets the font of the values in the chart\n      Type: String\n      Range: Font Name",
    "body": "\"valueFont\": \"\""
  },
  "ValueFontColor": {
    "prefix": "valueFontColor",
    "description": "Description: Specifies the value font color\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueFontColor\": \"\""
  },
  "ValueFontSize": {
    "prefix": "valueFontSize",
    "description": "Description: Specifies the value font size\n      Type: Number\n      Range: 6 - 72",
    "body": "\"valueFontSize\": \"\""
  },
  "ValueFontBold": {
    "prefix": "valueFontBold",
    "description": "Description: Whether value font should be bold\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueFontBold\": \"${1|1,0|}\""
  },
  "ValueFontItalic": {
    "prefix": "valueFontItalic",
    "description": "Description: Whether value font should be italicized\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueFontItalic\": \"${1|1,0|}\""
  },
  "ValueBgColor": {
    "prefix": "valueBgColor",
    "description": "Description: Sets the background color for value text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueBgColor\": \"\""
  },
  "ValueBorderColor": {
    "prefix": "valueBorderColor",
    "description": "Description: Sets the border color around the value text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"valueBorderColor\": \"\""
  },
  "ValueAlpha": {
    "prefix": "valueAlpha",
    "description": "Description: Sets the value alpha including font and background\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueAlpha\": \"\""
  },
  "ValueFontAlpha": {
    "prefix": "valueFontAlpha",
    "description": "Description: Sets the value font alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueFontAlpha\": \"\""
  },
  "ValueBgAlpha": {
    "prefix": "valueBgAlpha",
    "description": "Description: Sets the value background alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueBgAlpha\": \"\""
  },
  "ValueBorderAlpha": {
    "prefix": "valueBorderAlpha",
    "description": "Description: Sets the value border alpha\n      Type: Number\n      Range: 0 - 100",
    "body": "\"valueBorderAlpha\": \"\""
  },
  "ValueBorderThickness": {
    "prefix": "valueBorderThickness",
    "description": "Description: Sets the value border thickness\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderThickness\": \"\""
  },
  "ValueBorderPadding": {
    "prefix": "valueBorderPadding",
    "description": "Description: Sets the padding between the value and its surrounding border\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderPadding\": \"\""
  },
  "ValueBorderRadius": {
    "prefix": "valueBorderRadius",
    "description": "Description: Sets the value border radius\n      Type: Number\n      Range: In Pixels",
    "body": "\"valueBorderRadius\": \"\""
  },
  "ValueBorderDashed": {
    "prefix": "valueBorderDashed",
    "description": "Description: Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueBorderDashed\": \"${1|1,0|}\""
  },
  "ValueBorderDashLen": {
    "prefix": "valueBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the data values is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"valueBorderDashLen\": \"\""
  },
  "ValueBorderDashGap": {
    "prefix": "valueBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"valueBorderDashGap\": \"\""
  },
  "NumDivLines": {
    "prefix": "numDivLines",
    "description": "Description: Number of horizontal axis division lines that you want on the chart.\n      Type: Number\n      Range: Numeric value > 0",
    "body": "\"numDivLines\": \"\""
  },
  "DivLineColor": {
    "prefix": "divLineColor",
    "description": "Description: Color for divisional lines.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"divLineColor\": \"\""
  },
  "DivLineThickness": {
    "prefix": "divLineThickness",
    "description": "Description: Thickness of divisional lines.\n      Type: Number\n      Range: 1-5",
    "body": "\"divLineThickness\": \"\""
  },
  "DivLineAlpha": {
    "prefix": "divLineAlpha",
    "description": "Description: Alpha of divisional lines.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"divLineAlpha\": \"\""
  },
  "DivLineDashed": {
    "prefix": "divLineDashed",
    "description": "Description: Whether the divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (divisional lines rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"divLineDashed\": \"${1|1,0|}\""
  },
  "DivLineDashLen": {
    "prefix": "divLineDashLen",
    "description": "Description: Sets the length of each dash when divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"divLineDashLen\": \"\""
  },
  "DivLineDashGap": {
    "prefix": "divLineDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when divisional lines are rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"divLineDashGap\": \"\""
  },
  "ZeroPlaneColor": {
    "prefix": "zeroPlaneColor",
    "description": "Description: Color for the Zero Plane. Zero Plane is the line/plane that appears at position 0 on the y-axis, when negative data is being shown on the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"zeroPlaneColor\": \"\""
  },
  "ZeroPlaneThickness": {
    "prefix": "zeroPlaneThickness",
    "description": "Description: Thickness of zero plane.\n      Type: Number\n      Range: In Pixels",
    "body": "\"zeroPlaneThickness\": \"\""
  },
  "ZeroPlaneAlpha": {
    "prefix": "zeroPlaneAlpha",
    "description": "Description: Alpha of zero plane.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"zeroPlaneAlpha\": \"\""
  },
  "ShowZeroPlaneValue": {
    "prefix": "showZeroPlaneValue",
    "description": "Description: Allows you to show or hide the value on which the zero plane exists on the y-axis. By default, the value is displayed.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showZeroPlaneValue\": \"${1|1,0|}\""
  },
  "ShowAlternateHGridColor": {
    "prefix": "showAlternateHGridColor",
    "description": "Description: Whether to show alternate colored horizontal grid bands.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showAlternateHGridColor\": \"${1|1,0|}\""
  },
  "AlternateHGridColor": {
    "prefix": "alternateHGridColor",
    "description": "Description: Color of the alternate horizontal grid bands.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"alternateHGridColor\": \"\""
  },
  "AlternateHGridAlpha": {
    "prefix": "alternateHGridAlpha",
    "description": "Description: Alpha (transparency) of the alternate horizontal grid bands.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"alternateHGridAlpha\": \"\""
  },
  "FormatNumber": {
    "prefix": "formatNumber",
    "description": "Description: This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"formatNumber\": \"${1|1,0|}\""
  },
  "FormatNumberScale": {
    "prefix": "formatNumberScale",
    "description": "Description: Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if `formatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"formatNumberScale\": \"${1|1,0|}\""
  },
  "DefaultNumberScale": {
    "prefix": "defaultNumberScale",
    "description": "Description: The default unit of the numbers that you're providing to the chart.\n      Type: String\n",
    "body": "\"defaultNumberScale\": \"\""
  },
  "NumberScaleUnit": {
    "prefix": "numberScaleUnit",
    "description": "Description: Unit of each block of the scale.\n      Type: String\n",
    "body": "\"numberScaleUnit\": \"\""
  },
  "NumberScaleValue": {
    "prefix": "numberScaleValue",
    "description": "Description: Range of the various blocks that constitute the scale.\n      Type: String\n",
    "body": "\"numberScaleValue\": \"\""
  },
  "ForceNumberScale": {
    "prefix": "forceNumberScale",
    "description": "Description: If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceNumberScale\": \"${1|1,0|}\""
  },
  "ScaleRecursively": {
    "prefix": "scaleRecursively",
    "description": "Description: Whether recursive scaling should be applied.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"scaleRecursively\": \"${1|1,0|}\""
  },
  "MaxScaleRecursion": {
    "prefix": "maxScaleRecursion",
    "description": "Description: How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.\n      Type: Number\n",
    "body": "\"maxScaleRecursion\": \"\""
  },
  "ScaleSeparator": {
    "prefix": "scaleSeparator",
    "description": "Description: What character to use to separate the scales that are generated after recursion?\n      Type: String\n",
    "body": "\"scaleSeparator\": \"\""
  },
  "NumberPrefix": {
    "prefix": "numberPrefix",
    "description": "Description: Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.\n      Type: String\n      Range: Character",
    "body": "\"numberPrefix\": \"\""
  },
  "NumberSuffix": {
    "prefix": "numberSuffix",
    "description": "Description: Using this attribute, you could add a suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.\n      Type: String\n      Range: Character",
    "body": "\"numberSuffix\": \"\""
  },
  "DecimalSeparator": {
    "prefix": "decimalSeparator",
    "description": "Description: This attribute helps you specify the character to be used as the decimal separator in a number.\n      Type: String\n      Range: Character",
    "body": "\"decimalSeparator\": \"\""
  },
  "ThousandSeparator": {
    "prefix": "thousandSeparator",
    "description": "Description: This attribute helps you specify the character to be used as the thousands separator in a number.\n      Type: String\n      Range: Character",
    "body": "\"thousandSeparator\": \"\""
  },
  "ThousandSeparatorPosition": {
    "prefix": "thousandSeparatorPosition",
    "description": "Description: This option helps you specify the position of the thousand separator.\n      Type: Number\n      Range:  ",
    "body": "\"thousandSeparatorPosition\": \"\""
  },
  "InDecimalSeparator": {
    "prefix": "inDecimalSeparator",
    "description": "Description: In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, FusionCharts XT accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.\n      Type: String\n      Range: Character",
    "body": "\"inDecimalSeparator\": \"\""
  },
  "InThousandSeparator": {
    "prefix": "inThousandSeparator",
    "description": "Description: In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, FusionCharts XT accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.\n      Type: String\n      Range: Character",
    "body": "\"inThousandSeparator\": \"\""
  },
  "Decimals": {
    "prefix": "decimals",
    "description": "Description: Number of decimal places to which all numbers on the chart will be rounded to.\n      Type: Number\n      Range: 0-10",
    "body": "\"decimals\": \"\""
  },
  "ForceDecimals": {
    "prefix": "forceDecimals",
    "description": "Description: Whether to add 0 padding at the end of decimal numbers. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all the numbers, set this attribute to 1.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"forceDecimals\": \"${1|1,0|}\""
  },
  "BaseFont": {
    "prefix": "baseFont",
    "description": "Description: This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.\n      Type: String\n      Range: Font Name",
    "body": "\"baseFont\": \"\""
  },
  "BaseFontSize": {
    "prefix": "baseFontSize",
    "description": "Description: This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"baseFontSize\": \"\""
  },
  "BaseFontColor": {
    "prefix": "baseFontColor",
    "description": "Description: This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"baseFontColor\": \"\""
  },
  "OutCnvBaseFont": {
    "prefix": "outCnvBaseFont",
    "description": "Description: This attribute sets the base font family of the chart text which lies outside the canvas i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font name provided here.\n      Type: String\n      Range: Font Name",
    "body": "\"outCnvBaseFont\": \"\""
  },
  "OutCnvBaseFontSize": {
    "prefix": "outCnvBaseFontSize",
    "description": "Description: This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font size provided here.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"outCnvBaseFontSize\": \"\""
  },
  "OutCnvBaseFontColor": {
    "prefix": "outCnvBaseFontColor",
    "description": "Description: This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font color provided here.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"outCnvBaseFontColor\": \"\""
  },
  "DrawCrossLine": {
    "prefix": "drawCrossLine",
    "description": "Description: This attribute sets a cross line (vertical line/area), when you hover a data plot. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"drawCrossLine\": \"${1|1,0|}\""
  },
  "CrossLineColor": {
    "prefix": "crossLineColor",
    "description": "Description: This attribute sets the color of the cross line. \n\nDefault value: __#EEEEEE__\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"crossLineColor\": \"\""
  },
  "CrossLineAlpha": {
    "prefix": "crossLineAlpha",
    "description": "Description: This attribute sets the opacity of the cross line. \n\nDefault value: __50__\n      Type: Number\n      Range: 0 - 100",
    "body": "\"crossLineAlpha\": \"\""
  },
  "CrossLineAnimation": {
    "prefix": "crossLineAnimation",
    "description": "Description: This attributes enables the animation for the cross line. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"crossLineAnimation\": \"${1|1,0|}\""
  },
  "CrossLineAnimationDuration": {
    "prefix": "crossLineAnimationDuration",
    "description": "Description: This attribute sets the animation duration of the cross line. \n\nDefault value: __0.09 seconds__\n      Type: Number\n      Range: In seconds",
    "body": "\"crossLineAnimationDuration\": \"\""
  },
  "PlotColorinTooltip": {
    "prefix": "plotColorinTooltip",
    "description": "Description: This attribute displays the color of each plot with their labels in tooltip. \n\nDefault value: __0__\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotColorinTooltip\": \"${1|1,0|}\""
  },
  "ShowToolTip": {
    "prefix": "showToolTip",
    "description": "Description: Whether to show tool tip on chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolTip\": \"${1|1,0|}\""
  },
  "ToolTipBgColor": {
    "prefix": "toolTipBgColor",
    "description": "Description: Background color for tool tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipBgColor\": \"\""
  },
  "ToolTipColor": {
    "prefix": "toolTipColor",
    "description": "Description: Font color for the tool-tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipColor\": \"\""
  },
  "ToolTipBorderColor": {
    "prefix": "toolTipBorderColor",
    "description": "Description: Border color for tool tip.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"toolTipBorderColor\": \"\""
  },
  "TooltipBorderAlpha": {
    "prefix": "tooltipBorderAlpha",
    "description": "Description: Sets the border transparency for tool tip.\n      Type: NUmber\n      Range: 0 - 100",
    "body": "\"tooltipBorderAlpha\": \"\""
  },
  "ToolTipSepChar": {
    "prefix": "toolTipSepChar",
    "description": "Description: The character specified as the value of this attribute separates the name and value displayed in tool tip.\n      Type: String\n",
    "body": "\"toolTipSepChar\": \"\""
  },
  "ShowToolTipShadow": {
    "prefix": "showToolTipShadow",
    "description": "Description: Whether to show shadow for tool-tips on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolTipShadow\": \"${1|1,0|}\""
  },
  "Plottooltext": {
    "prefix": "plottooltext",
    "description": "Description: Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.\n      Type: String\n",
    "body": "\"plottooltext\": \"\""
  },
  "ToolbarPosition": {
    "prefix": "toolbarPosition",
    "description": "Description: Where to position the toolbar on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen\n      Type: String\n      Range: TL, TR, BL, BR, CC",
    "body": "\"toolbarPosition\": \"\""
  },
  "ToolbarX": {
    "prefix": "toolbarX",
    "description": "Description: Sets the toolbox position on the chart with respect to x-axis.\n      Type: Number\n",
    "body": "\"toolbarX\": \"\""
  },
  "ToolbarY": {
    "prefix": "toolbarY",
    "description": "Description: Sets the toolbox position on the chart with respect to y-axis.\n      Type: Number\n",
    "body": "\"toolbarY\": \"\""
  },
  "ToolbarHAlign": {
    "prefix": "toolbarHAlign",
    "description": "Description: Sets the horizontal alignment of the toolbar on the chart.\n      Type: String\n      Range: Left, Right",
    "body": "\"toolbarHAlign\": \"\""
  },
  "ToolbarVAlign": {
    "prefix": "toolbarVAlign",
    "description": "Description: Sets the vertical alignment of the toolbar on the chart\n      Type: String\n      Range: Top, Bottom",
    "body": "\"toolbarVAlign\": \"\""
  },
  "ToolbarButtonColor": {
    "prefix": "toolbarButtonColor",
    "description": "Description: Sets the color of the toolbar buttons.\n      Type: Color\n      Range: Any (color code without the # prefix)",
    "body": "\"toolbarButtonColor\": \"\""
  },
  "ShowToolBarButtonTooltext": {
    "prefix": "showToolBarButtonTooltext",
    "description": "Description: Enables/disables display of tooltips for toolbar buttons.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showToolBarButtonTooltext\": \"${1|1,0|}\""
  },
  "ToolbarButtonScale": {
    "prefix": "toolbarButtonScale",
    "description": "Description: You can change the scale of the toolbar by specifying a value for this attribute.\n      Type: Number\n",
    "body": "\"toolbarButtonScale\": \"\""
  },
  "ExportEnabled": {
    "prefix": "exportEnabled",
    "description": "Description: Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportEnabled\": \"${1|1,0|}\""
  },
  "ExportAction": {
    "prefix": "exportAction",
    "description": "Description: In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download\n      Type: String\n      Range: 'save' or 'download'",
    "body": "\"exportAction\": \"\""
  },
  "ExportHandler": {
    "prefix": "exportHandler",
    "description": "Description: In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).\n      Type: String\n",
    "body": "\"exportHandler\": \"\""
  },
  "ExportFormats": {
    "prefix": "exportFormats",
    "description": "Description: Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`\n      Type: String\n",
    "body": "\"exportFormats\": \"\""
  },
  "ExportAtClientSide": {
    "prefix": "exportAtClientSide",
    "description": "Description: This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportAtClientSide\": \"${1|1,0|}\""
  },
  "ExportShowMenuItem": {
    "prefix": "exportShowMenuItem",
    "description": "Description: Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"exportShowMenuItem\": \"${1|1,0|}\""
  },
  "ExportTargetWindow": {
    "prefix": "exportTargetWindow",
    "description": "Description: In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self\n      Type: String\n      Range: '_self' or '_blank'",
    "body": "\"exportTargetWindow\": \"\""
  },
  "ExportFileName": {
    "prefix": "exportFileName",
    "description": "Description: Using this attribute you can specify the name (excluding the extension) of the output (export) file.\n      Type: String\n",
    "body": "\"exportFileName\": \"\""
  },
  "ShowHoverEffect": {
    "prefix": "showHoverEffect",
    "description": "Description: Whether to enable hover effect on charts for all elements\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showHoverEffect\": \"${1|1,0|}\""
  },
  "PlotHoverEffect": {
    "prefix": "plotHoverEffect",
    "description": "Description: Whether to enable hover effect on charts for data plots (e.g., column, pie) only\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotHoverEffect\": \"${1|1,0|}\""
  },
  "PlotFillHoverColor": {
    "prefix": "plotFillHoverColor",
    "description": "Description: Specifies the hover color for the data plots\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotFillHoverColor\": \"\""
  },
  "PlotFillHoverAlpha": {
    "prefix": "plotFillHoverAlpha",
    "description": "Description: Specifies the hover alpha for data plots\n      Type: Number\n      Range: 1 - 100",
    "body": "\"plotFillHoverAlpha\": \"\""
  },
  "ColumnHoverColor": {
    "prefix": "columnHoverColor",
    "description": "Description: This attribute specifies the hover color for the columns.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"columnHoverColor\": \"\""
  },
  "ColumnHoverAlpha": {
    "prefix": "columnHoverAlpha",
    "description": "Description: This attribute specifies the transparency of the column when you hover.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"columnHoverAlpha\": \"\""
  },
  "PlotHoverGradientColor": {
    "prefix": "plotHoverGradientColor",
    "description": "Description: Specifies the gradient color for the data plots when hovered. For example, if you've specified individual colors and now you want hover color that ends in white, You need to specify it.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotHoverGradientColor\": \"\""
  },
  "PlotHoverRatio": {
    "prefix": "plotHoverRatio",
    "description": "Description: Helps you specify the ratio of gradient colors when hovered.\n      Type: Number\n",
    "body": "\"plotHoverRatio\": \"\""
  },
  "PlotHoverAngle": {
    "prefix": "plotHoverAngle",
    "description": "Description: This attribute specifies the angle of the gradient color when hovered.\n      Type: Number\n",
    "body": "\"plotHoverAngle\": \"\""
  },
  "PlotBorderHoverColor": {
    "prefix": "plotBorderHoverColor",
    "description": "Description: Sets the color of the border of plot when hovered.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"plotBorderHoverColor\": \"\""
  },
  "PlotBorderHoverThickness": {
    "prefix": "plotBorderHoverThickness",
    "description": "Description: Sets the thickness of the border of plot when hovered.\n      Type: Number\n      Range: In Pixels",
    "body": "\"plotBorderHoverThickness\": \"\""
  },
  "PlotBorderHoverDashed": {
    "prefix": "plotBorderHoverDashed",
    "description": "Description: When a data plot is hovered, this attribute is used to specify whether the data plot border will be rendered as a dashed line. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"plotBorderHoverDashed\": \"${1|1,0|}\""
  },
  "PlotBorderHoverDashLen": {
    "prefix": "plotBorderHoverDashLen",
    "description": "Description: When a data plot is hovered, this attribute is used to set the length of each dash if the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderHoverDashLen\": \"\""
  },
  "PlotBorderHoverDashGap": {
    "prefix": "plotBorderHoverDashGap",
    "description": "Description: When a data plot is hovered, this attribute is used to set the gap between consecutive dashes if the border around the data plots are rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"plotBorderHoverDashGap\": \"\""
  },
  "LabelFont": {
    "prefix": "labelFont",
    "description": "Description: Sets the x-axis label font family for the text.\n      Type: String\n      Range: Font Name",
    "body": "\"labelFont\": \"\""
  },
  "LabelFontColor": {
    "prefix": "labelFontColor",
    "description": "Description: Sets the x-axis label font color.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelFontColor\": \"\""
  },
  "LabelFontSize": {
    "prefix": "labelFontSize",
    "description": "Description: Specifies the x-axis label font size.\n      Type: Number\n      Range: 6 - 72",
    "body": "\"labelFontSize\": \"\""
  },
  "LabelFontBold": {
    "prefix": "labelFontBold",
    "description": "Description: Flag indicating whether x-axis label font should be bold or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelFontBold\": \"${1|1,0|}\""
  },
  "LabelFontItalic": {
    "prefix": "labelFontItalic",
    "description": "Description: Flag indicating whether x-axis label font should be italicized or not.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelFontItalic\": \"${1|1,0|}\""
  },
  "LabelBgColor": {
    "prefix": "labelBgColor",
    "description": "Description: Sets the background color for x-axis label text.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelBgColor\": \"\""
  },
  "LabelBorderColor": {
    "prefix": "labelBorderColor",
    "description": "Description: Sets the color of the border around the x-axis label text.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"labelBorderColor\": \"\""
  },
  "LabelAlpha": {
    "prefix": "labelAlpha",
    "description": "Description: Sets the x-axis label alpha for both font and background.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelAlpha\": \"\""
  },
  "LabelBgAlpha": {
    "prefix": "labelBgAlpha",
    "description": "Description: Sets the x-axis label background alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelBgAlpha\": \"\""
  },
  "LabelBorderAlpha": {
    "prefix": "labelBorderAlpha",
    "description": "Description: Sets the x-axis label border alpha.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"labelBorderAlpha\": \"\""
  },
  "LabelBorderPadding": {
    "prefix": "labelBorderPadding",
    "description": "Description: Sets the x-axis label border padding.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderPadding\": \"\""
  },
  "LabelBorderRadius": {
    "prefix": "labelBorderRadius",
    "description": "Description: Sets the x-axis label border radius.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderRadius\": \"\""
  },
  "LabelBorderThickness": {
    "prefix": "labelBorderThickness",
    "description": "Description: Sets the x-axis label border thickness.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelBorderThickness\": \"\""
  },
  "LabelBorderDashed": {
    "prefix": "labelBorderDashed",
    "description": "Description: Whether the border around x-axis labels should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"labelBorderDashed\": \"${1|1,0|}\""
  },
  "LabelBorderDashLen": {
    "prefix": "labelBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the x-axis label is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"labelBorderDashLen\": \"\""
  },
  "LabelBorderDashGap": {
    "prefix": "labelBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around x-axis label is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"labelBorderDashGap\": \"\""
  },
  "LabelLink": {
    "prefix": "labelLink",
    "description": "Description: Sets the link for each individual x-axis label.\n      Type: URL\n",
    "body": "\"labelLink\": \"\""
  },
  "CaptionPadding": {
    "prefix": "captionPadding",
    "description": "Description: This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.\n      Type: Number\n      Range: In Pixels",
    "body": "\"captionPadding\": \"\""
  },
  "XAxisNamePadding": {
    "prefix": "xAxisNamePadding",
    "description": "Description: Using this, you can set the distance between the top end of x-axis title and the bottom end of data labels (or canvas, if data labels are not to be shown).\n      Type: Number\n      Range: In Pixels",
    "body": "\"xAxisNamePadding\": \"\""
  },
  "YAxisNamePadding": {
    "prefix": "yAxisNamePadding",
    "description": "Description: Using this, you can set the distance between the right end of y-axis title and the start of y-axis values (or canvas, if the y-axis values are not to be shown).\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisNamePadding\": \"\""
  },
  "YAxisValuesPadding": {
    "prefix": "yAxisValuesPadding",
    "description": "Description: This attribute helps you set the horizontal space between the canvas left edge and the y-axis values or trend line values (on left/right side). This is particularly useful, when you want more space between your canvas and y-axis values.\n      Type: Number\n      Range: In Pixels",
    "body": "\"yAxisValuesPadding\": \"\""
  },
  "LabelPadding": {
    "prefix": "labelPadding",
    "description": "Description: This attribute sets the vertical space between the labels and canvas bottom edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.\n      Type: Number\n      Range: In Pixels",
    "body": "\"labelPadding\": \"\""
  },
  "ValuePadding": {
    "prefix": "valuePadding",
    "description": "Description: It sets the vertical space between the end of columns and start of value textboxes. This basically helps you control the space you want between your columns/anchors and the value textboxes.\n      Type: Number\n      Range: In Pixels",
    "body": "\"valuePadding\": \"\""
  },
  "PlotSpacePercent": {
    "prefix": "plotSpacePercent",
    "description": "Description: On a column chart, there is spacing defined between two columns. By default, the spacing is set to 20% of canvas width. If you intend to increase or decrease the spacing between columns, you can do so using this attribute. For example, if you wanted all columns to stick to each other without any space in between, you can set `plotSpacePercent` to 0. Similarly, if you want very thin columns, you can set `plotSpacePercent` to its max value of 80.\n      Type: Number\n      Range: 0-80 (In Percent)",
    "body": "\"plotSpacePercent\": \"\""
  },
  "CanvasPadding": {
    "prefix": "canvasPadding",
    "description": "Description: Lets you set the space between the canvas border and first & last data points\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasPadding\": \"\""
  },
  "ChartLeftMargin": {
    "prefix": "chartLeftMargin",
    "description": "Description: Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"chartLeftMargin\": \"\""
  },
  "ChartRightMargin": {
    "prefix": "chartRightMargin",
    "description": "Description: Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"chartRightMargin\": \"\""
  },
  "ChartTopMargin": {
    "prefix": "chartTopMargin",
    "description": "Description: Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"chartTopMargin\": \"\""
  },
  "ChartBottomMargin": {
    "prefix": "chartBottomMargin",
    "description": "Description: Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.\n      Type: Number\n      Range: In Pixels",
    "body": "\"chartBottomMargin\": \"\""
  },
  "CanvasLeftMargin": {
    "prefix": "canvasLeftMargin",
    "description": "Description: This attribute lets you control the space between the start of chart canvas and the start (x) of chart. In case of 2D charts, the canvas is the visible rectangular box. In case of 3D charts, the canvas box is the imaginary box around the 3D canvas. Using this attribute, you can control the amount of empty space between the chart left side and canvas left side. By default, FusionCharts XT automatically calculates this space depending on the elements to be placed on the chart. However, if you want to over-ride this value with a higher value, you can use this attribute to specify the same. Please note that you cannot specify a margin lower than what has been calculated by the chart. This attribute is particularly useful, when you've multiple charts placed in a page and want all their canvas start position to align with each other - so in such a case, you can set same margin value (a value large enough that it doesn't get rejected by chart owing to it being lower than the calculated value) for all such charts in the page.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasLeftMargin\": \"\""
  },
  "CanvasRightMargin": {
    "prefix": "canvasRightMargin",
    "description": "Description: Like `canvasLeftMargin`, this attribute lets you set the space between end of canvas and end of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasRightMargin\": \"\""
  },
  "CanvasTopMargin": {
    "prefix": "canvasTopMargin",
    "description": "Description: Like `canvasLeftMargin`, this attribute lets you set the space between top of canvas and top of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasTopMargin\": \"\""
  },
  "CanvasBottomMargin": {
    "prefix": "canvasBottomMargin",
    "description": "Description: Like `canvasLeftMargin`, this attribute lets you set the space between bottom of canvas and bottom of chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"canvasBottomMargin\": \"\""
  },
  "Alpha": {
    "prefix": "alpha",
    "description": "Description: Alpha of the trend line.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"alpha\": \"\""
  },
  "Color": {
    "prefix": "color",
    "description": "Description: Color of the trend line and its associated text\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"color\": \"\""
  },
  "Dashed": {
    "prefix": "dashed",
    "description": "Description: Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"dashed\": \"${1|1,0|}\""
  },
  "DisplayValue": {
    "prefix": "displayValue",
    "description": "Description: If you want to display a string caption for the trend line by its side, you can use this attribute. Example: `displayValue='Last Month High'`. When you don't supply this attribute, it automatically takes the value of `startValue`.\n      Type: String\n",
    "body": "\"displayValue\": \"\""
  },
  "Label": {
    "prefix": "label",
    "description": "Description: Label for the vertical separator line, if to be shown. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.\n      Type: String\n      Range:  ",
    "body": "\"label\": \"\""
  },
  "Link": {
    "prefix": "link",
    "description": "Description: You can define links for individual data items. That enables the end user to click on data items (columns, lines, bars etc.) and drill down to other pages. To define the link for data items, use the link attribute. You can define links that open in same window, new window, pop-up window or frames. Please see &quot;Drill-Down &gt; Using JavaScript Functions as Links&quot; for more information. Also, you'll need to Url Encode all the special characters (like ? and &) present in the link.\n      Type: String\n",
    "body": "\"link\": \"\""
  },
  "ShowLabel": {
    "prefix": "showLabel",
    "description": "Description: You can individually opt to show/hide labels of individual data items using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabel\": \"${1|1,0|}\""
  },
  "ShowValue": {
    "prefix": "showValue",
    "description": "Description: You can individually opt to show/hide values of individual data items using this attribute.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showValue\": \"${1|1,0|}\""
  },
  "ToolText": {
    "prefix": "toolText",
    "description": "Description: Custom tool-text for this trendline/zone.\n      Type: String\n      Range:  ",
    "body": "\"toolText\": \"\""
  },
  "Value": {
    "prefix": "value",
    "description": "Description: Numerical value for the data item. This value will be plotted on the chart.\n      Type: Number\n",
    "body": "\"value\": \"\""
  },
  "HoverColor": {
    "prefix": "hoverColor",
    "description": "Description: This attribute can set the hover color for a particular data plot.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverColor\": \"\""
  },
  "HoverAlpha": {
    "prefix": "hoverAlpha",
    "description": "Description: This attribute sets the transparency for a particular data plot when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverAlpha\": \"\""
  },
  "HoverGradientColor": {
    "prefix": "hoverGradientColor",
    "description": "Description: This attribute sets the gradient color of the data plot on hover.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"hoverGradientColor\": \"\""
  },
  "HoverRatio": {
    "prefix": "hoverRatio",
    "description": "Description: This attribute sets the ratio of gradient colors when hovered.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"hoverRatio\": \"\""
  },
  "HoverAngle": {
    "prefix": "hoverAngle",
    "description": "Description: This attribute specifies the angle of the gradient color when hovered.\n      Type: Number\n      Range: 0 - 360",
    "body": "\"hoverAngle\": \"\""
  },
  "BorderHoverColor": {
    "prefix": "borderHoverColor",
    "description": "Description: This attribute sets the border color of a data plot on hover.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"borderHoverColor\": \"\""
  },
  "BorderHoverAlpha": {
    "prefix": "borderHoverAlpha",
    "description": "Description: This attribute sets the border's transparency for a data plot on hover.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"borderHoverAlpha\": \"\""
  },
  "BorderHoverThickness": {
    "prefix": "borderHoverThickness",
    "description": "Description: This attribute sets the thickness for a data plot's border on hover.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverThickness\": \"\""
  },
  "BorderHoverDashed": {
    "prefix": "borderHoverDashed",
    "description": "Description: When a data plot is hovered, this attribute is used to specify whether a data plot border will be rendered as a dashed line. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"borderHoverDashed\": \"${1|1,0|}\""
  },
  "BorderHoverDashLen": {
    "prefix": "borderHoverDashLen",
    "description": "Description: When a data plot is hovered, this attribute is used to set the length of each dash if the border around a data plot is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverDashLen\": \"\""
  },
  "BorderHoverDashGap": {
    "prefix": "borderHoverDashGap",
    "description": "Description: When a data plot is hovered, this attribute is used to set the gap between consecutive dashes if the border around a data plot is rendered using dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"borderHoverDashGap\": \"\""
  },
  "VLine": {
    "prefix": "vLine",
    "description": "Description: Set this attribute to __true__ to render a vertical data separator line.\n      Type: String\n",
    "body": "\"vLine\": \"\""
  },
  "Thickness": {
    "prefix": "thickness",
    "description": "Description: If you've opted to show the trend as a line, this attribute lets you define the thickness of trend line.\n      Type: Number\n      Range: In Pixels",
    "body": "\"thickness\": \"\""
  },
  "DashLen": {
    "prefix": "dashLen",
    "description": "Description: Sets the width of each dash when trendline is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"dashLen\": \"\""
  },
  "DashGap": {
    "prefix": "dashGap",
    "description": "Description: Sets the gap between consecutive dashes when trendline is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"dashGap\": \"\""
  },
  "ShowLabelBorder": {
    "prefix": "showLabelBorder",
    "description": "Description: Whether to show a border around the vLine label.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showLabelBorder\": \"${1|1,0|}\""
  },
  "LinePosition": {
    "prefix": "linePosition",
    "description": "Description: Helps configure the position of vertical line i.e., if a vLine is to be plotted between 2 points Jan and Feb, user can set any position between 0 and 1 to indicate the relative position of vLine between these two points (0 means Jan and 1 means Feb). By default, it’s 0.5 to show in between the points.\n      Type: Number\n      Range: 0-1",
    "body": "\"linePosition\": \"\""
  },
  "LabelPosition": {
    "prefix": "labelPosition",
    "description": "Description: Helps configure the position of the vLine label by setting a relative position between 0 and 1. In vertical charts, 0 means top of canvas and 1 means bottom. In horizontal charts, 0 means left of canvas and 1 means right.\n      Type: Number\n      Range: 0-1",
    "body": "\"labelPosition\": \"\""
  },
  "LabelHAlign": {
    "prefix": "labelHAlign",
    "description": "Description: Horizontal anchor point for the alignment of vLine label.\n      Type: String\n      Range: left, center, right",
    "body": "\"labelHAlign\": \"\""
  },
  "LabelVAlign": {
    "prefix": "labelVAlign",
    "description": "Description: Vertical anchor point for the alignment of vLine label.\n      Type: String\n      Range: top, middle, bottom",
    "body": "\"labelVAlign\": \"\""
  },
  "StartValue": {
    "prefix": "startValue",
    "description": "Description: The starting value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `startValue` will be 102.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"startValue\": \"\""
  },
  "EndValue": {
    "prefix": "endValue",
    "description": "Description: The ending y-axis value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `endValue` will be 109. If you do not specify a value for `endValue`, it will automatically assume the same value as `startValue`.\n      Type: Number\n      Range: Numeric Value",
    "body": "\"endValue\": \"\""
  },
  "IsTrendZone": {
    "prefix": "isTrendZone",
    "description": "Description: Whether the trend will be displayed as a line or a zone (fill-colored rectangle).\n      Type: Boolean\n      Range: 0/1",
    "body": "\"isTrendZone\": \"${1|1,0|}\""
  },
  "ShowOnTop": {
    "prefix": "showOnTop",
    "description": "Description: Whether the trend line/zone will be displayed over data plots or under them.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showOnTop\": \"${1|1,0|}\""
  },
  "ValueOnRight": {
    "prefix": "valueOnRight",
    "description": "Description: Whether to show the trend line value on left side or right side of chart. This is particularly useful when the trend line display values on the chart are colliding with divisional lines values on the chart.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"valueOnRight\": \"${1|1,0|}\""
  },
  "TrendlineColor": {
    "prefix": "trendlineColor",
    "description": "Description: Sets color of all the trend lines and its associated text in the chart.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendlineColor\": \"\""
  },
  "TrendlineThickness": {
    "prefix": "trendlineThickness",
    "description": "Description: If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.\n      Type: Number\n      Range: In Pixels",
    "body": "\"trendlineThickness\": \"\""
  },
  "TrendlineAlpha": {
    "prefix": "trendlineAlpha",
    "description": "Description: Sets transparency for all the trend lines in your charts.\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendlineAlpha\": \"\""
  },
  "TrendLineToolText": {
    "prefix": "trendLineToolText",
    "description": "Description: Sets the tooltip text of the trend-line. It accepts macros, plain text, and HTML tags, as string.\n      Type: String\n",
    "body": "\"trendLineToolText\": \"\""
  },
  "ShowTrendlinesOnTop": {
    "prefix": "showTrendlinesOnTop",
    "description": "Description: Whether all the trend line/zone will be displayed over data plots or under them.\n      Type: Boolean\n      Range: 0/1",
    "body": "\"showTrendlinesOnTop\": \"${1|1,0|}\""
  },
  "TrendValueFont": {
    "prefix": "trendValueFont",
    "description": "Description: Sets the font family for the trend-line display value.\n      Type: String\n      Range: Font Name",
    "body": "\"trendValueFont\": \"\""
  },
  "TrendValueFontSize": {
    "prefix": "trendValueFontSize",
    "description": "Description: Sets the font size for the trend-line display value.\n      Type: Number\n      Range:  ",
    "body": "\"trendValueFontSize\": \"\""
  },
  "TrendValueFontBold": {
    "prefix": "trendValueFontBold",
    "description": "Description: Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueFontBold\": \"${1|1,0|}\""
  },
  "TrendValueFontItalic": {
    "prefix": "trendValueFontItalic",
    "description": "Description: Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueFontItalic\": \"${1|1,0|}\""
  },
  "TrendValueBgColor": {
    "prefix": "trendValueBgColor",
    "description": "Description: Sets the background color for the trend-line display value.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendValueBgColor\": \"\""
  },
  "TrendValueBorderColor": {
    "prefix": "trendValueBorderColor",
    "description": "Description: Sets the border color for the trend-line display value.\n      Type: Color\n      Range: Hex Color Code",
    "body": "\"trendValueBorderColor\": \"\""
  },
  "TrendValueAlpha": {
    "prefix": "trendValueAlpha",
    "description": "Description: Sets the transparency for the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueAlpha\": \"\""
  },
  "TrendValueBgAlpha": {
    "prefix": "trendValueBgAlpha",
    "description": "Description: Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueBgAlpha\": \"\""
  },
  "TrendValueBorderAlpha": {
    "prefix": "trendValueBorderAlpha",
    "description": "Description: Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100\n      Type: Number\n      Range: 0 - 100",
    "body": "\"trendValueBorderAlpha\": \"\""
  },
  "TrendValueBorderPadding": {
    "prefix": "trendValueBorderPadding",
    "description": "Description: Sets padding for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderPadding\": \"\""
  },
  "TrendValueBorderRadius": {
    "prefix": "trendValueBorderRadius",
    "description": "Description: Sets the radius for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderRadius\": \"\""
  },
  "TrendValueBorderThickness": {
    "prefix": "trendValueBorderThickness",
    "description": "Description: Sets the thickness for the border around the trend-line display value. \n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderThickness\": \"\""
  },
  "TrendValueBorderDashed": {
    "prefix": "trendValueBorderDashed",
    "description": "Description: Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)\n      Type: Boolean\n      Range: 0/1",
    "body": "\"trendValueBorderDashed\": \"${1|1,0|}\""
  },
  "TrendValueBorderDashLen": {
    "prefix": "trendValueBorderDashLen",
    "description": "Description: Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderDashLen\": \"\""
  },
  "TrendValueBorderDashGap": {
    "prefix": "trendValueBorderDashGap",
    "description": "Description: Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.\n      Type: Number\n      Range: In pixels",
    "body": "\"trendValueBorderDashGap\": \"\""
  },
  "Instance": {
    "prefix": "new FusionCharts",
    "body": [
      "new FusionCharts({",
      "\twidth: '',",
      "\theight: '',",
      "\ttype: '',",
      "\tdataFormat: '',",
      "\trenderAt: '',",
      "\tdataSource: {",
      "\t\tchart: {",
      "\t\t\t${1}",
      "\t\t},",
      "\t\tdata: [",
      "\t\t]",
      "\t}",
      "});"
    ],
    "description": "Create a new FusionCharts instance"
  }
}
